{
  "version": 3,
  "sources": ["../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../stackframe/stackframe.js", "../../error-stack-parser/error-stack-parser.js", "../../has-symbols/shams.js", "../../has-symbols/index.js", "../../has-proto/index.js", "../../function-bind/implementation.js", "../../function-bind/index.js", "../../hasown/index.js", "../../get-intrinsic/index.js", "../../has-property-descriptors/index.js", "../../gopd/index.js", "../../define-data-property/index.js", "../../set-function-length/index.js", "../../call-bind/index.js", "../../call-bind/callBound.js", "../../object-inspect/index.js", "../../side-channel/index.js", "../../qs/lib/formats.js", "../../qs/lib/utils.js", "../../qs/lib/stringify.js", "../../qs/lib/parse.js", "../../qs/lib/index.js", "../../warn-once/index.js", "../../export-to-csv-fix-source-map/build/export-to-csv.js", "../../export-to-csv-fix-source-map/build/index.js", "../../papaparse/papaparse.min.js", "../../@refinedev/core/src/components/pages/error/index.tsx", "../../@refinedev/core/src/hooks/auth/usePermissions/index.ts", "../../@refinedev/core/src/definitions/table/index.ts", "../../@refinedev/core/src/definitions/helpers/userFriendlySeconds/index.ts", "../../@refinedev/core/src/definitions/helpers/importCSVMapper/index.ts", "../../@refinedev/core/src/definitions/helpers/userFriendlyResourceName/index.ts", "../../@refinedev/core/src/definitions/helpers/handleUseParams/index.tsx", "../../@refinedev/core/src/definitions/helpers/pickNotDeprecated/index.ts", "../../@refinedev/core/src/definitions/helpers/keys/index.ts", "../../@refinedev/core/src/definitions/helpers/queryKeys/index.ts", "../../@refinedev/core/src/definitions/helpers/hasPermission/index.ts", "../../@refinedev/core/src/definitions/helpers/router/is-parameter.ts", "../../@refinedev/core/src/definitions/helpers/router/split-to-segments.ts", "../../@refinedev/core/src/definitions/helpers/router/is-segment-counts-same.ts", "../../@refinedev/core/src/definitions/helpers/router/remove-leading-trailing-slashes.ts", "../../@refinedev/core/src/definitions/helpers/router/check-by-segments.ts", "../../@refinedev/core/src/definitions/helpers/router/get-default-action-path.ts", "../../@refinedev/core/src/definitions/helpers/router/get-parent-resource.ts", "../../@refinedev/core/src/definitions/helpers/router/get-parent-prefix-for-resource.ts", "../../@refinedev/core/src/definitions/helpers/router/get-action-routes-from-resource.ts", "../../@refinedev/core/src/definitions/helpers/router/pick-matched-route.ts", "../../@refinedev/core/src/definitions/helpers/router/match-resource-from-route.ts", "../../@refinedev/core/src/definitions/helpers/routeGenerator/index.ts", "../../@refinedev/core/src/definitions/helpers/treeView/createTreeView/index.ts", "../../@refinedev/core/src/definitions/helpers/humanizeString/index.ts", "../../@refinedev/core/src/contexts/refine/index.tsx", "../../@refinedev/core/src/components/layoutWrapper/defaultLayout/index.tsx", "../../@refinedev/core/src/definitions/helpers/handleRefineOptions/index.ts", "../../@refinedev/core/src/definitions/helpers/redirectPage/index.ts", "../../@refinedev/core/src/definitions/helpers/sequentialPromises/index.ts", "../../@refinedev/core/src/definitions/helpers/pick-resource/index.ts", "../../@refinedev/core/src/definitions/helpers/pickDataProvider/index.ts", "../../@refinedev/core/src/definitions/helpers/handleMultiple/index.ts", "../../@refinedev/core/src/definitions/helpers/useInfinitePagination/index.ts", "../../@refinedev/core/src/definitions/helpers/legacy-resource-transform/index.ts", "../../@refinedev/core/src/definitions/helpers/router/pick-route-params.ts", "../../@refinedev/core/src/definitions/helpers/router/prepare-route-params.ts", "../../@refinedev/core/src/definitions/helpers/router/compose-route.ts", "../../@refinedev/core/src/contexts/auth/index.tsx", "../../@refinedev/core/src/definitions/helpers/useActiveAuthProvider/index.ts", "../../@refinedev/core/src/definitions/helpers/handlePaginationParams/index.ts", "../../@refinedev/core/src/definitions/helpers/useMediaQuery/index.ts", "../../@refinedev/core/src/definitions/helpers/safe-translate/index.ts", "../../@refinedev/core/src/definitions/helpers/generateDocumentTitle/index.ts", "../../@refinedev/core/src/hooks/refine/useMutationMode.ts", "../../@refinedev/core/src/hooks/refine/useWarnAboutChange/index.ts", "../../@refinedev/core/src/contexts/unsavedWarn/index.tsx", "../../@refinedev/core/src/hooks/refine/useSyncWithLocation.ts", "../../@refinedev/core/src/hooks/refine/useTitle.tsx", "../../@refinedev/core/src/hooks/refine/useRefineContext.ts", "../../@refinedev/core/src/definitions/helpers/useUserFriendlyName/index.ts", "../../@refinedev/core/src/definitions/helpers/flatten-object-keys/index.ts", "../../@refinedev/core/src/definitions/helpers/property-path-to-array/index.ts", "../../@refinedev/core/src/definitions/upload/file2Base64/index.ts", "../../@refinedev/core/src/hooks/useKeys/index.tsx", "../../@refinedev/core/src/hooks/auth/useGetIdentity/index.ts", "../../@refinedev/core/src/hooks/auth/useLogout/index.ts", "../../@refinedev/core/src/hooks/auth/useInvalidateAuthStore/index.ts", "../../@refinedev/core/src/hooks/auth/useLogin/index.ts", "../../@refinedev/core/src/hooks/auth/useRegister/index.ts", "../../@refinedev/core/src/hooks/auth/useForgotPassword/index.ts", "../../@refinedev/core/src/hooks/auth/useUpdatePassword/index.ts", "../../@refinedev/core/src/hooks/auth/useIsAuthenticated/index.ts", "../../@refinedev/core/src/hooks/auth/useOnError/index.ts", "../../@refinedev/core/src/hooks/auth/useIsExistAuthentication/index.ts", "../../@refinedev/core/src/hooks/data/useList.ts", "../../@refinedev/core/src/hooks/useLoadingOvertime/index.ts", "../../@refinedev/core/src/hooks/data/useOne.ts", "../../@refinedev/core/src/hooks/data/useMany.ts", "../../@refinedev/core/src/hooks/data/useUpdate.ts", "../../@refinedev/core/src/contexts/undoableQueue/undoableQueueContext.tsx", "../../@refinedev/core/src/hooks/data/useCreate.ts", "../../@refinedev/core/src/hooks/data/useDelete.ts", "../../@refinedev/core/src/hooks/data/useCreateMany.ts", "../../@refinedev/core/src/hooks/data/useUpdateMany.ts", "../../@refinedev/core/src/hooks/data/useDeleteMany.ts", "../../@refinedev/core/src/hooks/data/useApiUrl.ts", "../../@refinedev/core/src/hooks/data/useCustom.ts", "../../@refinedev/core/src/hooks/data/useCustomMutation.ts", "../../@refinedev/core/src/hooks/data/useDataProvider.tsx", "../../@refinedev/core/src/contexts/data/index.tsx", "../../@refinedev/core/src/hooks/data/useInfiniteList.ts", "../../@refinedev/core/src/contexts/live/index.tsx", "../../@refinedev/core/src/hooks/invalidate/index.tsx", "../../@refinedev/core/src/hooks/resource/useResource/index.ts", "../../@refinedev/core/src/contexts/resource/index.tsx", "../../@refinedev/core/src/hooks/deepMemo/index.tsx", "../../@refinedev/core/src/hooks/memoized/index.tsx", "../../@refinedev/core/src/contexts/router-picker/index.tsx", "../../@refinedev/core/src/hooks/router/use-parsed/index.tsx", "../../@refinedev/core/src/contexts/router/index.tsx", "../../@refinedev/core/src/hooks/router/use-parse/index.tsx", "../../@refinedev/core/src/hooks/resource/useResourceWithRoute/index.ts", "../../@refinedev/core/src/hooks/live/useResourceSubscription/index.ts", "../../@refinedev/core/src/hooks/live/useLiveMode/index.ts", "../../@refinedev/core/src/hooks/live/useSubscription/index.ts", "../../@refinedev/core/src/hooks/live/usePublish/index.ts", "../../@refinedev/core/src/hooks/notification/useCancelNotification/index.tsx", "../../@refinedev/core/src/hooks/notification/useNotification/index.ts", "../../@refinedev/core/src/contexts/notification/index.tsx", "../../@refinedev/core/src/hooks/notification/useHandleNotification/index.ts", "../../@refinedev/core/src/hooks/translate/useSetLocale.ts", "../../@refinedev/core/src/contexts/translation/index.tsx", "../../@refinedev/core/src/hooks/translate/useTranslate.ts", "../../@refinedev/core/src/hooks/translate/useGetLocale.ts", "../../@refinedev/core/src/hooks/export/index.ts", "../../@refinedev/core/src/hooks/form/useForm.ts", "../../@refinedev/core/src/hooks/redirection/index.ts", "../../@refinedev/core/src/hooks/router/use-go/index.tsx", "../../@refinedev/core/src/hooks/router/use-get-to-path/index.ts", "../../@refinedev/core/src/hooks/router/use-back/index.tsx", "../../@refinedev/core/src/hooks/navigation/index.ts", "../../@refinedev/core/src/hooks/show/useShow.ts", "../../@refinedev/core/src/hooks/import/index.tsx", "../../@refinedev/core/src/hooks/modal/useModal/index.tsx", "../../@refinedev/core/src/hooks/router/use-to-path/index.ts", "../../@refinedev/core/src/hooks/router/use-link/index.tsx", "../../@refinedev/core/src/hooks/legacy-router/useRouterContext.ts", "../../@refinedev/core/src/contexts/legacy-router/index.tsx", "../../@refinedev/core/src/hooks/accessControl/useCan/index.ts", "../../@refinedev/core/src/contexts/accessControl/index.tsx", "../../@refinedev/core/src/definitions/helpers/sanitize-resource/index.ts", "../../@refinedev/core/src/hooks/accessControl/useCanWithoutCache.ts", "../../@refinedev/core/src/hooks/useSelect/index.ts", "../../@refinedev/core/src/hooks/useTable/index.ts", "../../@refinedev/core/src/hooks/auditLog/useLog/index.ts", "../../@refinedev/core/src/contexts/auditLog/index.tsx", "../../@refinedev/core/src/hooks/auditLog/useLogList/index.ts", "../../@refinedev/core/src/hooks/breadcrumb/index.ts", "../../@refinedev/core/src/hooks/menu/useMenu.tsx", "../../@refinedev/core/src/definitions/helpers/menu/create-resource-key.ts", "../../@refinedev/core/src/definitions/helpers/menu/create-tree.ts", "../../@refinedev/core/src/hooks/useMeta/index.ts", "../../@refinedev/core/src/components/pages/login/index.tsx", "../../@refinedev/core/src/components/pages/auth/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/login/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/register/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/forgotPassword/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/updatePassword/index.tsx", "../../@refinedev/core/src/components/pages/ready/index.tsx", "../../@refinedev/core/src/components/pages/welcome/index.tsx", "../../@refinedev/core/src/components/containers/refine/index.tsx", "../../@refinedev/core/src/components/telemetry/index.tsx", "../../@refinedev/core/src/hooks/useTelemetryData/index.ts", "../../@refinedev/core/src/definitions/helpers/check-router-prop-misuse/index.ts", "../../@refinedev/core/src/hooks/router/use-router-misuse-warning/index.ts", "../../@refinedev/core/src/components/undoableQueue/index.tsx", "../../@refinedev/core/src/components/layoutWrapper/index.tsx", "../../@refinedev/core/src/components/authenticated/index.tsx", "../../@refinedev/core/src/components/routeChangeHandler/index.tsx", "../../@refinedev/core/src/components/canAccess/index.tsx", "../../@refinedev/core/src/components/gh-banner/index.tsx", "../../@refinedev/core/src/components/gh-banner/styles.ts", "../../@refinedev/core/src/components/autoSaveIndicator/index.tsx", "../../@tanstack/query-core/src/subscribable.ts", "../../@tanstack/query-core/src/utils.ts", "../../@tanstack/query-core/src/focusManager.ts", "../../@tanstack/query-core/src/onlineManager.ts", "../../@tanstack/query-core/src/retryer.ts", "../../@tanstack/query-core/src/logger.ts", "../../@tanstack/query-core/src/notifyManager.ts", "../../@tanstack/query-core/src/removable.ts", "../../@tanstack/query-core/src/query.ts", "../../@tanstack/query-core/src/queryCache.ts", "../../@tanstack/query-core/src/mutation.ts", "../../@tanstack/query-core/src/mutationCache.ts", "../../@tanstack/query-core/src/infiniteQueryBehavior.ts", "../../@tanstack/query-core/src/queryClient.ts", "../../@tanstack/query-core/src/queryObserver.ts", "../../@tanstack/query-core/src/infiniteQueryObserver.ts", "../../@tanstack/query-core/src/mutationObserver.ts", "../../@tanstack/react-query/src/reactBatchedUpdates.ts", "../../@tanstack/react-query/src/setBatchUpdatesFn.ts", "../../@tanstack/react-query/src/useSyncExternalStore.ts", "../../@tanstack/react-query/src/QueryClientProvider.tsx", "../../@tanstack/react-query/src/isRestoring.tsx", "../../@tanstack/react-query/src/QueryErrorResetBoundary.tsx", "../../@tanstack/react-query/src/utils.ts", "../../@tanstack/react-query/src/errorBoundaryUtils.ts", "../../@tanstack/react-query/src/suspense.ts", "../../@tanstack/react-query/src/useBaseQuery.ts", "../../@tanstack/react-query/src/useQuery.ts", "../../@tanstack/react-query/src/useMutation.ts", "../../@tanstack/react-query/src/useInfiniteQuery.ts", "../../@refinedev/devtools-internal/src/get-trace.ts", "../../@refinedev/devtools-internal/src/clean-stack.ts", "../../@refinedev/devtools-internal/src/constants.ts", "../../@refinedev/devtools-internal/src/is-refine-stack.ts", "../../@refinedev/devtools-internal/src/get-package-name-from-filename.ts", "../../@refinedev/devtools-internal/src/get-resource-path.ts", "../../@refinedev/devtools-internal/src/get-xray.ts", "../../@refinedev/devtools-internal/src/use-query-subscription.tsx", "../../@refinedev/devtools-internal/src/listeners.ts", "../../@refinedev/devtools-internal/src/create-identifier.ts"],
  "sourcesContent": ["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n", "(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {(o: {}, p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call, $hasOwn);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @typedef {(...args: unknown[]) => unknown} Func */\n\n/** @type {<T extends Func = Func>(fn: T, length: number, loose?: boolean) => T} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CsvConfigConsts = (function () {\n    function CsvConfigConsts() {\n    }\n    CsvConfigConsts.EOL = \"\\r\\n\";\n    CsvConfigConsts.BOM = \"\\ufeff\";\n    CsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';\n    CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';\n    CsvConfigConsts.DEFAULT_QUOTE = '\"';\n    CsvConfigConsts.DEFAULT_SHOW_TITLE = false;\n    CsvConfigConsts.DEFAULT_TITLE = 'My Generated Report';\n    CsvConfigConsts.DEFAULT_FILENAME = 'generated';\n    CsvConfigConsts.DEFAULT_SHOW_LABELS = false;\n    CsvConfigConsts.DEFAULT_USE_TEXT_FILE = false;\n    CsvConfigConsts.DEFAULT_USE_BOM = true;\n    CsvConfigConsts.DEFAULT_HEADER = [];\n    CsvConfigConsts.DEFAULT_KEYS_AS_HEADERS = false;\n    return CsvConfigConsts;\n}());\nexports.CsvConfigConsts = CsvConfigConsts;\nexports.ConfigDefaults = {\n    filename: CsvConfigConsts.DEFAULT_FILENAME,\n    fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n    quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n    decimalSeparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n    showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n    showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n    title: CsvConfigConsts.DEFAULT_TITLE,\n    useTextFile: CsvConfigConsts.DEFAULT_USE_TEXT_FILE,\n    useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n    headers: CsvConfigConsts.DEFAULT_HEADER,\n    useKeysAsHeaders: CsvConfigConsts.DEFAULT_KEYS_AS_HEADERS,\n};\nvar ExportToCsv = (function () {\n    function ExportToCsv(options) {\n        this._csv = \"\";\n        var config = options || {};\n        this._options = objectAssign({}, exports.ConfigDefaults, config);\n        if (this._options.useKeysAsHeaders\n            && this._options.headers\n            && this._options.headers.length > 0) {\n            console.warn('Option to use object keys as headers was set, but headers were still passed!');\n        }\n    }\n    Object.defineProperty(ExportToCsv.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (options) {\n            this._options = objectAssign({}, exports.ConfigDefaults, options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Generate and Download Csv\n     */\n    ExportToCsv.prototype.generateCsv = function (jsonData, shouldReturnCsv) {\n        if (shouldReturnCsv === void 0) { shouldReturnCsv = false; }\n        // Make sure to reset csv data on each run\n        this._csv = '';\n        this._parseData(jsonData);\n        if (this._options.useBom) {\n            this._csv += CsvConfigConsts.BOM;\n        }\n        if (this._options.showTitle) {\n            this._csv += this._options.title + '\\r\\n\\n';\n        }\n        this._getHeaders();\n        this._getBody();\n        if (this._csv == '') {\n            console.log(\"Invalid data\");\n            return;\n        }\n        // When the consumer asks for the data, exit the function\n        // by returning the CSV data built at this point\n        if (shouldReturnCsv) {\n            return this._csv;\n        }\n        // Create CSV blob to download if requesting in the browser and the\n        // consumer doesn't set the shouldReturnCsv param\n        var FileType = this._options.useTextFile ? 'plain' : 'csv';\n        var fileExtension = this._options.useTextFile ? '.txt' : '.csv';\n        var blob = new Blob([this._csv], { \"type\": \"text/\" + FileType + \";charset=utf8;\" });\n        if (navigator.msSaveBlob) {\n            var filename = this._options.filename.replace(/ /g, \"_\") + fileExtension;\n            navigator.msSaveBlob(blob, filename);\n        }\n        else {\n            var attachmentType = this._options.useTextFile ? 'text' : 'csv';\n            var uri = 'data:attachment/' + attachmentType + ';charset=utf-8,' + encodeURI(this._csv);\n            var link = document.createElement(\"a\");\n            link.href = URL.createObjectURL(blob);\n            link.setAttribute('visibility', 'hidden');\n            link.download = this._options.filename.replace(/ /g, \"_\") + fileExtension;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    };\n    /**\n     * Create Headers\n     */\n    ExportToCsv.prototype._getHeaders = function () {\n        if (!this._options.showLabels && !this._options.useKeysAsHeaders) {\n            return;\n        }\n        var useKeysAsHeaders = this._options.useKeysAsHeaders;\n        var headers = useKeysAsHeaders ? Object.keys(this._data[0]) : this._options.headers;\n        if (headers.length > 0) {\n            var row = \"\";\n            for (var keyPos = 0; keyPos < headers.length; keyPos++) {\n                row += headers[keyPos] + this._options.fieldSeparator;\n            }\n            row = row.slice(0, -1);\n            this._csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Create Body\n     */\n    ExportToCsv.prototype._getBody = function () {\n        var keys = Object.keys(this._data[0]);\n        for (var i = 0; i < this._data.length; i++) {\n            var row = \"\";\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                row += this._formatData(this._data[i][key]) + this._options.fieldSeparator;\n            }\n            row = row.slice(0, -1);\n            this._csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Format Data\n     * @param {any} data\n     */\n    ExportToCsv.prototype._formatData = function (data) {\n        if (this._options.decimalSeparator === 'locale' && this._isFloat(data)) {\n            return data.toLocaleString();\n        }\n        if (this._options.decimalSeparator !== '.' && this._isFloat(data)) {\n            return data.toString().replace('.', this._options.decimalSeparator);\n        }\n        if (typeof data === 'string') {\n            data = data.replace(/\"/g, '\"\"');\n            if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) {\n                data = this._options.quoteStrings + data + this._options.quoteStrings;\n            }\n            return data;\n        }\n        if (typeof data === 'boolean') {\n            return data ? 'TRUE' : 'FALSE';\n        }\n        return data;\n    };\n    /**\n     * Check if is Float\n     * @param {any} input\n     */\n    ExportToCsv.prototype._isFloat = function (input) {\n        return +input === input && (!isFinite(input) || Boolean(input % 1));\n    };\n    /**\n     * Parse the collection given to it\n     *\n     * @private\n     * @param {*} jsonData\n     * @returns {any[]}\n     * @memberof ExportToCsv\n     */\n    ExportToCsv.prototype._parseData = function (jsonData) {\n        this._data = typeof jsonData != 'object' ? JSON.parse(jsonData) : jsonData;\n        return this._data;\n    };\n    return ExportToCsv;\n}());\nexports.ExportToCsv = ExportToCsv;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n/**\n * Convet to Object\n * @param {any} val\n */\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\n/**\n * Assign data  to new Object\n * @param {any}   target\n * @param {any[]} ...source\n */\nfunction objectAssign(target) {\n    var source = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        source[_i - 1] = arguments[_i];\n    }\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n}\n", "\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./export-to-csv\"));\n", "/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=f.IS_PAPA_WORKER||!1,a={},u=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;J(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!J(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",i,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var r,i;return t.onmessage=_,t.id=u++,a[t.id]=t}();return i.userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=J(t.step),t.chunk=J(t.chunk),t.complete=J(t.complete),t.error=J(t.error),delete t.worker,void i.postMessage({input:e,config:t,workerId:i.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?(e=function(e){if(65279===e.charCodeAt(0))return e.slice(1);return e}(e),n=t.download?new l(t):new p(t)):!0===e.readable&&J(e.read)&&J(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,r=!1,i=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(r=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");i=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);(\"boolean\"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\\-@\\t\\r].*$/)}();var u=new RegExp(Q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return h(null,e,r);if(\"object\"==typeof e[0])return h(i||Object.keys(e[0]),e,r)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||i),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),h(e.fields||[],e.data||[],r);throw new Error(\"Unable to serialize unrecognized input\");function h(e,t,r){var i=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(i+=m),i+=v(e[a],a);0<t.length&&(i+=y)}for(var o=0;o<t.length;o++){var u=n?e.length:t[o].length,h=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(r&&!n&&(h=\"greedy\"===r?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===r&&n){for(var d=[],l=0;l<u;l++){var c=s?e[l]:l;d.push(t[o][c])}h=\"\"===d.join(\"\").trim()}if(!h){for(var p=0;p<u;p++){0<p&&!f&&(i+=m);var g=n&&s?e[p]:p;i+=v(t[o][g],p)}o<t.length-1&&(!r||0<u&&!f)&&(i+=y)}}return i}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var r=!1;o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0);var i=e.toString().replace(u,a);return(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var r=0;r<t.length;r++)if(-1<e.indexOf(t[r]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=r,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var r=o.config||{},u=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)u.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},r)})}),e(),this;function e(){if(0!==u.length){var e,t,r,i,n=u[0];if(J(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,r=n.inputElem,i=s.reason,void(J(o.error)&&o.error({name:e},t,r,i));if(\"skip\"===s.action)return void h();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void h()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){J(a)&&a(e,n.file,n.inputElem),h()},b.parse(n.file,n.instanceConfig)}else J(o.complete)&&o.complete()}function h(){u.splice(0,1),e()}}}function h(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new r(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&J(this._config.beforeFirstChunk)){var r=this._config.beforeFirstChunk(e);void 0!==r&&(e=r)}this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(i,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=i.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(J(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!J(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){J(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var i;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),h.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(i=new XMLHttpRequest,this._config.withCredentials&&(i.withCredentials=this._config.withCredentials),n||(i.onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)),i.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)i.setRequestHeader(t,e[t])}if(this._config.chunkSize){var r=this._start+this._config.chunkSize-1;i.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+r)}try{i.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===i.status&&this._chunkError()}},this._chunkLoaded=function(){4===i.readyState&&(i.status<200||400<=i.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:i.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(i),this.parseChunk(i.responseText)))},this._chunkError=function(e){var t=i.statusText||e;this._sendError(new Error(t))}}function c(e){var i,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),h.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((i=new FileReader).onload=v(this._chunkLoaded,this),i.onerror=v(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var r=i.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:r}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function p(e){var r;h.call(this,e=e||{}),this.stream=function(e){return r=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=r.substring(0,t),r=r.substring(t)):(e=r,r=\"\"),this._finished=!r,this.parseChunk(e)}}}function g(e){h.call(this,e=e||{});var t=[],r=!0,i=!1;this.pause=function(){h.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){h.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){i&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):r=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),i=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function r(m){var a,o,u,i=Math.pow(2,53),n=-i,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,h=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,t=this,r=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(J(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;r+=e.data.length,m.preview&&r>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){return c&&u&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),u=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){J(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var r,i=m.header?{}:[];for(r=0;r<e.length;r++){var n=r,s=e[r];m.header&&(n=r>=l.length?\"__parsed_extra\":l[r]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+r,f+t):r<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+r,f+t)),i}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return r=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[r]&&(m.dynamicTyping[r]=m.dynamicTypingFunction(r)),!0===(m.dynamicTyping[r]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<i)return!0}return!1}(t)?parseFloat(t):h.test(t)?new Date(t):\"\"===t?null:t):t;var r}function k(e,t,r,i){var n={type:e,code:t,message:r};void 0!==i&&(n.row=i),c.errors.push(n)}this.parse=function(e,t,r){var i=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var r=new RegExp(Q(t)+\"([^]*?)\"+Q(t),\"gm\"),i=(e=e.replace(r,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<i[0].length;if(1===i.length||s)return\"\\n\";for(var a=0,o=0;o<i.length;o++)\"\\n\"===i[o][0]&&a++;return a>=i.length/2?\"\\r\\n\":\"\\r\"}(e,i)),u=!1,m.delimiter)J(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,r,i,n){var s,a,o,u;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var h=0;h<n.length;h++){var f=n[h],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:i,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(r&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===u||u<l)&&1.99<l&&(a=d,s=f,u=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(u=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,r),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=J(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,J(m.complete)&&m.complete(c),a=\"\"}}function Q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(j){var z,M=(j=j||{}).delimiter,P=j.newline,U=j.comments,q=j.step,N=j.preview,B=j.fastMode,K=z=void 0===j.quoteChar||null===j.quoteChar?'\"':j.quoteChar;if(void 0!==j.escapeChar&&(K=j.escapeChar),(\"string\"!=typeof M||-1<b.BAD_DELIMITERS.indexOf(M))&&(M=\",\"),U===M)throw new Error(\"Comment character same as delimiter\");!0===U?U=\"#\":(\"string\"!=typeof U||-1<b.BAD_DELIMITERS.indexOf(U))&&(U=!1),\"\\n\"!==P&&\"\\r\"!==P&&\"\\r\\n\"!==P&&(P=\"\\n\");var W=0,H=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=M.length,s=P.length,a=U.length,o=J(q),u=[],h=[],f=[],d=W=0;if(!i)return L();if(j.header&&!t){var l=i.split(P)[0].split(M),c=[],p={},g=!1;for(var _ in l){var m=l[_];J(j.transformHeader)&&(m=j.transformHeader(m,_));var y=m,v=p[m]||0;for(0<v&&(g=!0,y=m+\"_\"+v),p[m]=v+1;c.includes(y);)y=y+\"_\"+v;c.push(y)}if(g){var k=i.split(P);k[0]=c.join(M),i=k.join(P)}}if(B||!1!==B&&-1===i.indexOf(z)){for(var b=i.split(P),E=0;E<b.length;E++){if(f=b[E],W+=f.length,E!==b.length-1)W+=P.length;else if(r)return L();if(!U||f.substring(0,a)!==U){if(o){if(u=[],I(f.split(M)),F(),H)return L()}else I(f.split(M));if(N&&N<=E)return u=u.slice(0,N),L(!0)}}return L()}for(var w=i.indexOf(M,W),R=i.indexOf(P,W),C=new RegExp(Q(K)+Q(z),\"g\"),S=i.indexOf(z,W);;)if(i[W]!==z)if(U&&0===f.length&&i.substring(W,W+a)===U){if(-1===R)return L();W=R+s,R=i.indexOf(P,W),w=i.indexOf(M,W)}else if(-1!==w&&(w<R||-1===R))f.push(i.substring(W,w)),W=w+e,w=i.indexOf(M,W);else{if(-1===R)break;if(f.push(i.substring(W,R)),D(R+s),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0)}else for(S=W,W++;;){if(-1===(S=i.indexOf(z,S+1)))return r||h.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:u.length,index:W}),T();if(S===n-1)return T(i.substring(W,S).replace(C,z));if(z!==K||i[S+1]!==K){if(z===K||0===S||i[S-1]!==K){-1!==w&&w<S+1&&(w=i.indexOf(M,S+1)),-1!==R&&R<S+1&&(R=i.indexOf(P,S+1));var O=A(-1===R?w:Math.min(w,R));if(i.substr(S+1+O,e)===M){f.push(i.substring(W,S).replace(C,z)),i[W=S+1+O+e]!==z&&(S=i.indexOf(z,W)),w=i.indexOf(M,W),R=i.indexOf(P,W);break}var x=A(R);if(i.substring(S+1+x,S+1+x+s)===P){if(f.push(i.substring(W,S).replace(C,z)),D(S+1+x+s),w=i.indexOf(M,W),S=i.indexOf(z,W),o&&(F(),H))return L();if(N&&u.length>=N)return L(!0);break}h.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:u.length,index:W}),S++}}else S++}return T();function I(e){u.push(e),d=W}function A(e){var t=0;if(-1!==e){var r=i.substring(S+1,e);r&&\"\"===r.trim()&&(t=r.length)}return t}function T(e){return r||(void 0===e&&(e=i.substring(W)),f.push(e),W=n,I(f),o&&F()),L()}function D(e){W=e,I(f),f=[],R=i.indexOf(P,W)}function L(e){return{data:u,errors:h,meta:{delimiter:M,linebreak:P,aborted:H,truncated:!!e,cursor:d+(t||0)}}}function F(){q(L()),u=[],h=[]}},this.abort=function(){H=!0},this.getCharIndex=function(){return W}}function _(e){var t=e.data,r=a[t.workerId],i=!1;if(t.error)r.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){i=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(J(r.userStep)){for(var s=0;s<t.results.data.length&&(r.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!i);s++);delete t.results}else J(r.userChunk)&&(r.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!i&&m(t.workerId,t.results)}function m(e,t){var r=a[e];J(r.userComplete)&&r.userComplete(t),r.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var r in e)t[r]=w(e[r]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function J(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var r=b.parse(t.input,t.config);r&&f.postMessage({workerId:b.WORKER_ID,results:r,finished:!0})}}),(l.prototype=Object.create(h.prototype)).constructor=l,(c.prototype=Object.create(h.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(h.prototype)).constructor=g,b});", "import React, { useEffect, useState } from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    useResource,\n    useGo,\n    useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action: action,\n                        resource: resource.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    return (\n        <>\n            <h1>\n                {translate(\n                    \"pages.error.404\",\n                    undefined,\n                    \"Sorry, the page you visited does not exist.\",\n                )}\n            </h1>\n            {errorMessage && <p>{errorMessage}</p>}\n            <button\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n            </button>\n        </>\n    );\n};\n", "import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { PermissionResponse } from \"../../../interfaces\";\n\nexport type UsePermissionsLegacyProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: true;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsProps<TData = PermissionResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n    UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<TData = any>(\n    props: UsePermissionsLegacyProps<TData>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<TData = PermissionResponse>(\n    props?: UsePermissionsProps<TData>,\n): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<TData = any>(\n    props?: UsePermissionsCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function usePermissions<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    options,\n}: UsePermissionsProps<TData> | UsePermissionsLegacyProps<TData> = {}):\n    | UsePermissionsReturnType\n    | UsePermissionsLegacyReturnType<TData> {\n    const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n    const { getPermissions } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>({\n        queryKey: keys().auth().action(\"permissions\").get(preferLegacyKeys),\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        queryFn:\n            (getPermissions as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve(undefined)),\n        enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n        ...(v3LegacyAuthProviderCompatible ? {} : options),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n            ...getXRay(\"usePermissions\", preferLegacyKeys),\n        },\n    });\n\n    const legacyQueryResponse = useQuery<TData>({\n        queryKey: [\n            ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        queryFn: legacyGetPermission ?? (() => Promise.resolve(undefined)),\n        enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n        ...(v3LegacyAuthProviderCompatible ? options : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n            ...getXRay(\"usePermissions\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n", "import qs, { IStringifyOptions } from \"qs\";\nimport unionWith from \"lodash-es/unionWith\";\nimport differenceWith from \"lodash-es/differenceWith\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    CrudFilters,\n    CrudSorting,\n    CrudFilter,\n    CrudSort,\n    CrudOperators,\n    SortOrder,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nexport const parseTableParams = (url: string) => {\n    const { current, pageSize, sorter, sorters, filters } = qs.parse(\n        url.substring(1), // remove first ? character\n    );\n\n    return {\n        parsedCurrent: current && Number(current),\n        parsedPageSize: pageSize && Number(pageSize),\n        parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSorting) ?? [],\n        parsedFilters: (filters as CrudFilters) ?? [],\n    };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n    const url = qs.stringify(params);\n    return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n    pagination?: { current?: number; pageSize?: number };\n    sorters: CrudSorting;\n    filters: CrudFilters;\n    [key: string]: any;\n}): string => {\n    const options: IStringifyOptions = {\n        skipNulls: true,\n        arrayFormat: \"indices\",\n        encode: false,\n    };\n    const { pagination, sorter, sorters, filters, ...rest } = params;\n\n    const queryString = qs.stringify(\n        {\n            ...rest,\n            ...(pagination ? pagination : {}),\n            sorters: pickNotDeprecated(sorters, sorter),\n            filters,\n        },\n        options,\n    );\n\n    return queryString;\n};\n\nexport const compareFilters = (\n    left: CrudFilter,\n    right: CrudFilter,\n): boolean => {\n    if (\n        left.operator !== \"and\" &&\n        left.operator !== \"or\" &&\n        right.operator !== \"and\" &&\n        right.operator !== \"or\"\n    ) {\n        return (\n            (\"field\" in left ? left.field : undefined) ==\n                (\"field\" in right ? right.field : undefined) &&\n            left.operator == right.operator\n        );\n    }\n\n    return (\n        (\"key\" in left ? left.key : undefined) ==\n            (\"key\" in right ? right.key : undefined) &&\n        left.operator == right.operator\n    );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n    left.field == right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n    permanentFilter: CrudFilters,\n    newFilters: CrudFilters,\n    prevFilters: CrudFilters = [],\n): CrudFilters => {\n    const isKeyRequired = newFilters.filter(\n        (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n    );\n\n    if (isKeyRequired.length > 1) {\n        warnOnce(\n            true,\n            `[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage`,\n        );\n    }\n\n    return unionWith(\n        permanentFilter,\n        newFilters,\n        prevFilters,\n        compareFilters,\n    ).filter(\n        (crudFilter) =>\n            crudFilter.value !== undefined &&\n            crudFilter.value !== null &&\n            (crudFilter.operator !== \"or\" ||\n                (crudFilter.operator === \"or\" &&\n                    crudFilter.value.length !== 0)) &&\n            (crudFilter.operator !== \"and\" ||\n                (crudFilter.operator === \"and\" &&\n                    crudFilter.value.length !== 0)),\n    );\n};\n\nexport const unionSorters = (\n    permanentSorter: CrudSorting,\n    newSorters: CrudSorting,\n): CrudSorting =>\n    unionWith(permanentSorter, newSorters, compareSorters).filter(\n        (crudSorter) =>\n            crudSorter.order !== undefined && crudSorter.order !== null,\n    );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n    permanentFilter: CrudFilters,\n    defaultFilter: CrudFilters,\n): CrudFilters => [\n    ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n    ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n    permanentSorter: CrudSorting,\n    defaultSorter: CrudSorting,\n): CrudSorting => [\n    ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n    ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n    columnName: string,\n    sorter?: CrudSorting,\n): SortOrder | undefined => {\n    if (!sorter) {\n        return undefined;\n    }\n\n    const sortItem = sorter.find((item) => item.field === columnName);\n\n    if (sortItem) {\n        return sortItem.order as SortOrder;\n    }\n\n    return undefined;\n};\n\nexport const getDefaultFilter = (\n    columnName: string,\n    filters?: CrudFilters,\n    operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n    const filter = filters?.find((filter) => {\n        if (\n            filter.operator !== \"or\" &&\n            filter.operator !== \"and\" &&\n            \"field\" in filter\n        ) {\n            const { operator, field } = filter;\n            return field === columnName && operator === operatorType;\n        }\n        return undefined;\n    });\n\n    if (filter) {\n        return filter.value || [];\n    }\n\n    return undefined;\n};\n", "export const userFriendlySecond = (miliseconds: number): number => {\n    return miliseconds / 1000; //convert to seconds\n};\n", "import zip from \"lodash-es/zip\";\nimport fromPairs from \"lodash-es/fromPairs\";\nimport { MapDataFn } from \"../../../interfaces\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n    data: any[][],\n    mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n    const [headers, ...body] = data;\n    return body\n        .map((entry) => fromPairs(zip(headers, entry)))\n        .map((item: any, index, array: any) =>\n            mapData.call(undefined, item, index, array),\n        );\n};\n", "import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n    resource = \"\",\n    type: \"singular\" | \"plural\",\n): string => {\n    const humanizeResource = humanizeString(resource);\n    if (type === \"singular\") {\n        return pluralize.singular(humanizeResource);\n    }\n    return pluralize.plural(humanizeResource);\n};\n", "export const handleUseParams = (params: any = {}): any => {\n    if (params?.id) {\n        return {\n            ...params,\n            id: decodeURIComponent(params.id),\n        };\n    }\n    return params;\n};\n", "/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n    ...args: T\n): T[never] => {\n    return args.find((arg) => typeof arg !== \"undefined\");\n};\n", "import { BaseKey } from \"src/interfaces\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n    | \"custom\"\n    | \"customMutation\"\n    | \"create\"\n    | \"createMany\"\n    | \"update\"\n    | \"updateMany\"\n    | \"delete\"\n    | \"deleteMany\";\n\ntype AuthActionType =\n    | \"login\"\n    | \"logout\"\n    | \"identity\"\n    | \"register\"\n    | \"forgotPassword\"\n    | \"check\"\n    | \"onError\"\n    | \"permissions\"\n    | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n    return array.findIndex(\n        (item, index) =>\n            index <= array.length - slice.length &&\n            slice.every(\n                (sliceItem, sliceIndex) =>\n                    array[index + sliceIndex] === sliceItem,\n            ),\n    );\n}\n\nexport function arrayReplace<T>(\n    array: T[],\n    partToBeReplaced: T[],\n    newPart: T[],\n): T[] {\n    const newArray: T[] = [...array];\n    const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n    if (startIndex !== -1) {\n        newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n    }\n\n    return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n    return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n    // for `list`, `many` and `one`\n    if (segments[0] === \"data\") {\n        // [data, dpName, resource, action, ...];\n        const newSegments = segments.slice(1);\n\n        if (newSegments[2] === \"many\") {\n            newSegments[2] = \"getMany\";\n        } else if (newSegments[2] === \"infinite\") {\n            newSegments[2] = \"list\";\n        } else if (newSegments[2] === \"one\") {\n            newSegments[2] = \"detail\";\n        } else if (newSegments[1] === \"custom\") {\n            const newParams = {\n                ...newSegments[2],\n            };\n            delete newParams.method;\n            delete newParams.url;\n\n            return [\n                newSegments[0],\n                newSegments[1],\n                newSegments[2].method,\n                newSegments[2].url,\n                newParams,\n            ];\n        }\n\n        return newSegments;\n    }\n    // for `audit` -> `logList`\n    if (segments[0] === \"audit\") {\n        // [audit, resource, action, params] (for log and list)\n        // or\n        // [audit, action, params] (for rename)\n        if (segments[2] === \"list\") {\n            return [\"logList\", segments[1], segments[3]];\n        }\n    }\n    // for `access` -> `useCan`\n    if (segments[0] === \"access\") {\n        // [access, resource, action, params]\n        if (segments.length === 4) {\n            return [\n                \"useCan\",\n                {\n                    resource: segments[1],\n                    action: segments[2],\n                    ...segments[3], // params: { params, enabled }\n                },\n            ];\n        }\n    }\n    // for `auth`\n    if (segments[0] === \"auth\") {\n        if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n            return [\"useLogin\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n            return [\"useLogout\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n            return [\"getUserIdentity\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n            return [\"useRegister\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n            return [\"useForgotPassword\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n            return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n            return [\"useCheckError\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n            return [\"usePermissions\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n            return [\"useUpdatePassword\"];\n        }\n    }\n    return segments;\n}\n\nclass BaseKeyBuilder {\n    segments: KeySegment[] = [];\n\n    constructor(segments: KeySegment[] = []) {\n        this.segments = segments;\n    }\n\n    key() {\n        return this.segments;\n    }\n\n    legacy() {\n        return convertToLegacy(this.segments);\n    }\n\n    get(legacy?: boolean) {\n        return legacy ? this.legacy() : this.segments;\n    }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    params(paramsValue?: ParamsType) {\n        return new BaseKeyBuilder([...this.segments, paramsValue]);\n    }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    id(idValue?: IdType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            idValue ? String(idValue) : undefined,\n        ]);\n    }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    ids(...idsValue: IdsType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n        ]);\n    }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n    action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n    action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n    action(\n        actionType:\n            | ParametrizedDataActions\n            | IdRequiredDataActions\n            | IdsRequiredDataActions,\n    ):\n        | ParamsKeyBuilder\n        | DataIdRequiringKeyBuilder\n        | DataIdsRequiringKeyBuilder {\n        if (actionType === \"one\") {\n            return new DataIdRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if (actionType === \"many\") {\n            return new DataIdsRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if ([\"list\", \"infinite\"].includes(actionType)) {\n            return new ParamsKeyBuilder([...this.segments, actionType]);\n        } else {\n            throw new Error(\"Invalid action type\");\n        }\n    }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new DataResourceKeyBuilder([...this.segments, resourceName]);\n    }\n\n    mutation(mutationName: DataMutationActions) {\n        return new ParamsKeyBuilder([\n            ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n            mutationName,\n        ]);\n    }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: AuthActionType) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(resourceName: string) {\n        return new ParamsKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: Extract<AuditActionType, \"list\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AuditActionKeyBuilder([...this.segments, resourceName]);\n    }\n\n    action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    data(name?: string) {\n        return new DataKeyBuilder([\"data\", name || \"default\"]);\n    }\n\n    auth() {\n        return new AuthKeyBuilder([\"auth\"]);\n    }\n\n    access() {\n        return new AccessKeyBuilder([\"access\"]);\n    }\n\n    audit() {\n        return new AuditKeyBuilder([\"audit\"]);\n    }\n}\n\nexport const keys = () => new KeyBuilder([]);\n", "import { IQueryKeys } from \"src/interfaces\";\nimport { QueryKey } from \"@tanstack/react-query\";\n\nimport { MetaQuery } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { keys as newKeys } from \"../keys\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n    const keys: IQueryKeys = {\n        all: [providerName],\n        resourceAll: [providerName, resource || \"\"],\n        list: (config) => [\n            ...keys.resourceAll,\n            \"list\",\n            {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n            } as QueryKey,\n        ],\n        many: (ids) =>\n            [\n                ...keys.resourceAll,\n                \"getMany\",\n                (ids && ids.map(String)) as QueryKey,\n                { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n            ].filter((item) => item !== undefined),\n        detail: (id) => [\n            ...keys.resourceAll,\n            \"detail\",\n            id?.toString(),\n            { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n        ],\n        logList: (meta) =>\n            [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n                (item) => item !== undefined,\n            ),\n    };\n    return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n    return (\n        resource?: string,\n        dataProviderName?: string,\n        meta?: MetaQuery,\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery | undefined,\n    ): IQueryKeys => {\n        const providerName = dataProviderName || \"default\";\n\n        const keys: IQueryKeys = {\n            all: newKeys().data(providerName).get(preferLegacyKeys),\n            resourceAll: newKeys()\n                .data(dataProviderName)\n                .resource(resource ?? \"\")\n                .get(preferLegacyKeys),\n            list: (config) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"list\")\n                    .params({\n                        ...config,\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            many: (ids) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"many\")\n                    .ids(...(ids ?? []))\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            detail: (id) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"one\")\n                    .id(id ?? \"\")\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            logList: (meta) =>\n                [\n                    ...newKeys()\n                        .audit()\n                        .resource(resource)\n                        .action(\"list\")\n                        .params(meta)\n                        .get(preferLegacyKeys),\n                    metaData as QueryKey,\n                ].filter((item) => item !== undefined),\n        };\n\n        return keys;\n    };\n};\n", "export const hasPermission = (\n    permissions: string[] | undefined,\n    action: string | undefined,\n): boolean => {\n    if (!permissions || !action) {\n        return false;\n    }\n    return !!permissions.find((i) => i === action);\n};\n", "/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n    return segment.startsWith(\":\");\n};\n", "/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n    const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n    return segments;\n};\n", "import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n    const routeSegments = splitToSegments(route);\n    const resourceRouteSegments = splitToSegments(resourceRoute);\n\n    return routeSegments.length === resourceRouteSegments.length;\n};\n", "/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n    return route.replace(/^\\/|\\/$/g, \"\");\n};\n", "import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n    const stdRoute = removeLeadingTrailingSlashes(route);\n    const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n    // we need to check if the route and resourceRoute have the same number of segments\n    // if not, we can't match them\n    if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n        return false;\n    }\n\n    const routeSegments = splitToSegments(stdRoute);\n    const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n    return resourceRouteSegments.every((segment, index) => {\n        return isParameter(segment) || segment === routeSegments[index];\n    });\n};\n", "import { Action } from \"src/interfaces\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n    resourceName: string,\n    action: Action,\n    parentPrefix?: string,\n): string => {\n    const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n    let path = `${cleanParentPrefix}${\n        cleanParentPrefix ? \"/\" : \"\"\n    }${resourceName}`;\n\n    if (action === \"list\") {\n        path = `${path}`;\n    } else if (action === \"create\") {\n        path = `${path}/create`;\n    } else if (action === \"edit\") {\n        path = `${path}/edit/:id`;\n    } else if (action === \"show\") {\n        path = `${path}/show/:id`;\n    } else if (action === \"clone\") {\n        path = `${path}/clone/:id`;\n    }\n\n    return `/${path.replace(/^\\//, \"\")}`;\n};\n", "import { IResourceItem } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n): IResourceItem | undefined => {\n    const parentName = pickNotDeprecated(\n        resource.meta?.parent,\n        resource.options?.parent,\n        resource.parentName,\n    );\n\n    if (!parentName) {\n        return undefined;\n    }\n\n    const parentResource = resources.find(\n        (resource) => (resource.identifier ?? resource.name) === parentName,\n    );\n\n    /**\n     * If the parent resource is not found, we return a resource object with the name of the parent resource.\n     * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n     */\n    return parentResource ?? { name: parentName };\n};\n", "import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n    resource: ResourceProps,\n    resources: ResourceProps[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n): string | undefined => {\n    const parents: ResourceProps[] = [];\n\n    let parent = getParentResource(resource, resources);\n\n    while (parent) {\n        parents.push(parent);\n        parent = getParentResource(parent, resources);\n    }\n\n    if (parents.length === 0) {\n        return undefined;\n    }\n\n    return `/${parents\n        .reverse()\n        .map((parent) => {\n            const v = legacy\n                ? parent.options?.route ?? parent.name\n                : parent.name;\n            return removeLeadingTrailingSlashes(v);\n        })\n        .join(\"/\")}`;\n};\n", "import { Action, IResourceItem } from \"src/interfaces\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n    action: Action;\n    resource: IResourceItem;\n    route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n) => {\n    const actions: ResourceActionRoute[] = [];\n\n    const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n    const parentPrefix = getParentPrefixForResource(\n        resource,\n        resources,\n        legacy,\n    );\n\n    actionList.forEach((action) => {\n        const item =\n            legacy && action === \"clone\" ? resource.create : resource[action];\n\n        let route: string | undefined = undefined;\n\n        if (typeof item === \"function\" || legacy) {\n            // means we're fallbacking to default path for the action\n            route = getDefaultActionPath(\n                legacy\n                    ? resource.meta?.route ??\n                          resource.options?.route ??\n                          resource.name\n                    : resource.name,\n                action,\n                legacy ? parentPrefix : undefined,\n            );\n        } else if (typeof item === \"string\") {\n            // means we don't have the component, but we have the route\n            route = item;\n        } else if (typeof item === \"object\") {\n            // means we have the component and the route\n            route = item.path;\n        }\n\n        if (route) {\n            actions.push({\n                action,\n                resource,\n                route: `/${route.replace(/^\\//, \"\")}`,\n            });\n        }\n    });\n\n    return actions;\n};\n", "import { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n    routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n    // these routes are all matched, we should pick the least parametrized one\n\n    // no routes, no match\n    if (routes.length === 0) {\n        return undefined;\n    }\n\n    // no need to calculate the route segments if there's only one route\n    if (routes.length === 1) {\n        return routes[0];\n    }\n\n    // remove trailing and leading slashes\n    // split them to segments\n    const sanitizedRoutes = routes.map((route) => ({\n        ...route,\n        splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n    }));\n\n    // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n    const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n    let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n        ...sanitizedRoutes,\n    ];\n\n    // loop through the segments\n    for (let i = 0; i < segmentsCount; i++) {\n        const nonParametrizedRoutes = eligibleRoutes.filter(\n            (route) => !isParameter(route.splitted[i]),\n        );\n\n        if (nonParametrizedRoutes.length === 0) {\n            // keep the eligible routes as they are\n            continue;\n        }\n        if (nonParametrizedRoutes.length === 1) {\n            // no need to continue, we found the route\n            eligibleRoutes = nonParametrizedRoutes;\n            break;\n        }\n\n        // we have more than one non-parametrized route, we need to check the next segment\n        eligibleRoutes = nonParametrizedRoutes;\n    }\n\n    return eligibleRoutes[0];\n};\n", "import { Action, IResourceItem } from \"../../../interfaces\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n    route: string,\n    resources: IResourceItem[],\n): {\n    found: boolean;\n    resource?: IResourceItem;\n    action?: Action;\n    matchedRoute?: string;\n} => {\n    const allActionRoutes = resources.flatMap((resource) => {\n        return getActionRoutesFromResource(resource, resources);\n    });\n\n    const allFound = allActionRoutes.filter((actionRoute) => {\n        return checkBySegments(route, actionRoute.route);\n    });\n\n    const mostEligible = pickMatchedRoute(allFound);\n\n    return {\n        found: !!mostEligible,\n        resource: mostEligible?.resource,\n        action: mostEligible?.action,\n        matchedRoute: mostEligible?.route,\n    };\n};\n", "import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentPrefixForResource } from \"../router\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n    item: ResourceProps,\n    resourcesFromProps: ResourceProps[],\n): string | undefined => {\n    let route;\n\n    const parentPrefix = getParentPrefixForResource(\n        item,\n        resourcesFromProps,\n        true,\n    );\n\n    if (parentPrefix) {\n        const meta = pickNotDeprecated(item.meta, item.options);\n        route = `${parentPrefix}/${meta?.route ?? item.name}`;\n    } else {\n        route = item.options?.route ?? item.name;\n    }\n\n    return `/${route.replace(/^\\//, \"\")}`;\n};\n", "import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\nimport { IResourceItem, ITreeMenu, IMenuItem } from \"src/interfaces\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n    resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n    const tree = [];\n    const resourcesRouteObject: { [key: string]: any } = {};\n    const resourcesNameObject: { [key: string]: any } = {};\n    let parent: IResourceItem | IMenuItem;\n    let child: ITreeMenu;\n\n    for (let i = 0; i < resources.length; i++) {\n        parent = resources[i];\n\n        const route =\n            parent.route ??\n            pickNotDeprecated(parent?.meta, parent.options)?.route ??\n            \"\";\n\n        resourcesRouteObject[route] = parent;\n        resourcesRouteObject[route][\"children\"] = [];\n\n        resourcesNameObject[parent.name] = parent;\n        resourcesNameObject[parent.name][\"children\"] = [];\n    }\n\n    for (const name in resourcesRouteObject) {\n        if (resourcesRouteObject.hasOwnProperty(name)) {\n            child = resourcesRouteObject[name];\n\n            if (child.parentName && resourcesNameObject[child.parentName]) {\n                resourcesNameObject[child.parentName][\"children\"].push(child);\n            } else {\n                tree.push(child);\n            }\n        }\n    }\n\n    return tree;\n};\n", "export const humanizeString = (text: string): string => {\n    text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n    text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n    text = text\n        .toLowerCase()\n        .replace(/[_-]+/g, \" \")\n        .replace(/\\s{2,}/g, \" \")\n        .trim();\n    text = text.charAt(0).toUpperCase() + text.slice(1);\n\n    return text;\n};\n// https://www.npmjs.com/package/humanize-string\n", "import React from \"react\";\nimport pluralize from \"pluralize\";\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\n\nimport {\n    IRefineContextOptions,\n    IRefineContext,\n    IRefineContextProvider,\n} from \"./IRefineContext\";\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n    mutationMode: \"pessimistic\",\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    warnWhenUnsavedChanges: false,\n    liveMode: \"off\",\n    redirect: {\n        afterCreate: \"list\",\n        afterClone: \"list\",\n        afterEdit: \"list\",\n    },\n    overtime: {\n        interval: 1000,\n    },\n    textTransformers: {\n        humanize: humanizeString,\n        plural: pluralize.plural,\n        singular: pluralize.singular,\n    },\n    disableServerSideValidation: false,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n    hasDashboard: false,\n    mutationMode: \"pessimistic\",\n    warnWhenUnsavedChanges: false,\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    Title: undefined,\n    Sider: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Layout: DefaultLayout,\n    OffLayoutArea: undefined,\n    liveMode: \"off\",\n    onLiveEvent: undefined,\n    options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n    hasDashboard,\n    mutationMode,\n    warnWhenUnsavedChanges,\n    syncWithLocation,\n    undoableTimeout,\n    children,\n    DashboardPage,\n    Title,\n    Layout = DefaultLayout,\n    Header,\n    Sider,\n    Footer,\n    OffLayoutArea,\n    LoginPage = DefaultLoginPage,\n    catchAll,\n    liveMode = \"off\",\n    onLiveEvent,\n    options,\n}) => {\n    return (\n        <RefineContext.Provider\n            value={{\n                hasDashboard,\n                mutationMode,\n                warnWhenUnsavedChanges,\n                syncWithLocation,\n                Title,\n                undoableTimeout,\n                Layout,\n                Header,\n                Sider,\n                Footer,\n                OffLayoutArea,\n                DashboardPage,\n                LoginPage,\n                catchAll,\n                liveMode,\n                onLiveEvent,\n                options,\n            }}\n        >\n            {children}\n        </RefineContext.Provider>\n    );\n};\n", "import React from \"react\";\n\nimport { LayoutProps } from \"../../../interfaces\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n    return <div>{children}</div>;\n};\n", "import { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\nimport {\n    IRefineContextOptions,\n    IRefineOptions,\n    LiveModeProps,\n    MutationMode,\n} from \"src/interfaces\";\n\ntype HandleRefineOptionsProps = {\n    options?: IRefineOptions;\n    mutationMode?: MutationMode;\n    syncWithLocation?: boolean;\n    warnWhenUnsavedChanges?: boolean;\n    undoableTimeout?: number;\n    liveMode?: LiveModeProps[\"liveMode\"];\n    disableTelemetry?: boolean;\n    reactQueryClientConfig?: QueryClientConfig;\n    reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n    optionsWithDefaults: IRefineContextOptions;\n    disableTelemetryWithDefault: boolean;\n    reactQueryWithDefaults: {\n        clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n        devtoolConfig: false | any;\n    };\n};\n\nexport const handleRefineOptions = ({\n    options,\n    disableTelemetry,\n    liveMode,\n    mutationMode,\n    reactQueryClientConfig,\n    reactQueryDevtoolConfig,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n    const optionsWithDefaults: IRefineContextOptions = {\n        breadcrumb: options?.breadcrumb,\n        mutationMode:\n            options?.mutationMode ??\n            mutationMode ??\n            defaultRefineOptions.mutationMode,\n        undoableTimeout:\n            options?.undoableTimeout ??\n            undoableTimeout ??\n            defaultRefineOptions.undoableTimeout,\n        syncWithLocation:\n            options?.syncWithLocation ??\n            syncWithLocation ??\n            defaultRefineOptions.syncWithLocation,\n        warnWhenUnsavedChanges:\n            options?.warnWhenUnsavedChanges ??\n            warnWhenUnsavedChanges ??\n            defaultRefineOptions.warnWhenUnsavedChanges,\n        liveMode:\n            options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n        redirect: {\n            afterCreate:\n                options?.redirect?.afterCreate ??\n                defaultRefineOptions.redirect.afterCreate,\n            afterClone:\n                options?.redirect?.afterClone ??\n                defaultRefineOptions.redirect.afterClone,\n            afterEdit:\n                options?.redirect?.afterEdit ??\n                defaultRefineOptions.redirect.afterEdit,\n        },\n        overtime: options?.overtime ?? defaultRefineOptions.overtime,\n        textTransformers: {\n            humanize:\n                options?.textTransformers?.humanize ??\n                defaultRefineOptions.textTransformers.humanize,\n            plural:\n                options?.textTransformers?.plural ??\n                defaultRefineOptions.textTransformers.plural,\n            singular:\n                options?.textTransformers?.singular ??\n                defaultRefineOptions.textTransformers.singular,\n        },\n        disableServerSideValidation:\n            options?.disableServerSideValidation ??\n            defaultRefineOptions.disableServerSideValidation,\n        projectId: options?.projectId,\n        useNewQueryKeys: options?.useNewQueryKeys,\n    };\n\n    const disableTelemetryWithDefault =\n        options?.disableTelemetry ?? disableTelemetry ?? false;\n\n    const reactQueryWithDefaults = {\n        clientConfig:\n            options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n        devtoolConfig:\n            options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n    };\n\n    return {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    };\n};\n", "import { Action, IRefineContextOptions, RedirectAction } from \"src/interfaces\";\n\ntype RedirectPageProps = {\n    redirectFromProps?: RedirectAction;\n    action: Action;\n    redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n    redirectFromProps,\n    action,\n    redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n    if (redirectFromProps || redirectFromProps === false) {\n        return redirectFromProps;\n    }\n\n    switch (action) {\n        case \"clone\":\n            return redirectOptions.afterClone;\n        case \"create\":\n            return redirectOptions.afterCreate;\n        case \"edit\":\n            return redirectOptions.afterEdit;\n        default:\n            return false;\n    }\n};\n", "type EachResolve<TResolve, Response> = (\n    result: TResolve,\n    index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n    error: TReject,\n    index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n    TResolve = unknown,\n    TReject = unknown,\n    TResolveResponse = unknown,\n    TRejectResponse = unknown,\n>(\n    promises: (() => Promise<TResolve>)[],\n    onEachResolve: EachResolve<TResolve, TResolveResponse>,\n    onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n    const results = [];\n    // @ts-expect-error Remove this when we enable `downLevelIterations`\n    for (const [index, promise] of promises.entries()) {\n        try {\n            const result = await promise();\n\n            results.push(onEachResolve(result, index));\n        } catch (error) {\n            results.push(onEachReject(error as TReject, index));\n        }\n    }\n    return results;\n};\n", "import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n    identifier?: string,\n    resources: IResourceItem[] = [],\n    /**\n     * If true, the identifier will be checked for `route` and `name` properties\n     */\n    legacy = false,\n): IResourceItem | undefined => {\n    if (!identifier) {\n        return undefined;\n    }\n\n    if (legacy) {\n        const resourceByRoute = resources.find(\n            (r) =>\n                removeLeadingTrailingSlashes(r.route ?? \"\") ===\n                removeLeadingTrailingSlashes(identifier),\n        );\n\n        const resource = resourceByRoute\n            ? resourceByRoute\n            : resources.find((r) => r.name === identifier);\n\n        return resource;\n    }\n\n    let resource = resources.find((r) => r.identifier === identifier);\n    if (!resource) {\n        resource = resources.find((r) => r.name === identifier);\n    }\n\n    return resource;\n};\n", "import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n    resourceName?: string,\n    dataProviderName?: string,\n    resources?: IResourceItem[],\n) => {\n    if (dataProviderName) {\n        return dataProviderName;\n    }\n\n    /**\n     * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n     */\n    const resource = pickResource(resourceName, resources);\n\n    const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n    if (meta?.dataProviderName) {\n        return meta.dataProviderName;\n    }\n\n    return \"default\";\n};\n", "export const handleMultiple = async <TData = unknown>(\n    promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n    return {\n        data: (await Promise.all(promises)).map((res) => res.data),\n    };\n};\n", "import { GetListResponse } from \"../../../interfaces\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.next) {\n        return cursor.next;\n    }\n\n    const current = pagination?.current || 1;\n\n    const pageSize = pagination?.pageSize || 10;\n    const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n    return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.prev) {\n        return cursor.prev;\n    }\n\n    const current = pagination?.current || 1;\n\n    return current === 1 ? undefined : current - 1;\n};\n", "import {\n    IResourceItem,\n    ResourceProps,\n} from \"../../../interfaces/bindings/resource\";\n\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n    const _resources: IResourceItem[] = [];\n\n    resources.forEach((resource) => {\n        _resources.push({\n            ...resource,\n            label: resource.meta?.label ?? resource.options?.label,\n            route: routeGenerator(resource, resources),\n            canCreate: !!resource.create,\n            canEdit: !!resource.edit,\n            canShow: !!resource.show,\n            canDelete: resource.canDelete,\n        });\n    });\n\n    return _resources;\n};\n", "import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n    const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n    return segments.flatMap((s) => {\n        if (isParameter(s)) {\n            return [s.slice(1)];\n        }\n\n        return [];\n    });\n};\n", "/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n    TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n    routeParams: (keyof TRouteParams)[],\n    meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n    return routeParams.reduce((acc, key) => {\n        const value = meta[key as string];\n        if (typeof value !== \"undefined\") {\n            acc[key] = value as TRouteParams[keyof TRouteParams];\n        }\n        return acc;\n    }, {} as Partial<TRouteParams>);\n};\n", "import { MetaQuery, ParseResponse } from \"src/interfaces\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n    designatedRoute: string,\n    resourceMeta: MetaQuery = {},\n    parsed: ParseResponse = {},\n    meta: Record<string, unknown> = {},\n): string => {\n    // pickRouteParams (from the route)\n    const routeParams = pickRouteParams(designatedRoute);\n    // prepareRouteParams (from route params, params and meta)\n    const preparedRouteParams = prepareRouteParams(routeParams, {\n        ...resourceMeta,\n        ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n        ...(typeof parsed?.action !== \"undefined\"\n            ? { action: parsed.action }\n            : {}),\n        ...(typeof parsed?.resource !== \"undefined\"\n            ? { resource: parsed.resource }\n            : {}),\n        ...parsed?.params,\n        ...meta,\n    });\n    // replace route params with prepared route params\n    return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n        const fromParams = preparedRouteParams[key];\n        if (typeof fromParams !== \"undefined\") {\n            return `${fromParams}`;\n        }\n        return match;\n    });\n};\n", "import React, { PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\nimport { ILegacyAuthContext, IAuthBindingsContext } from \"../../interfaces\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n    ILegacyAuthContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, isProvided, ...authOperations }) => {\n    const { replace } = useNavigation();\n\n    const loginFunc = async (params: any) => {\n        try {\n            const result = await authOperations.login?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const registerFunc = async (params: any) => {\n        try {\n            const result = await authOperations.register?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const logoutFunc = async (params: any) => {\n        try {\n            const redirectPath = await authOperations.logout?.(params);\n\n            return redirectPath;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const checkAuthFunc = async (params: any) => {\n        try {\n            await authOperations.checkAuth?.(params);\n            return Promise.resolve();\n        } catch (error) {\n            if ((error as { redirectPath?: string })?.redirectPath) {\n                replace((error as { redirectPath: string }).redirectPath);\n            }\n\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <LegacyAuthContext.Provider\n            value={{\n                ...authOperations,\n                login: loginFunc,\n                logout: logoutFunc,\n                checkAuth: checkAuthFunc,\n                register: registerFunc,\n                isProvided,\n            }}\n        >\n            {children}\n        </LegacyAuthContext.Provider>\n    );\n};\n\nexport const AuthBindingsContext = React.createContext<\n    Partial<IAuthBindingsContext>\n>({});\n\nexport const AuthBindingsContextProvider: React.FC<\n    PropsWithChildren<IAuthBindingsContext>\n> = ({ children, isProvided, ...authBindings }) => {\n    const handleLogin = async (params: unknown) => {\n        try {\n            const result = await authBindings.login?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in login: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleRegister = async (params: unknown) => {\n        try {\n            const result = await authBindings.register?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in register: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleLogout = async (params: unknown) => {\n        try {\n            const result = await authBindings.logout?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in logout: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleCheck = async (params: unknown) => {\n        try {\n            const result = await authBindings.check?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in check: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleForgotPassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.forgotPassword?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleUpdatePassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.updatePassword?.(params);\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <AuthBindingsContext.Provider\n            value={{\n                ...authBindings,\n                login: handleLogin as IAuthBindingsContext[\"login\"],\n                logout: handleLogout as IAuthBindingsContext[\"logout\"],\n                check: handleCheck as IAuthBindingsContext[\"check\"],\n                register: handleRegister as IAuthBindingsContext[\"register\"],\n                forgotPassword:\n                    handleForgotPassword as IAuthBindingsContext[\"forgotPassword\"],\n                updatePassword:\n                    handleUpdatePassword as IAuthBindingsContext[\"updatePassword\"],\n                isProvided,\n            }}\n        >\n            {children}\n        </AuthBindingsContext.Provider>\n    );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n    const context = React.useContext(LegacyAuthContext);\n\n    return context;\n};\n\nexport const useAuthBindingsContext = () => {\n    const context = React.useContext(AuthBindingsContext);\n\n    return context;\n};\n", "import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n    const legacyAuthProvider = useLegacyAuthContext();\n    const authProvider = useAuthBindingsContext();\n\n    if (authProvider.isProvided) {\n        return { isLegacy: false, ...authProvider };\n    }\n\n    if (legacyAuthProvider.isProvided) {\n        // legacyAuthProvider interface is different from authProvider interface\n        // we need to convert it to authProvider interface for simple usage\n        // in the future, we will remove legacyAuthProvider\n        return {\n            isLegacy: true,\n            ...legacyAuthProvider,\n            check: legacyAuthProvider.checkAuth,\n            onError: legacyAuthProvider.checkError,\n            getIdentity: legacyAuthProvider.getUserIdentity,\n        };\n    }\n\n    return null;\n};\n", "import { Pagination } from \"../../../interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n    hasPagination?: boolean;\n    pagination?: Pagination;\n    configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n    hasPagination,\n    pagination,\n    configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const mode = pagination?.mode ?? hasPaginationString;\n\n    const current =\n        pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n    const pageSize =\n        pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ??\n        10;\n\n    return {\n        current,\n        pageSize,\n        mode,\n    };\n};\n", "import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => setMatches(media.matches);\n        window.addEventListener(\"resize\", listener);\n        return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n};\n", "import type { useTranslate } from \"@hooks/translate\";\n\nexport const safeTranslate = (\n    translate: ReturnType<typeof useTranslate>,\n    key: string,\n    defaultMessage?: string,\n    options?: any,\n) => {\n    const translated = options\n        ? translate(key, options, defaultMessage)\n        : translate(key, defaultMessage);\n\n    const fallback = defaultMessage ?? key;\n\n    if (translated === key || typeof translated === \"undefined\") {\n        return fallback;\n    }\n\n    return translated;\n};\n", "import { IResourceItem } from \"@contexts/resource\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\nimport type { useTranslate } from \"@hooks/translate\";\nimport { safeTranslate } from \"../safe-translate\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n    translate: ReturnType<typeof useTranslate>,\n    resource?: IResourceItem,\n    action?: string,\n    id?: string,\n    resourceName?: string,\n) {\n    const actionPrefixMatcher = {\n        create: \"Create new \",\n        clone: `#${id ?? \"\"} Clone `,\n        edit: `#${id ?? \"\"} Edit `,\n        show: `#${id ?? \"\"} Show `,\n        list: \"\",\n    };\n\n    const identifier = resource?.identifier ?? resource?.name;\n\n    const resourceNameFallback =\n        resource?.label ??\n        resource?.meta?.label ??\n        userFriendlyResourceName(\n            identifier,\n            action === \"list\" ? \"plural\" : \"singular\",\n        );\n\n    const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n    const defaultTitle = safeTranslate(\n        translate,\n        \"documentTitle.default\",\n        \"refine\",\n    );\n    const suffix = safeTranslate(\n        translate,\n        \"documentTitle.suffix\",\n        \" | refine\",\n    );\n    let autoGeneratedTitle = defaultTitle;\n\n    if (action && identifier) {\n        autoGeneratedTitle = safeTranslate(\n            translate,\n            `documentTitle.${identifier}.${action}`,\n            `${\n                actionPrefixMatcher[\n                    action as keyof typeof actionPrefixMatcher\n                ] ?? \"\"\n            }${resourceNameWithFallback}${suffix}`,\n            { id },\n        );\n    }\n\n    return autoGeneratedTitle;\n}\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseMutationModeType = () => {\n    mutationMode: IRefineContextOptions[\"mutationMode\"];\n    undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = () => {\n    const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n    return { mutationMode, undoableTimeout };\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport {\n    IRefineContextOptions,\n    IUnsavedWarnContext,\n} from \"../../../interfaces\";\n\ntype UseWarnAboutChangeType = () => {\n    warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n    warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n    setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n    const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n    const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n    return {\n        warnWhenUnsavedChanges,\n        warnWhen: Boolean(warnWhen),\n        setWarnWhen: setWarnWhen ?? (() => undefined),\n    };\n};\n", "import React, { ReactNode, useState } from \"react\";\n\nimport { IUnsavedWarnContext } from \"./IUnsavedWarnContext\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<{ children: ReactNode }> = ({\n    children,\n}) => {\n    const [warnWhen, setWarnWhen] = useState(false);\n\n    return (\n        <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n            {children}\n        </UnsavedWarnContext.Provider>\n    );\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseSyncWithLocationType = () => {\n    syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n    const { syncWithLocation } = useContext(RefineContext);\n\n    return { syncWithLocation };\n};\n", "import { useContext } from \"react\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { TitleProps } from \"../../interfaces\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n    const { Title } = useContext(RefineContext);\n\n    return Title;\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n    const {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    } = useContext(RefineContext);\n\n    return {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    };\n};\n", "import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const getFriendlyName = (\n        name = \"\",\n        type: \"singular\" | \"plural\",\n    ): string => {\n        const humanizeName = textTransformers.humanize(name);\n        if (type === \"singular\") {\n            return textTransformers.singular(humanizeName);\n        }\n        return textTransformers.plural(humanizeName);\n    };\n\n    return getFriendlyName;\n};\n", "const isNested = (obj: any) => typeof obj === \"object\" && obj !== null;\nconst isArray = (obj: any) => Array.isArray(obj);\n\nexport const flattenObjectKeys = (obj: any, prefix = \"\") => {\n    if (!isNested(obj)) {\n        return {\n            [prefix]: obj,\n        };\n    }\n\n    return Object.keys(obj).reduce((acc, key) => {\n        const currentPrefix = prefix.length ? prefix + \".\" : \"\";\n\n        if (isNested(obj[key]) && Object.keys(obj[key]).length) {\n            if (isArray(obj[key]) && obj[key].length) {\n                obj[key].forEach((item: unknown[], index: number) => {\n                    Object.assign(\n                        acc,\n                        flattenObjectKeys(\n                            item,\n                            currentPrefix + key + \".\" + index,\n                        ),\n                    );\n                });\n            } else {\n                Object.assign(\n                    acc,\n                    flattenObjectKeys(obj[key], currentPrefix + key),\n                );\n            }\n            // Even if it's a nested object, it should be treated as a key as well\n            acc[currentPrefix + key] = obj[key];\n        } else {\n            acc[currentPrefix + key] = obj[key];\n        }\n        return acc;\n    }, {} as Record<string, unknown>);\n};\n", "export const propertyPathToArray = (propertyPath: string) => {\n    return propertyPath\n        .split(\".\")\n        .map((item) => (!isNaN(Number(item)) ? Number(item) : item));\n};\n", "export const file2Base64 = (file: any): Promise<string> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        const resultHandler = () => {\n            if (reader.result) {\n                reader.removeEventListener(\"load\", resultHandler, false);\n\n                resolve(reader.result as string);\n            }\n        };\n\n        reader.addEventListener(\"load\", resultHandler, false);\n\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onerror = (error) => {\n            reader.removeEventListener(\"load\", resultHandler, false);\n            return reject(error);\n        };\n    });\n};\n", "import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n    const {\n        options: { useNewQueryKeys },\n    } = useRefineContext();\n\n    return {\n        keys,\n        preferLegacyKeys: !useNewQueryKeys,\n    };\n};\n", "import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { IdentityResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n    v3LegacyAuthProviderCompatible: true;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n    props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n    props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n    props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n    | UseGetIdentityReturnType<TData>\n    | UseGetIdentityLegacyReturnType<TData> {\n    const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n    const { getIdentity } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>({\n        queryKey: keys().auth().action(\"identity\").get(preferLegacyKeys),\n        // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        queryFn:\n            (getIdentity as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve({})),\n        enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n        retry: false,\n        ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : queryOptions?.meta),\n            ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n        },\n    });\n\n    const legacyQueryResponse = useQuery<TData>({\n        queryKey: [\n            ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        queryFn: legacyGetUserIdentity ?? (() => Promise.resolve({})),\n        enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n        retry: false,\n        ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n            ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n", "import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLogoutData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype Variables = {\n    redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n    props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n    | UseLogoutLegacyReturnType<TVariables>\n    | UseLogoutReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { push } = useNavigation();\n    const { open, close } = useNotification();\n    const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n    const { logout: logoutFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >({\n        mutationKey: keys().auth().action(\"logout\").get(preferLegacyKeys),\n        mutationFn: logoutFromContext,\n        onSuccess: async (data, variables) => {\n            const { success, error, redirectTo } = data;\n            const { redirectPath } = variables ?? {};\n\n            const redirect = redirectPath ?? redirectTo;\n\n            if (success) {\n                close?.(\"useLogout-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            if (redirect !== false) {\n                if (routerType === \"legacy\") {\n                    push(redirect ?? \"/login\");\n                } else {\n                    if (redirect) {\n                        go({ to: redirect });\n                    }\n                }\n            }\n\n            await invalidateAuthStore();\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogout\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLogoutData,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >({\n        mutationKey: [\n            ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        mutationFn: legacyLogoutFromContext,\n        onSuccess: async (data, variables) => {\n            const redirectPath = variables?.redirectPath ?? data;\n\n            if (redirectPath === false) {\n                return;\n            }\n\n            if (redirectPath) {\n                if (routerType === \"legacy\") {\n                    push(redirectPath);\n                } else {\n                    go({ to: redirectPath });\n                }\n                return;\n            }\n\n            if (routerType === \"legacy\") {\n                push(\"/login\");\n            } else {\n                go({ to: \"/login\" });\n            }\n\n            await invalidateAuthStore();\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n            ...getXRay(\"useLogout\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        key: \"useLogout-error\",\n        type: \"error\",\n        message: error?.name || \"Logout Error\",\n        description: error?.message || \"Something went wrong during logout\",\n    };\n};\n", "import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = async () => {\n        await Promise.all(\n            ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n                queryClient.invalidateQueries(\n                    keys().auth().action(action).get(preferLegacyKeys),\n                ),\n            ),\n        );\n    };\n\n    return invalidate;\n};\n", "import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterContext,\n    useNotification,\n    useRouterType,\n    useParsed,\n    useGo,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLoginProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n    props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n    | UseLoginLegacyReturnType<TVariables>\n    | UseLoginReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const parsed = useParsed();\n\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const { close, open } = useNotification();\n    const { login: legacyLoginFromContext } = useLegacyAuthContext();\n    const { login: loginFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const to = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const legacySearch = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return legacySearch.to;\n        } else {\n            return parsed.params?.to;\n        }\n    }, [routerType, parsed.params, search]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: keys().auth().action(\"login\").get(preferLegacyKeys),\n        mutationFn: loginFromContext,\n        onSuccess: async ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"login-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            if (to && success) {\n                if (routerType === \"legacy\") {\n                    replace(to as string);\n                } else {\n                    go({ to: to as string, type: \"replace\" });\n                }\n            } else if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            } else {\n                if (routerType === \"legacy\") {\n                    replace(\"/\");\n                }\n            }\n\n            await invalidateAuthStore();\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogin\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLoginData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: [\n            ...keys().auth().action(\"login\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        mutationFn: legacyLoginFromContext,\n        onSuccess: async (redirectPathFromAuth) => {\n            if (to) {\n                replace(to as string);\n            }\n\n            if (redirectPathFromAuth !== false && !to) {\n                if (typeof redirectPathFromAuth === \"string\") {\n                    if (routerType === \"legacy\") {\n                        replace(redirectPathFromAuth);\n                    } else {\n                        go({ to: redirectPathFromAuth, type: \"replace\" });\n                    }\n                } else {\n                    if (routerType === \"legacy\") {\n                        replace(\"/\");\n                    } else {\n                        go({ to: \"/\", type: \"replace\" });\n                    }\n                }\n            }\n\n            await invalidateAuthStore();\n\n            close?.(\"login-error\");\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n            ...getXRay(\"useLogin\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Login Error\",\n        description: error?.message || \"Invalid credentials\",\n        key: \"login-error\",\n        type: \"error\",\n    };\n};\n", "import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useNavigation, useRouterType, useGo, useNotification } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n    TRegisterData,\n} from \"../../../interfaces\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n    props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n    | UseRegisterReturnType<TVariables>\n    | UseRegisterLegacyReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n    const { register: registerFromContext } = useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: keys().auth().action(\"register\").get(preferLegacyKeys),\n        mutationFn: registerFromContext,\n        onSuccess: async ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"register-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            } else {\n                if (routerType === \"legacy\") {\n                    replace(\"/\");\n                }\n            }\n\n            await invalidateAuthStore();\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useRegister\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TRegisterData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: [\n            ...keys().auth().action(\"register\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        mutationFn: legacyRegisterFromContext,\n        onSuccess: async (redirectPathFromAuth) => {\n            if (redirectPathFromAuth !== false) {\n                if (redirectPathFromAuth) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectPathFromAuth);\n                    } else {\n                        go({ to: redirectPathFromAuth, type: \"replace\" });\n                    }\n                } else {\n                    if (routerType === \"legacy\") {\n                        replace(\"/\");\n                    } else {\n                        go({ to: \"/\", type: \"replace\" });\n                    }\n                }\n\n                await invalidateAuthStore();\n\n                close?.(\"register-error\");\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n            ...getXRay(\"useRegister\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Register Error\",\n        description: error?.message || \"Error while registering\",\n        key: \"register-error\",\n        type: \"error\",\n    };\n};\n", "import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TForgotPasswordData,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseForgotPasswordProps<TVariables>\n    | UseForgotPasswordLegacyProps<TVariables> = {}):\n    | UseForgotPasswordReturnType<TVariables>\n    | UseForgotPasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const {\n        forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    } = useLegacyAuthContext();\n    const { forgotPassword: forgotPasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: keys()\n            .auth()\n            .action(\"forgotPassword\")\n            .get(preferLegacyKeys),\n        mutationFn: forgotPasswordFromContext,\n        onSuccess: ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"forgot-password-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TForgotPasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: [\n            ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        mutationFn: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n        onSuccess: (redirectPathFromAuth) => {\n            if (redirectPathFromAuth !== false) {\n                if (redirectPathFromAuth) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectPathFromAuth);\n                    } else {\n                        go({ to: redirectPathFromAuth, type: \"replace\" });\n                    }\n                }\n            }\n            close?.(\"forgot-password-error\");\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n            ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Forgot Password Error\",\n        description: error?.message || \"Error while resetting password\",\n        key: \"forgot-password-error\",\n        type: \"error\",\n    };\n};\n", "import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterType,\n    useGo,\n    useParsed,\n    useNotification,\n    useRouterContext,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TUpdatePasswordData,\n    UpdatePasswordFormTypes,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseUpdatePasswordLegacyProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n    {\n        v3LegacyAuthProviderCompatible?: false;\n        mutationOptions?: Omit<\n            UseMutationOptions<\n                AuthActionResponse,\n                Error | RefineError,\n                TVariables,\n                unknown\n            >,\n            \"mutationFn\"\n        >;\n    };\n\nexport type UseUpdatePasswordCombinedProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse | TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n    TVariables extends UpdatePasswordFormTypes = {},\n>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseUpdatePasswordProps<TVariables>\n    | UseUpdatePasswordLegacyProps<TVariables> = {}):\n    | UseUpdatePasswordReturnType<TVariables>\n    | UseUpdatePasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { updatePassword: legacyUpdatePasswordFromContext } =\n        useLegacyAuthContext();\n    const { updatePassword: updatePasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const parsed = useParsed();\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const params = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const queryStrings = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return queryStrings ?? {};\n        } else {\n            return parsed.params ?? {};\n        }\n    }, [search, parsed, routerType]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error,\n        TVariables,\n        unknown\n    >({\n        mutationKey: keys()\n            .auth()\n            .action(\"updatePassword\")\n            .get(preferLegacyKeys),\n        mutationFn: async (variables) => {\n            return updatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            }) as Promise<AuthActionResponse>;\n        },\n        onSuccess: ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"update-password-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TUpdatePasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >({\n        mutationKey: [\n            ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        mutationFn: async (variables) => {\n            return legacyUpdatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            });\n        },\n        onSuccess: (redirectPathFromAuth) => {\n            if (redirectPathFromAuth !== false) {\n                if (redirectPathFromAuth) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectPathFromAuth);\n                    } else {\n                        go({ to: redirectPathFromAuth, type: \"replace\" });\n                    }\n                }\n            }\n            close?.(\"update-password-error\");\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n            ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Update Password Error\",\n        description: error?.message || \"Error while updating password\",\n        key: \"update-password-error\",\n        type: \"error\",\n    };\n};\n", "import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { CheckResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n    CheckResponse | any,\n    any\n>;\n\nexport function useIsAuthenticated(\n    props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n    v3LegacyAuthProviderCompatible = false,\n    params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n    | UseIsAuthenticatedReturnType\n    | UseIsAuthenticatedLegacyReturnType {\n    const { checkAuth } = useLegacyAuthContext();\n    const { check } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery({\n        queryKey: keys()\n            .auth()\n            .action(\"check\")\n            .params(params)\n            .get(preferLegacyKeys),\n        queryFn: async () => (await check?.(params)) ?? {},\n        retry: false,\n        enabled: !v3LegacyAuthProviderCompatible,\n        meta: {\n            ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n        },\n    });\n\n    const legacyQueryResponse = useQuery({\n        queryKey: [\n            ...keys()\n                .auth()\n                .action(\"check\")\n                .params(params)\n                .get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        queryFn: async () => (await checkAuth?.(params)) ?? {},\n        retry: false,\n        enabled: v3LegacyAuthProviderCompatible,\n        meta: {\n            ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n", "import { useMutation, UseMutationResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { OnErrorResponse } from \"../../../interfaces\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOnErrorLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n    v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n    void,\n    string | undefined,\n    any,\n    unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n    OnErrorResponse,\n    unknown,\n    unknown,\n    unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n    OnErrorResponse | void,\n    unknown,\n    unknown,\n    unknown\n>;\n\nexport function useOnError(\n    props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n    props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n    v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n    | UseOnErrorReturnType\n    | UseOnErrorLegacyReturnType {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n    const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const { mutate: legacyLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n    const { mutate: logout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n\n    const mutation = useMutation({\n        mutationKey: keys().auth().action(\"onError\").get(preferLegacyKeys),\n        mutationFn: onErrorFromContext,\n        onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n            if (shouldLogout) {\n                logout({ redirectPath: redirectTo });\n                return;\n            }\n\n            if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n                return;\n            }\n        },\n        meta: {\n            ...getXRay(\"useOnError\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation({\n        mutationKey: [\n            ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        mutationFn: legacyCheckErrorFromContext,\n        onError: (redirectPath?: string) => {\n            legacyLogout({ redirectPath });\n        },\n        meta: {\n            ...getXRay(\"useOnError\", preferLegacyKeys),\n        },\n    });\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n", "import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n    const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n    const { isProvided } = useAuthBindingsContext();\n\n    return Boolean(isProvided || legacyIsProvided);\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    handlePaginationParams,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport interface UseListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\nexport type BaseListProps = {\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * Meta data query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n\n    /**\n     * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseListProps &\n    SuccessErrorNotification<\n        GetListResponse<TData>,\n        TError,\n        Prettify<BaseListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData> = {}): QueryObserverResult<\n    GetListResponse<TData>,\n    TError\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const notificationValues = {\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource?.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...meta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >({\n        queryKey: keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"list\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        queryFn: ({ queryKey, pageParam, signal }) => {\n            return getList<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                pagination: prefferedPagination,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            });\n        },\n        ...queryOptions,\n        enabled:\n            typeof queryOptions?.enabled !== \"undefined\"\n                ? queryOptions?.enabled\n                : !!resource?.name,\n        select: (rawData) => {\n            let data = rawData;\n\n            const { current, mode, pageSize } = prefferedPagination;\n\n            if (mode === \"client\") {\n                data = {\n                    ...data,\n                    data: data.data.slice(\n                        (current - 1) * pageSize,\n                        current * pageSize,\n                    ),\n                    total: data.total,\n                };\n            }\n\n            if (queryOptions?.select) {\n                return queryOptions?.select?.(data);\n            }\n\n            return data as unknown as GetListResponse<TData>;\n        },\n        onSuccess: (data) => {\n            queryOptions?.onSuccess?.(data);\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(data, notificationValues, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig);\n        },\n        onError: (err: TError) => {\n            checkError(err);\n            queryOptions?.onError?.(err);\n\n            const notificationConfig =\n                typeof errorNotification === \"function\"\n                    ? errorNotification(err, notificationValues, identifier)\n                    : errorNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${identifier}-useList-notification`,\n                message: translate(\n                    \"notifications.error\",\n                    { statusCode: err.statusCode },\n                    `Error (status code: ${err.statusCode})`,\n                ),\n                description: err.message,\n                type: \"error\",\n            });\n        },\n        meta: {\n            ...queryOptions?.meta,\n            ...getXRay(\"useList\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\" | \"interval\"\n> &\n    Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n    overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n    overtime: {\n        elapsedTime?: number;\n    };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n    elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n    /**\n     * The loading state. If true, the elapsed time will be calculated.\n     */\n    isLoading: boolean;\n\n    /**\n     * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n     * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @default: 1000 (1 second)\n     */\n    interval?: number;\n\n    /**\n     * The callback function that will be called when the loading time exceeds the specified time.\n     * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @param elapsedInterval The elapsed time in milliseconds.\n     */\n    onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n    isLoading,\n    interval: intervalProp,\n    onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n    const [elapsedTime, setElapsedTime] = useState<number | undefined>(\n        undefined,\n    );\n    // get overtime options from refine context\n    const { options } = useRefineContext();\n    const { overtime } = options;\n\n    // pick props or refine context options\n    const interval = intervalProp ?? overtime.interval;\n    const onInterval = onIntervalProp ?? overtime?.onInterval;\n\n    useEffect(() => {\n        let intervalFn: ReturnType<typeof setInterval>;\n\n        if (isLoading) {\n            intervalFn = setInterval(() => {\n                // increase elapsed time\n                setElapsedTime((prevElapsedTime) => {\n                    if (prevElapsedTime === undefined) {\n                        return interval;\n                    }\n\n                    return prevElapsedTime + interval;\n                });\n            }, interval);\n        }\n\n        return () => {\n            clearInterval(intervalFn);\n            // reset elapsed time\n            setElapsedTime(undefined);\n        };\n    }, [isLoading, interval]);\n\n    useEffect(() => {\n        // call onInterval callback\n        if (onInterval && elapsedTime) {\n            onInterval(elapsedTime);\n        }\n    }, [elapsedTime]);\n\n    return {\n        elapsedTime,\n    };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetOneResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * id of the item in the resource\n     * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `\"default\"``\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetOneResponse<TData>,\n    TError,\n    Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetOneResponse<TData>,\n    TError\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n\n    const { getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        channel: `resources/${resource?.name}`,\n        params: {\n            ids: id ? [id] : [],\n            id: id,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useOne\",\n            ...liveParams,\n        },\n        enabled:\n            typeof queryOptions?.enabled !== \"undefined\"\n                ? queryOptions?.enabled\n                : typeof resource?.name !== \"undefined\" &&\n                  typeof id !== \"undefined\",\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...meta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useQuery<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >({\n        queryKey: keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"one\")\n            .id(id ?? \"\")\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        queryFn: ({ queryKey, pageParam, signal }) =>\n            getOne<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                id: id!,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }),\n        ...queryOptions,\n        enabled:\n            typeof queryOptions?.enabled !== \"undefined\"\n                ? queryOptions?.enabled\n                : typeof id !== \"undefined\",\n        onSuccess: (data) => {\n            queryOptions?.onSuccess?.(data);\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(\n                          data,\n                          {\n                              id,\n                              ...combinedMeta,\n                          },\n                          identifier,\n                      )\n                    : successNotification;\n\n            handleNotification(notificationConfig);\n        },\n        onError: (err: TError) => {\n            checkError(err);\n            queryOptions?.onError?.(err);\n\n            const notificationConfig =\n                typeof errorNotification === \"function\"\n                    ? errorNotification(\n                          err,\n                          {\n                              id,\n                              ...combinedMeta,\n                          },\n                          identifier,\n                      )\n                    : errorNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${id}-${identifier}-getOne-notification`,\n                message: translate(\n                    \"notifications.error\",\n                    { statusCode: err.statusCode },\n                    `Error (status code: ${err.statusCode})`,\n                ),\n                description: err.message,\n                type: \"error\",\n            });\n        },\n        meta: {\n            ...queryOptions?.meta,\n            ...getXRay(\"useOne\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetManyResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * ids of the item in the resource\n     * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    ids: BaseKey[];\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    ids,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetManyResponse<TData>,\n    TError\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            ids: ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useMany\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...meta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useQuery<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >({\n        queryKey: keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"many\")\n            .ids(...ids)\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        queryFn: ({ queryKey, pageParam, signal }) => {\n            if (getMany) {\n                return getMany({\n                    resource: resource?.name,\n                    ids,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                });\n            } else {\n                return handleMultiple(\n                    ids.map((id) =>\n                        getOne<TQueryFnData>({\n                            resource: resource?.name,\n                            id,\n                            meta: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                            metaData: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                        }),\n                    ),\n                );\n            }\n        },\n        ...queryOptions,\n        onSuccess: (data) => {\n            queryOptions?.onSuccess?.(data);\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(data, ids, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig);\n        },\n        onError: (err: TError) => {\n            checkError(err);\n            queryOptions?.onError?.(err);\n\n            const notificationConfig =\n                typeof errorNotification === \"function\"\n                    ? errorNotification(err, ids, identifier)\n                    : errorNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${ids[0]}-${identifier}-getMany-notification`,\n                message: translate(\n                    \"notifications.error\",\n                    { statusCode: err.statusCode },\n                    `Error (status code: ${err.statusCode})`,\n                ),\n                description: err.message,\n                type: \"error\",\n            });\n        },\n        meta: {\n            ...queryOptions?.meta,\n            ...getXRay(\"useMany\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    OptimisticUpdateMapType,\n    PrevContext as UpdateContext,\n    PreviousQuery,\n    SuccessErrorNotification,\n    UpdateResponse,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UpdateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to customize the optimistic update logic.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TData>,\n    TError,\n    { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateResponse<TData>,\n            TError,\n            UpdateParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const publish = usePublish();\n    const { log } = useLog();\n    const { notificationDispatch } = useCancelNotification();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateResponse<TData>,\n        TError,\n        UpdateParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >({\n        mutationFn: ({\n            id,\n            values,\n            resource: resourceName,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).update<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            }\n            const updatePromise = new Promise<UpdateResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        onMutate: async ({\n            resource: resourceName,\n            id,\n            mutationMode,\n            values,\n            dataProviderName,\n            meta,\n            metaData,\n            optimisticUpdateMap = { list: true, many: true, detail: true },\n        }) => {\n            const { identifier } = select(resourceName);\n\n            const {\n                gqlMutation: _,\n                gqlQuery: __,\n                ...preferredMeta\n            } = pickNotDeprecated(meta, metaData) ?? {};\n\n            const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                identifier,\n                pickDataProvider(identifier, dataProviderName, resources),\n                preferredMeta,\n            );\n\n            const resourceKeys = keys()\n                .data(pickDataProvider(identifier, dataProviderName, resources))\n                .resource(identifier);\n\n            const previousQueries: PreviousQuery<TData>[] =\n                queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            await queryClient.cancelQueries(\n                resourceKeys.get(preferLegacyKeys),\n                undefined,\n                {\n                    silent: true,\n                },\n            );\n\n            if (mutationModePropOrContext !== \"pessimistic\") {\n                if (optimisticUpdateMap.list) {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (\n                                typeof optimisticUpdateMap.list === \"function\"\n                            ) {\n                                return optimisticUpdateMap.list(\n                                    previous,\n                                    values,\n                                    id,\n                                );\n                            }\n\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.map((record: TData) => {\n                                if (record.id?.toString() === id?.toString()) {\n                                    return {\n                                        id,\n                                        ...record,\n                                        ...values,\n                                    } as unknown as TData;\n                                }\n                                return record;\n                            });\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                if (optimisticUpdateMap.many) {\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetManyResponse<TData> | null) => {\n                            if (\n                                typeof optimisticUpdateMap.many === \"function\"\n                            ) {\n                                return optimisticUpdateMap.many(\n                                    previous,\n                                    values,\n                                    id,\n                                );\n                            }\n\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.map((record: TData) => {\n                                if (record.id?.toString() === id?.toString()) {\n                                    record = {\n                                        id,\n                                        ...record,\n                                        ...values,\n                                    } as unknown as TData;\n                                }\n                                return record;\n                            });\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                if (optimisticUpdateMap.detail) {\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"one\")\n                            .id(id)\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetOneResponse<TData> | null) => {\n                            if (\n                                typeof optimisticUpdateMap.detail === \"function\"\n                            ) {\n                                return optimisticUpdateMap.detail(\n                                    previous,\n                                    values,\n                                    id,\n                                );\n                            }\n\n                            if (!previous) {\n                                return null;\n                            }\n\n                            return {\n                                ...previous,\n                                data: {\n                                    ...previous.data,\n                                    ...values,\n                                },\n                            };\n                        },\n                    );\n                }\n            }\n\n            return {\n                previousQueries,\n                queryKey,\n            };\n        },\n        onSettled: (\n            _data,\n            _error,\n            {\n                id,\n                resource: resourceName,\n                dataProviderName,\n                invalidates = [\"list\", \"many\", \"detail\"],\n            },\n        ) => {\n            const { identifier } = select(resourceName);\n\n            invalidateStore({\n                resource: identifier,\n                dataProviderName: pickDataProvider(\n                    identifier,\n                    dataProviderName,\n                    resources,\n                ),\n                invalidates,\n                id,\n            });\n\n            notificationDispatch({\n                type: ActionTypes.REMOVE,\n                payload: { id, resource: identifier },\n            });\n        },\n        onSuccess: (\n            data,\n            {\n                id,\n                resource: resourceName,\n                successNotification,\n                dataProviderName: dataProviderNameFromProp,\n                values,\n                meta,\n                metaData,\n            },\n            context,\n        ) => {\n            const { resource, identifier } = select(resourceName);\n            const resourceSingular = textTransformers.singular(identifier);\n\n            const dataProviderName = pickDataProvider(\n                identifier,\n                dataProviderNameFromProp,\n                resources,\n            );\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(data, { id, values }, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${id}-${identifier}-notification`,\n                description: translate(\"notifications.success\", \"Successful\"),\n                message: translate(\n                    \"notifications.editSuccess\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            resourceSingular,\n                        ),\n                    },\n                    `Successfully updated ${resourceSingular}`,\n                ),\n                type: \"success\",\n            });\n\n            publish?.({\n                channel: `resources/${resource.name}`,\n                type: \"updated\",\n                payload: {\n                    ids: data.data?.id ? [data.data.id] : undefined,\n                },\n                date: new Date(),\n                meta: {\n                    ...combinedMeta,\n                    dataProviderName,\n                },\n            });\n\n            let previousData: any;\n            if (context) {\n                const queryData = queryClient.getQueryData<\n                    UpdateResponse<TData>\n                >(context.queryKey.detail(id));\n\n                previousData = Object.keys(values || {}).reduce<any>(\n                    (acc, item) => {\n                        acc[item] = queryData?.data?.[item];\n                        return acc;\n                    },\n                    {},\n                );\n            }\n\n            const {\n                fields: _fields,\n                operation: _operation,\n                variables: _variables,\n                ...rest\n            } = combinedMeta || {};\n            log?.mutate({\n                action: \"update\",\n                resource: resource.name,\n                data: values,\n                previousData,\n                meta: {\n                    id,\n                    dataProviderName,\n                    ...rest,\n                },\n            });\n        },\n        onError: (\n            err: TError,\n            { id, resource: resourceName, errorNotification, values },\n            context,\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // set back the queries to the context:\n            if (context) {\n                for (const query of context.previousQueries) {\n                    queryClient.setQueryData(query[0], query[1]);\n                }\n            }\n\n            if (err.message !== \"mutationCancelled\") {\n                checkError?.(err);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, { id, values }, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.editError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            }\n        },\n        mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n        ...mutationOptions,\n        meta: {\n            ...mutationOptions?.meta,\n            ...getXRay(\"useUpdate\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import React, { ReactNode, useReducer } from \"react\";\nimport isEqual from \"lodash-es/isEqual\";\n\nimport { UndoableQueue } from \"@components\";\n\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../interfaces\";\nimport { ActionTypes } from \"./actionTypes\";\n\nexport const UndoableQueueContext = React.createContext<IUndoableQueueContext>({\n    notifications: [],\n    notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n    switch (action.type) {\n        case ActionTypes.ADD:\n            const newState = state.filter(\n                (notificationItem: IUndoableQueue) => {\n                    return !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    );\n                },\n            );\n\n            return [\n                ...newState,\n                {\n                    ...action.payload,\n                    isRunning: true,\n                },\n            ];\n        case ActionTypes.REMOVE:\n            return state.filter(\n                (notificationItem: IUndoableQueue) =>\n                    !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    ),\n            );\n        case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n            return state.map((notificationItem: IUndoableQueue) => {\n                if (\n                    isEqual(notificationItem.id, action.payload.id) &&\n                    notificationItem.resource == action.payload.resource\n                ) {\n                    return {\n                        ...notificationItem,\n                        seconds: action.payload.seconds - 1000,\n                    };\n                }\n                return notificationItem;\n            });\n        default:\n            return state;\n    }\n};\n\nexport const UndoableQueueContextProvider: React.FC<{\n    children: ReactNode;\n}> = ({ children }) => {\n    const [notifications, notificationDispatch] = useReducer(\n        undoableQueueReducer,\n        initialState,\n    );\n\n    const notificationData = { notifications, notificationDispatch };\n\n    return (\n        <UndoableQueueContext.Provider value={notificationData}>\n            {children}\n            {typeof window !== \"undefined\" &&\n                notifications.map((notification) => (\n                    <UndoableQueue\n                        key={`${notification.id}-${notification.resource}-queue`}\n                        notification={notification}\n                    />\n                ))}\n        </UndoableQueueContext.Provider>\n    );\n};\n", "import {\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\n\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseRecord,\n    CreateResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype useCreateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCreateParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCreateParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n    const invalidateStore = useInvalidate();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCreateParams<TData, TError, TVariables>,\n        unknown\n    >({\n        mutationFn: ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            return dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            ).create<TData, TVariables>({\n                resource: resource.name,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n            });\n        },\n        onSuccess: (\n            data,\n            {\n                resource: resourceName,\n                successNotification: successNotificationFromProp,\n                dataProviderName: dataProviderNameFromProp,\n                invalidates = [\"list\", \"many\"],\n                values,\n                meta,\n                metaData,\n            },\n        ) => {\n            const { resource, identifier } = select(resourceName);\n            const resourceSingular = textTransformers.singular(identifier);\n\n            const dataProviderName = pickDataProvider(\n                identifier,\n                dataProviderNameFromProp,\n                resources,\n            );\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const notificationConfig =\n                typeof successNotificationFromProp === \"function\"\n                    ? successNotificationFromProp(data, values, identifier)\n                    : successNotificationFromProp;\n\n            handleNotification(notificationConfig, {\n                key: `create-${identifier}-notification`,\n                message: translate(\n                    \"notifications.createSuccess\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            resourceSingular,\n                        ),\n                    },\n                    `Successfully created ${resourceSingular}`,\n                ),\n                description: translate(\"notifications.success\", \"Success\"),\n                type: \"success\",\n            });\n\n            invalidateStore({\n                resource: identifier,\n                dataProviderName,\n                invalidates,\n            });\n\n            publish?.({\n                channel: `resources/${resource.name}`,\n                type: \"created\",\n                payload: {\n                    ids: data?.data?.id ? [data.data.id] : undefined,\n                },\n                date: new Date(),\n                meta: {\n                    ...combinedMeta,\n                    dataProviderName,\n                },\n            });\n\n            const {\n                fields: _fields,\n                operation: _operation,\n                variables: _variables,\n                ...rest\n            } = combinedMeta || {};\n            log?.mutate({\n                action: \"create\",\n                resource: resource.name,\n                data: values,\n                meta: {\n                    dataProviderName,\n                    id: data?.data?.id ?? undefined,\n                    ...rest,\n                },\n            });\n        },\n        onError: (\n            err: TError,\n            {\n                resource: resourceName,\n                errorNotification: errorNotificationFromProp,\n                values,\n            },\n        ) => {\n            checkError(err);\n\n            const { identifier } = select(resourceName);\n\n            const resourceSingular = textTransformers.singular(identifier);\n\n            const notificationConfig =\n                typeof errorNotificationFromProp === \"function\"\n                    ? errorNotificationFromProp(err, values, identifier)\n                    : errorNotificationFromProp;\n\n            handleNotification(notificationConfig, {\n                key: `create-${identifier}-notification`,\n                description: err.message,\n                message: translate(\n                    \"notifications.createError\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            resourceSingular,\n                        ),\n                        statusCode: err.statusCode,\n                    },\n                    `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n                ),\n                type: \"error\",\n            });\n        },\n        mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n        ...mutationOptions,\n        meta: {\n            ...mutationOptions?.meta,\n            ...getXRay(\"useCreate\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    DeleteOneResponse,\n    GetListResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    PrevContext as DeleteContext,\n    PreviousQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteOneResponse<TData>,\n            TError,\n            DeleteParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteOneResponse<TData>,\n        TError,\n        DeleteParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >({\n        mutationFn: ({\n            id,\n            mutationMode,\n            undoableTimeout,\n            resource: resourceName,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).deleteOne<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    variables: values,\n                });\n            }\n\n            const deletePromise = new Promise<DeleteOneResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return deletePromise;\n        },\n        onMutate: async ({\n            id,\n            resource: resourceName,\n            mutationMode,\n            dataProviderName,\n            meta,\n            metaData,\n        }) => {\n            const { identifier } = select(resourceName);\n\n            const {\n                gqlMutation: _,\n                gqlQuery: __,\n                ...preferredMeta\n            } = pickNotDeprecated(meta, metaData) ?? {};\n\n            const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                identifier,\n                pickDataProvider(identifier, dataProviderName, resources),\n                preferredMeta,\n            );\n\n            const resourceKeys = keys()\n                .data(pickDataProvider(identifier, dataProviderName, resources))\n                .resource(identifier);\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            await queryClient.cancelQueries(\n                resourceKeys.get(preferLegacyKeys),\n                undefined,\n                {\n                    silent: true,\n                },\n            );\n\n            const previousQueries: PreviousQuery<TData>[] =\n                queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n            if (mutationModePropOrContext !== \"pessimistic\") {\n                // Set the previous queries to the new ones:\n                queryClient.setQueriesData(\n                    resourceKeys\n                        .action(\"list\")\n                        .params(preferredMeta ?? {})\n                        .get(preferLegacyKeys),\n                    (previous?: GetListResponse<TData> | null) => {\n                        if (!previous) {\n                            return null;\n                        }\n                        const data = previous.data.filter(\n                            (record: TData) =>\n                                record.id?.toString() !== id.toString(),\n                        );\n\n                        return {\n                            data,\n                            total: previous.total - 1,\n                        };\n                    },\n                );\n\n                queryClient.setQueriesData(\n                    resourceKeys.action(\"many\").get(preferLegacyKeys),\n                    (previous?: GetListResponse<TData> | null) => {\n                        if (!previous) {\n                            return null;\n                        }\n                        const data = previous.data.filter((record: TData) => {\n                            return record.id?.toString() !== id?.toString();\n                        });\n\n                        return {\n                            ...previous,\n                            data,\n                        };\n                    },\n                );\n            }\n\n            return {\n                previousQueries,\n                queryKey,\n            };\n        },\n        onSettled: (\n            _data,\n            _error,\n            {\n                id,\n                resource: resourceName,\n                dataProviderName,\n                invalidates = [\"list\", \"many\"],\n            },\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // invalidate the cache for the list and many queries:\n            invalidateStore({\n                resource: identifier,\n                dataProviderName: pickDataProvider(\n                    identifier,\n                    dataProviderName,\n                    resources,\n                ),\n                invalidates,\n            });\n\n            notificationDispatch({\n                type: ActionTypes.REMOVE,\n                payload: { id, resource: identifier },\n            });\n        },\n        onSuccess: (\n            _data,\n            {\n                id,\n                resource: resourceName,\n                successNotification,\n                dataProviderName: dataProviderNameFromProp,\n                meta,\n                metaData,\n            },\n            context,\n        ) => {\n            const { resource, identifier } = select(resourceName);\n            const resourceSingular = textTransformers.singular(identifier);\n\n            const dataProviderName = pickDataProvider(\n                identifier,\n                dataProviderNameFromProp,\n                resources,\n            );\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            // Remove the queries from the cache:\n            queryClient.removeQueries(context?.queryKey.detail(id));\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(_data, id, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${id}-${identifier}-notification`,\n                description: translate(\"notifications.success\", \"Success\"),\n                message: translate(\n                    \"notifications.deleteSuccess\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            resourceSingular,\n                        ),\n                    },\n                    `Successfully deleted a ${resourceSingular}`,\n                ),\n                type: \"success\",\n            });\n\n            publish?.({\n                channel: `resources/${resource.name}`,\n                type: \"deleted\",\n                payload: {\n                    ids: [id],\n                },\n                date: new Date(),\n                meta: {\n                    ...combinedMeta,\n                    dataProviderName,\n                },\n            });\n\n            const {\n                fields: _fields,\n                operation: _operation,\n                variables: _variables,\n                ...rest\n            } = combinedMeta || {};\n            log?.mutate({\n                action: \"delete\",\n                resource: resource.name,\n                meta: {\n                    id,\n                    dataProviderName,\n                    ...rest,\n                },\n            });\n\n            // Remove the queries from the cache:\n            queryClient.removeQueries(context?.queryKey.detail(id));\n        },\n        onError: (\n            err: TError,\n            { id, resource: resourceName, errorNotification },\n            context,\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // set back the queries to the context:\n            if (context) {\n                for (const query of context.previousQueries) {\n                    queryClient.setQueryData(query[0], query[1]);\n                }\n            }\n\n            if (err.message !== \"mutationCancelled\") {\n                checkError(err);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, id, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.deleteError\",\n                        {\n                            resource: resourceSingular,\n                            statusCode: err.statusCode,\n                        },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            }\n        },\n        mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n        ...mutationOptions,\n        meta: {\n            ...mutationOptions?.meta,\n            ...getXRay(\"useDelete\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\n\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseRecord,\n    CreateManyResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype useCreateManyParams<TData, TError, TVariables> = {\n    resource: string;\n    values: TVariables[];\n    meta?: MetaQuery;\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateManyResponse<TData>,\n    TError,\n    useCreateManyParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateManyResponse<TData>,\n            TError,\n            useCreateManyParams<TData, TError, TVariables>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateManyResponse<TData>,\n        TError,\n        useCreateManyParams<TData, TError, TVariables>\n    >({\n        mutationFn: ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            if (selectedDataProvider.createMany) {\n                return selectedDataProvider.createMany<TData, TVariables>({\n                    resource: resource.name,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            } else {\n                return handleMultiple(\n                    values.map((val) =>\n                        selectedDataProvider.create<TData, TVariables>({\n                            resource: resource.name,\n                            variables: val,\n                            meta: combinedMeta,\n                            metaData: combinedMeta,\n                        }),\n                    ),\n                );\n            }\n        },\n        onSuccess: (\n            response,\n            {\n                resource: resourceName,\n                successNotification,\n                dataProviderName: dataProviderNameFromProp,\n                invalidates = [\"list\", \"many\"],\n                values,\n                meta,\n                metaData,\n            },\n        ) => {\n            const { resource, identifier } = select(resourceName);\n            const resourcePlural = textTransformers.plural(identifier);\n\n            const dataProviderName = pickDataProvider(\n                identifier,\n                dataProviderNameFromProp,\n                resources,\n            );\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(response, values, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig, {\n                key: `createMany-${identifier}-notification`,\n                message: translate(\n                    \"notifications.createSuccess\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            identifier,\n                        ),\n                    },\n                    `Successfully created ${resourcePlural}`,\n                ),\n                description: translate(\"notifications.success\", \"Success\"),\n                type: \"success\",\n            });\n\n            invalidateStore({\n                resource: identifier,\n                dataProviderName,\n                invalidates,\n            });\n\n            const ids = response?.data\n                .filter((item) => item?.id !== undefined)\n                .map((item) => item.id!);\n            publish?.({\n                channel: `resources/${resource.name}`,\n                type: \"created\",\n                payload: {\n                    ids,\n                },\n                date: new Date(),\n                meta: {\n                    ...combinedMeta,\n                    dataProviderName,\n                },\n            });\n\n            const {\n                fields: _fields,\n                operation: _operation,\n                variables: _variables,\n                ...rest\n            } = combinedMeta || {};\n            log?.mutate({\n                action: \"createMany\",\n                resource: resource.name,\n                data: values,\n                meta: {\n                    dataProviderName,\n                    ids,\n                    ...rest,\n                },\n            });\n        },\n        onError: (\n            err: TError,\n            { resource: resourceName, errorNotification, values },\n        ) => {\n            const { identifier } = select(resourceName);\n\n            const notificationConfig =\n                typeof errorNotification === \"function\"\n                    ? errorNotification(err, values, identifier)\n                    : errorNotification;\n\n            handleNotification(notificationConfig, {\n                key: `createMany-${identifier}-notification`,\n                description: err.message,\n                message: translate(\n                    \"notifications.createError\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            identifier,\n                        ),\n                        statusCode: err.statusCode,\n                    },\n                    `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n                ),\n                type: \"error\",\n            });\n        },\n        mutationKey: keys().data().mutation(\"createMany\").get(preferLegacyKeys),\n        ...mutationOptions,\n        meta: {\n            ...mutationOptions?.meta,\n            ...getXRay(\"useCreateMany\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    OptimisticUpdateManyMapType,\n    PrevContext as UpdateContext,\n    QueryResponse,\n    SuccessErrorNotification,\n    UpdateManyResponse,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype UpdateManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateManyResponse<TData>,\n    TError,\n    { ids: BaseKey[]; values: TVariables }\n>;\n\ntype UseUpdateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateManyResponse<TData>,\n            TError,\n            UpdateManyParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const { notificationDispatch } = useCancelNotification();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateManyResponse<TData>,\n        TError,\n        UpdateManyParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >({\n        mutationFn: ({\n            ids,\n            values,\n            resource: resourceName,\n            onCancel,\n            mutationMode,\n            undoableTimeout,\n            meta,\n            metaData,\n            dataProviderName,\n        }: UpdateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.updateMany) {\n                    return selectedDataProvider.updateMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        variables: values,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<UpdateManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        onMutate: async ({\n            resource: resourceName,\n            ids,\n            values,\n            mutationMode,\n            dataProviderName,\n            meta,\n            metaData,\n            optimisticUpdateMap = { list: true, many: true, detail: true },\n        }) => {\n            const { identifier } = select(resourceName);\n            const {\n                gqlMutation: _,\n                gqlQuery: __,\n                ...preferredMeta\n            } = pickNotDeprecated(meta, metaData) ?? {};\n\n            const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                identifier,\n                pickDataProvider(identifier, dataProviderName, resources),\n                preferredMeta,\n            );\n\n            const resourceKeys = keys()\n                .data(pickDataProvider(identifier, dataProviderName, resources))\n                .resource(identifier);\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            await queryClient.cancelQueries(\n                resourceKeys.get(preferLegacyKeys),\n                undefined,\n                {\n                    silent: true,\n                },\n            );\n\n            const previousQueries = queryClient.getQueriesData<\n                QueryResponse<TData>\n            >(resourceKeys.get(preferLegacyKeys));\n\n            if (mutationModePropOrContext !== \"pessimistic\") {\n                if (optimisticUpdateMap.list) {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (\n                                typeof optimisticUpdateMap.list === \"function\"\n                            ) {\n                                return optimisticUpdateMap.list(\n                                    previous,\n                                    values,\n                                    ids,\n                                );\n                            }\n\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.map((record: TData) => {\n                                if (\n                                    record.id !== undefined &&\n                                    ids\n                                        .filter((id) => id !== undefined)\n                                        .map(String)\n                                        .includes(record.id.toString())\n                                ) {\n                                    return {\n                                        ...record,\n                                        ...values,\n                                    };\n                                }\n\n                                return record;\n                            });\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                if (optimisticUpdateMap.many) {\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetManyResponse<TData> | null) => {\n                            if (\n                                typeof optimisticUpdateMap.many === \"function\"\n                            ) {\n                                return optimisticUpdateMap.many(\n                                    previous,\n                                    values,\n                                    ids,\n                                );\n                            }\n\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.map((record: TData) => {\n                                if (\n                                    record.id !== undefined &&\n                                    ids\n                                        .filter((id) => id !== undefined)\n                                        .map(String)\n                                        .includes(record.id.toString())\n                                ) {\n                                    return {\n                                        ...record,\n                                        ...values,\n                                    };\n                                }\n                                return record;\n                            });\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                if (optimisticUpdateMap.detail) {\n                    for (const id of ids) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetOneResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.detail ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.detail(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = {\n                                    ...previous.data,\n                                    ...values,\n                                };\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n                }\n            }\n\n            return {\n                previousQueries,\n                queryKey,\n            };\n        },\n        onSettled: (\n            _data,\n            _error,\n            { ids, resource: resourceName, dataProviderName },\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // invalidate the cache for the list and many queries:\n            invalidateStore({\n                resource: identifier,\n                invalidates: [\"list\", \"many\"],\n                dataProviderName: pickDataProvider(\n                    identifier,\n                    dataProviderName,\n                    resources,\n                ),\n            });\n\n            ids.forEach((id) =>\n                invalidateStore({\n                    resource: identifier,\n                    invalidates: [\"detail\"],\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    id,\n                }),\n            );\n\n            notificationDispatch({\n                type: ActionTypes.REMOVE,\n                payload: { id: ids, resource: identifier },\n            });\n        },\n        onSuccess: (\n            data,\n            {\n                ids,\n                resource: resourceName,\n                meta,\n                metaData,\n                dataProviderName: dataProviderNameFromProp,\n                successNotification,\n                values,\n            },\n            context,\n        ) => {\n            const { resource, identifier } = select(resourceName);\n            const resourceSingular = textTransformers.singular(identifier);\n\n            const dataProviderName = pickDataProvider(\n                identifier,\n                dataProviderNameFromProp,\n                resources,\n            );\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(data, { ids, values }, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${ids}-${identifier}-notification`,\n                description: translate(\"notifications.success\", \"Successful\"),\n                message: translate(\n                    \"notifications.editSuccess\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            identifier,\n                        ),\n                    },\n                    `Successfully updated ${resourceSingular}`,\n                ),\n                type: \"success\",\n            });\n\n            publish?.({\n                channel: `resources/${resource.name}`,\n                type: \"updated\",\n                payload: {\n                    ids: ids.map(String),\n                },\n                date: new Date(),\n                meta: {\n                    ...combinedMeta,\n                    dataProviderName,\n                },\n            });\n\n            const previousData: any[] = [];\n            if (context) {\n                ids.forEach((id) => {\n                    const queryData = queryClient.getQueryData<\n                        UpdateManyResponse<TData>\n                    >(context.queryKey.detail(id));\n\n                    previousData.push(\n                        Object.keys(values || {}).reduce<any>(\n                            (acc, item: any) => {\n                                acc[item] = queryData?.data?.[item];\n                                return acc;\n                            },\n                            {},\n                        ),\n                    );\n                });\n            }\n\n            const {\n                fields: _fields,\n                operation: _operation,\n                variables: _variables,\n                ...rest\n            } = combinedMeta || {};\n            log?.mutate({\n                action: \"updateMany\",\n                resource: resource.name,\n                data: values,\n                previousData,\n                meta: {\n                    ids,\n                    dataProviderName,\n                    ...rest,\n                },\n            });\n        },\n        onError: (\n            err: TError,\n            { ids, resource: resourceName, errorNotification, values },\n            context,\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // set back the queries to the context:\n            if (context) {\n                for (const query of context.previousQueries) {\n                    queryClient.setQueryData(query[0], query[1]);\n                }\n            }\n\n            if (err.message !== \"mutationCancelled\") {\n                checkError?.(err);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, { ids, values }, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-updateMany-error-notification`,\n                    message: translate(\n                        \"notifications.editError\",\n                        {\n                            resource: resourceSingular,\n                            statusCode: err.statusCode,\n                        },\n                        `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            }\n        },\n        mutationKey: keys().data().mutation(\"updateMany\").get(preferLegacyKeys),\n        ...mutationOptions,\n        meta: {\n            ...mutationOptions?.meta,\n            ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    DeleteManyResponse,\n    GetListResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    PrevContext as DeleteContext,\n    PreviousQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    unknown\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteManyResponse<TData>,\n            TError,\n            DeleteManyParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const dataProvider = useDataProvider();\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteManyResponse<TData>,\n        TError,\n        DeleteManyParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >({\n        mutationFn: ({\n            resource: resourceName,\n            ids,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }: DeleteManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.deleteMany) {\n                    return selectedDataProvider.deleteMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                        variables: values,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<DeleteManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        onMutate: async ({\n            ids,\n            resource: resourceName,\n            mutationMode,\n            dataProviderName,\n            meta,\n            metaData,\n        }) => {\n            const { identifier } = select(resourceName);\n\n            const {\n                gqlMutation: _,\n                gqlQuery: __,\n                ...preferredMeta\n            } = pickNotDeprecated(meta, metaData) ?? {};\n\n            const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                identifier,\n                pickDataProvider(identifier, dataProviderName, resources),\n                preferredMeta,\n            );\n\n            const resourceKeys = keys()\n                .data(pickDataProvider(identifier, dataProviderName, resources))\n                .resource(identifier);\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            await queryClient.cancelQueries(\n                resourceKeys.get(preferLegacyKeys),\n                undefined,\n                {\n                    silent: true,\n                },\n            );\n\n            const previousQueries: PreviousQuery<TData>[] =\n                queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n            if (mutationModePropOrContext !== \"pessimistic\") {\n                // Set the previous queries to the new ones:\n                queryClient.setQueriesData(\n                    resourceKeys\n                        .action(\"list\")\n                        .params(preferredMeta ?? {})\n                        .get(preferLegacyKeys),\n                    (previous?: GetListResponse<TData> | null) => {\n                        if (!previous) {\n                            return null;\n                        }\n\n                        const data = previous.data.filter(\n                            (item) =>\n                                item.id &&\n                                !ids.map(String).includes(item.id.toString()),\n                        );\n\n                        return {\n                            data,\n                            total: previous.total - 1,\n                        };\n                    },\n                );\n\n                queryClient.setQueriesData(\n                    resourceKeys.action(\"many\").get(preferLegacyKeys),\n                    (previous?: GetListResponse<TData> | null) => {\n                        if (!previous) {\n                            return null;\n                        }\n\n                        const data = previous.data.filter((record: TData) => {\n                            if (record.id) {\n                                return !ids\n                                    .map(String)\n                                    .includes(record.id.toString());\n                            }\n                            return false;\n                        });\n\n                        return {\n                            ...previous,\n                            data,\n                        };\n                    },\n                );\n\n                for (const id of ids) {\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"one\")\n                            .id(id)\n                            .params(preferredMeta)\n                            .get(preferLegacyKeys),\n                        (previous?: any | null) => {\n                            if (!previous || previous.data.id == id) {\n                                return null;\n                            }\n                            return {\n                                ...previous,\n                            };\n                        },\n                    );\n                }\n            }\n\n            return {\n                previousQueries,\n                queryKey,\n            };\n        },\n        // Always refetch after error or success:\n        onSettled: (\n            _data,\n            _error,\n            {\n                resource: resourceName,\n                ids,\n                dataProviderName,\n                invalidates = [\"list\", \"many\"],\n            },\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // invalidate the cache for the list and many queries:\n            invalidateStore({\n                resource: identifier,\n                dataProviderName: pickDataProvider(\n                    identifier,\n                    dataProviderName,\n                    resources,\n                ),\n                invalidates,\n            });\n\n            notificationDispatch({\n                type: ActionTypes.REMOVE,\n                payload: { id: ids, resource: identifier },\n            });\n        },\n        onSuccess: (\n            _data,\n            {\n                ids,\n                resource: resourceName,\n                meta,\n                metaData,\n                dataProviderName: dataProviderNameFromProp,\n                successNotification,\n            },\n            context,\n        ) => {\n            const { resource, identifier } = select(resourceName);\n\n            const dataProviderName = pickDataProvider(\n                identifier,\n                dataProviderNameFromProp,\n                resources,\n            );\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            // Remove the queries from the cache:\n            ids.forEach((id) =>\n                queryClient.removeQueries(context?.queryKey.detail(id)),\n            );\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(_data, ids, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${ids}-${identifier}-notification`,\n                description: translate(\"notifications.success\", \"Success\"),\n                message: translate(\n                    \"notifications.deleteSuccess\",\n                    {\n                        resource: translate(\n                            `${identifier}.${identifier}`,\n                            identifier,\n                        ),\n                    },\n                    `Successfully deleted ${identifier}`,\n                ),\n                type: \"success\",\n            });\n\n            publish?.({\n                channel: `resources/${resource.name}`,\n                type: \"deleted\",\n                payload: { ids },\n                date: new Date(),\n                meta: {\n                    ...combinedMeta,\n                    dataProviderName,\n                },\n            });\n\n            const {\n                fields: _fields,\n                operation: _operation,\n                variables: _variables,\n                ...rest\n            } = combinedMeta || {};\n            log?.mutate({\n                action: \"deleteMany\",\n                resource: resource.name,\n                meta: {\n                    ids,\n                    dataProviderName,\n                    ...rest,\n                },\n            });\n\n            // Remove the queries from the cache:\n            ids.forEach((id) =>\n                queryClient.removeQueries(context?.queryKey.detail(id)),\n            );\n        },\n        onError: (\n            err,\n            { ids, resource: resourceName, errorNotification },\n            context,\n        ) => {\n            const { identifier } = select(resourceName);\n\n            // set back the queries to the context:\n            if (context) {\n                for (const query of context.previousQueries) {\n                    queryClient.setQueryData(query[0], query[1]);\n                }\n            }\n\n            if (err.message !== \"mutationCancelled\") {\n                checkError(err);\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, ids, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.deleteError\",\n                        {\n                            resource: resourceSingular,\n                            statusCode: err.statusCode,\n                        },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            }\n        },\n        mutationKey: keys().data().mutation(\"deleteMany\").get(preferLegacyKeys),\n        ...mutationOptions,\n        meta: {\n            ...mutationOptions?.meta,\n            ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n    const dataProvider = useDataProvider();\n    const { resource } = useResource();\n\n    const { getApiUrl } = dataProvider(\n        dataProviderName ??\n            pickNotDeprecated(resource?.meta, resource?.options)\n                ?.dataProviderName,\n    );\n\n    return getApiUrl();\n};\n", "import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useTranslate,\n} from \"@hooks\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    CustomResponse,\n    HttpError,\n    MetaQuery,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSorting;\n    sorters?: CrudSorting;\n    filters?: CrudFilters;\n    query?: TQuery;\n    payload?: TPayload;\n    headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n    /**\n     * request's URL\n     */\n    url: string;\n    /**\n     * request's method (`GET`, `POST`, etc.)\n     */\n    method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n    /**\n     * The config of your request. You can send headers, payload, query, filters and sorters using this field\n     */\n    config?: UseCustomConfig<TQuery, TPayload>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n     */\n    queryOptions?: UseQueryOptions<\n        CustomResponse<TQueryFnData>,\n        TError,\n        CustomResponse<TData>\n    >;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    CustomResponse<TData>,\n    TError,\n    Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TQuery = unknown,\n    TPayload = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    url,\n    method,\n    config,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: UseCustomProps<\n    TQueryFnData,\n    TError,\n    TQuery,\n    TPayload,\n    TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    const { custom } = dataProvider(dataProviderName);\n\n    const combinedMeta = getMeta({ meta: preferredMeta });\n\n    if (custom) {\n        const queryResponse = useQuery<\n            CustomResponse<TQueryFnData>,\n            TError,\n            CustomResponse<TData>\n        >({\n            queryKey: keys()\n                .data(dataProviderName)\n                .mutation(\"custom\")\n                .params({\n                    method,\n                    url,\n                    ...config,\n                    ...(preferredMeta || {}),\n                })\n                .get(preferLegacyKeys),\n            queryFn: ({ queryKey, pageParam, signal }) =>\n                custom<TQueryFnData>({\n                    url,\n                    method,\n                    ...config,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                }),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCustom\", preferLegacyKeys),\n            },\n        });\n        const { elapsedTime } = useLoadingOvertime({\n            isLoading: queryResponse.isFetching,\n            interval: overtimeOptions?.interval,\n            onInterval: overtimeOptions?.onInterval,\n        });\n\n        return { ...queryResponse, overtime: { elapsedTime } };\n    } else {\n        throw Error(\"Not implemented custom on data provider.\");\n    }\n};\n", "import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useTranslate,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    CreateResponse,\n    BaseRecord,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomMutationConfig {\n    headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n    url: string;\n    method: \"post\" | \"put\" | \"patch\" | \"delete\";\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n    CreateResponse<TData>,\n    TError,\n    Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCustomMutationProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCustomMutationParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCustomMutationProps<\n    TData,\n    TError,\n    TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCustomMutationParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            url,\n            method,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n            config,\n        }: useCustomMutationParams<TData, TError, TVariables>) => {\n            const combinedMeta = getMeta({\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const { custom } = dataProvider(dataProviderName);\n\n            if (custom) {\n                return custom<TData>({\n                    url,\n                    method,\n                    payload: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    headers: { ...config?.headers },\n                });\n            }\n\n            throw Error(\"Not implemented custom on data provider.\");\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    successNotification: successNotificationFromProp,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (\n                err: TError,\n                {\n                    errorNotification: errorNotificationFromProp,\n                    method,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                checkError(err);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"customMutation\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const useDataProvider = (): ((\n    /**\n     * The name of the `data provider` you want to access\n     */\n    dataProviderName?: string,\n) => IDataContextProvider) => {\n    const context = useContext<IDataMultipleContextProvider>(DataContext);\n\n    const handleDataProvider = useCallback(\n        (dataProviderName?: string) => {\n            if (dataProviderName) {\n                const dataProvider = context[dataProviderName];\n                if (!dataProvider) {\n                    throw new Error(\n                        `\"${dataProviderName}\" Data provider not found`,\n                    );\n                }\n                return context[dataProviderName];\n            }\n            if (context.default) {\n                return context.default;\n            } else\n                throw new Error(\n                    `There is no \"default\" data provider. Please pass dataProviderName.`,\n                );\n        },\n        [context],\n    );\n\n    return handleDataProvider;\n};\n", "import React from \"react\";\nimport { ReactNode } from \"react\";\n\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const defaultDataProvider = () => {\n    return {\n        default: {\n            create: () => Promise.resolve({ data: { id: 1 } }),\n            createMany: () => Promise.resolve({ data: [] }),\n            deleteOne: () => Promise.resolve({ data: { id: 1 } }),\n            deleteMany: () => Promise.resolve({ data: [] }),\n            getList: () => Promise.resolve({ data: [], total: 0 }),\n            getMany: () => Promise.resolve({ data: [] }),\n            getOne: () => Promise.resolve({ data: { id: 1 } }),\n            update: () => Promise.resolve({ data: { id: 1 } }),\n            updateMany: () => Promise.resolve({ data: [] }),\n            custom: () => Promise.resolve({ data: {} }),\n            getApiUrl: () => \"\",\n        },\n    };\n};\n\nexport const DataContext = React.createContext<IDataMultipleContextProvider>(\n    defaultDataProvider() as IDataMultipleContextProvider,\n);\n\nexport const DataContextProvider: React.FC<\n    | IDataMultipleContextProvider\n    | (IDataContextProvider & {\n          children: ReactNode;\n      })\n> = ({ children, ...rest }) => {\n    let dataProviders;\n    if (!rest.getList || !rest.getOne) {\n        dataProviders = rest as IDataMultipleContextProvider;\n    } else {\n        dataProviders = {\n            default: rest,\n        } as IDataMultipleContextProvider;\n    }\n    return (\n        <DataContext.Provider value={dataProviders}>\n            {children}\n        </DataContext.Provider>\n    );\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    InfiniteData,\n    InfiniteQueryObserverResult,\n    useInfiniteQuery,\n    UseInfiniteQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    getNextPageParam,\n    getPreviousPageParam,\n    handlePaginationParams,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\n\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport interface UseInfiniteListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\ntype BaseInfiniteListProps = {\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseInfiniteListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n     */\n    queryOptions?: UseInfiniteQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseInfiniteListProps &\n    SuccessErrorNotification<\n        InfiniteData<GetListResponse<TData>>,\n        TError,\n        Prettify<BaseInfiniteListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseInfiniteListProps<\n    TQueryFnData,\n    TError,\n    TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n    const notificationValues = {\n        meta: preferredMeta,\n        metaData: preferredMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...combinedMeta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useInfiniteQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >({\n        queryKey: keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"infinite\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        queryFn: ({ queryKey, pageParam, signal }) => {\n            const paginationProperties = {\n                ...prefferedPagination,\n                current: pageParam,\n            };\n\n            return getList<TQueryFnData>({\n                resource: resource.name,\n                pagination: paginationProperties,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }).then(({ data, total, ...rest }) => {\n                return {\n                    data,\n                    total,\n                    pagination: paginationProperties,\n                    ...rest,\n                };\n            });\n        },\n        getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n        getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n        ...queryOptions,\n        onSuccess: (data) => {\n            queryOptions?.onSuccess?.(data);\n\n            const notificationConfig =\n                typeof successNotification === \"function\"\n                    ? successNotification(data, notificationValues, identifier)\n                    : successNotification;\n\n            handleNotification(notificationConfig);\n        },\n        onError: (err: TError) => {\n            checkError(err);\n            queryOptions?.onError?.(err);\n\n            const notificationConfig =\n                typeof errorNotification === \"function\"\n                    ? errorNotification(err, notificationValues, identifier)\n                    : errorNotification;\n\n            handleNotification(notificationConfig, {\n                key: `${identifier}-useInfiniteList-notification`,\n                message: translate(\n                    \"notifications.error\",\n                    { statusCode: err.statusCode },\n                    `Error (status code: ${err.statusCode})`,\n                ),\n                description: err.message,\n                type: \"error\",\n            });\n        },\n        meta: {\n            ...queryOptions?.meta,\n            ...getXRay(\"useInfiniteList\", preferLegacyKeys),\n        },\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import React from \"react\";\n\nimport { ILiveContext, ILiveContextProvider } from \"./ILiveContext\";\n\nexport const LiveContext = React.createContext<ILiveContext>(undefined);\n\nexport const LiveContextProvider: React.FC<ILiveContextProvider> = ({\n    liveProvider,\n    children,\n}) => {\n    return (\n        <LiveContext.Provider value={liveProvider}>\n            {children}\n        </LiveContext.Provider>\n    );\n};\n", "import { useCallback } from \"react\";\nimport {\n    InvalidateOptions,\n    InvalidateQueryFilters,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { useResource } from \"@hooks/resource\";\nimport { pickDataProvider } from \"@definitions\";\nimport { BaseKey, IQueryKeys } from \"../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseInvalidateProp = {\n    resource?: string;\n    id?: BaseKey;\n    dataProviderName?: string;\n    invalidates: Array<keyof IQueryKeys> | false;\n    invalidationFilters?: InvalidateQueryFilters;\n    invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n    props: UseInvalidateProp,\n) => Promise<void>) => {\n    const { resources } = useResource();\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = useCallback(\n        async ({\n            resource,\n            dataProviderName,\n            invalidates,\n            id,\n            invalidationFilters = { type: \"all\", refetchType: \"active\" },\n            invalidationOptions = { cancelRefetch: false },\n        }: UseInvalidateProp) => {\n            if (invalidates === false) {\n                return;\n            }\n            const dp = pickDataProvider(resource, dataProviderName, resources);\n\n            const queryKey = keys()\n                .data(dp)\n                .resource(resource ?? \"\");\n\n            await Promise.all(\n                invalidates.map((key) => {\n                    switch (key) {\n                        case \"all\":\n                            return queryClient.invalidateQueries(\n                                keys().data(dp).get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"list\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"list\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"many\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"many\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"resourceAll\":\n                            return queryClient.invalidateQueries(\n                                queryKey.get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"detail\":\n                            return queryClient.invalidateQueries(\n                                queryKey\n                                    .action(\"one\")\n                                    .id(id || \"\")\n                                    .get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        default:\n                            return;\n                    }\n                }),\n            );\n\n            return;\n        },\n        [],\n    );\n\n    return invalidate;\n};\n", "import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport {\n    Action,\n    BaseKey,\n    IResourceItem,\n    ResourceRouterParams,\n} from \"../../../interfaces\";\nimport { useRouterContext, useResourceWithRoute } from \"@hooks\";\nimport { useRouterType } from \"../../../contexts/router-picker\";\nimport { useParsed } from \"../../router/use-parsed\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\n\nexport type UseResourceLegacyProps = {\n    /**\n     * Determines which resource to use for redirection\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    resourceName?: string;\n    /**\n     * Determines which resource to use for redirection\n     * @default Resource name that it reads from route\n     */\n    resourceNameOrRouteName?: string;\n    /**\n     * Adds id to the end of the URL\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n    ? { resource: IResourceItem; identifier: string }\n    : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n    resources: IResourceItem[];\n    resource?: IResourceItem;\n    /**\n     * @deprecated Use `resource.name` instead when you need to get the resource name.\n     */\n    resourceName?: string;\n    id?: BaseKey;\n    action?: Action;\n    select: <T extends boolean = true>(\n        resourceName: string,\n        force?: T,\n    ) => SelectReturnType<T>;\n    identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n    resource: IResourceItem;\n    identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n    props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n    identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n    ? UseResourceReturnTypeWithResource\n    : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n    args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n    const { resources } = useContext(ResourceContext);\n\n    const routerType = useRouterType();\n\n    const params = useParsed();\n\n    const oldProps = {\n        resourceName:\n            args && typeof args !== \"string\" ? args.resourceName : args,\n        resourceNameOrRouteName:\n            args && typeof args !== \"string\"\n                ? args.resourceNameOrRouteName\n                : args,\n        recordItemId:\n            args && typeof args !== \"string\" ? args.recordItemId : undefined,\n    };\n\n    const select = <T extends boolean = true>(\n        resourceName: string,\n        force = true,\n    ): SelectReturnType<T> => {\n        const isLegacy = routerType === \"legacy\";\n        const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n        if (pickedResource) {\n            return {\n                resource: pickedResource,\n                identifier: pickedResource.identifier ?? pickedResource.name,\n            } as SelectReturnType<T>;\n        }\n\n        if (force) {\n            const resource: IResourceItem = {\n                name: resourceName,\n                identifier: resourceName,\n            };\n\n            const identifier = resource.identifier ?? resource.name;\n\n            return {\n                resource,\n                identifier,\n            } as SelectReturnType<T>;\n        }\n\n        return undefined as SelectReturnType<T>;\n    };\n\n    /**\n     * Legacy Router - Start\n     *\n     * using `useParams` and `route` to match resource and get params.\n     */\n    const resourceWithRoute = useResourceWithRoute();\n\n    const { useParams } = useRouterContext();\n\n    const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n    if (routerType === \"legacy\") {\n        const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n            ? oldProps.resourceNameOrRouteName\n            : legacyParams.resource;\n\n        const legacyResource = resourceKeyToCheck\n            ? resourceWithRoute(resourceKeyToCheck)\n            : undefined;\n        const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n        const legacyAction = legacyParams.action;\n        const legacyResourceName =\n            oldProps?.resourceName ?? legacyResource?.name;\n        const legacyIdentifier =\n            legacyResource?.identifier ?? legacyResource?.name;\n\n        return {\n            resources,\n            resource: legacyResource,\n            resourceName: legacyResourceName,\n            id: legacyId,\n            action: legacyAction,\n            select,\n            identifier: legacyIdentifier,\n        };\n    }\n    /** Legacy Router - End */\n\n    /** New Router */\n    let resource: IResourceItem | undefined = undefined;\n    // we try to pick the resource from props first\n    const identifier =\n        typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n    if (identifier) {\n        const pickedFromProps = pickResource(identifier, resources);\n        if (pickedFromProps) {\n            resource = pickedFromProps;\n        } else {\n            resource = {\n                name: identifier as string,\n            };\n        }\n    } else if (params?.resource) {\n        resource = params.resource;\n    }\n\n    return {\n        resources,\n        resource,\n        resourceName: resource?.name,\n        id: params.id,\n        action: params.action,\n        select,\n        identifier: resource?.identifier ?? resource?.name,\n    };\n}\n", "import React from \"react\";\n\nimport { IResourceContext } from \"./IResourceContext\";\nimport {\n    IResourceItem,\n    ResourceProps,\n} from \"../../interfaces/bindings/resource\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { legacyResourceTransform } from \"@definitions/helpers\";\n\nexport {\n    IResourceItem,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext,\n} from \"../../interfaces/bindings/resource\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n    resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n    React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n    const resources: IResourceItem[] = useDeepMemo(() => {\n        return legacyResourceTransform(providedResources ?? []);\n    }, [providedResources]);\n\n    return (\n        <ResourceContext.Provider value={{ resources }}>\n            {children}\n        </ResourceContext.Provider>\n    );\n};\n", "import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n    fn: () => T,\n    dependencies: React.DependencyList,\n): T => {\n    const memoizedDependencies = useMemoized(dependencies);\n\n    const value = useMemo(fn, memoizedDependencies);\n\n    return value;\n};\n", "import { useRef } from \"react\";\nimport isEqual from \"lodash-es/isEqual\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown,>(value: T): T => {\n    const ref = useRef(value);\n\n    if (!isEqual(ref.current, value)) {\n        ref.current = value;\n    }\n\n    return ref.current;\n};\n", "import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n    const value = React.useContext(RouterPickerContext);\n    return value;\n};\n", "import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => {\n    const parse = useParse();\n\n    const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n    return parsed;\n};\n", "import React, { createContext, PropsWithChildren } from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nconst defaultBindings = {};\n\nexport const RouterBindingsContext =\n    createContext<RouterBindings>(defaultBindings);\n\nexport const RouterBindingsProvider: React.FC<\n    PropsWithChildren<{ router?: RouterBindings }>\n> = ({ children, router }) => {\n    return (\n        <RouterBindingsContext.Provider value={router ?? defaultBindings}>\n            {children}\n        </RouterBindingsContext.Provider>\n    );\n};\n", "import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport { ParseFunction, ParseResponse } from \"src/interfaces\";\n\ntype UseParseType = () => <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useParse = React.useMemo(\n        () =>\n            bindings?.parse ??\n            (() =>\n                (() => {\n                    return {};\n                }) as ParseFunction),\n        [bindings?.parse],\n    );\n\n    const parse = useParse();\n\n    return parse as ReturnType<UseParseType>;\n};\n", "import { useContext, useCallback } from \"react\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { IResourceItem } from \"../../../interfaces\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n    const { resources } = useContext(ResourceContext);\n\n    const resourceWithRoute = useCallback(\n        (route: string) => {\n            const picked = pickResource(route, resources, true);\n            if (picked) {\n                return picked;\n            }\n            return { name: route, route: route } as IResourceItem;\n        },\n        [resources],\n    );\n\n    return resourceWithRoute;\n};\n", "import { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useInvalidate } from \"@hooks/invalidate\";\nimport { useResource } from \"@hooks/resource\";\nimport { useContext, useEffect } from \"react\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    IRefineContext,\n    LiveEvent,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\n\nexport type UseResourceSubscriptionProps = {\n    channel: string;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        /**\n         * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n         */\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated. Use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n        [key: string]: any;\n    };\n    types: LiveEvent[\"type\"][];\n    resource?: string;\n    enabled?: boolean;\n    /**\n     * @deprecated use `meta.dataProviderName` instead.\n     */\n    dataProviderName?: string;\n    meta?: MetaQuery & { dataProviderName?: string };\n} & LiveModeProps;\n\nexport type PublishType = {\n    (event: LiveEvent): void;\n};\n\nexport const useResourceSubscription = ({\n    resource: resourceFromProp,\n    params,\n    channel,\n    types,\n    enabled = true,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    dataProviderName: dataProviderNameFromProps,\n    meta,\n}: UseResourceSubscriptionProps): void => {\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n    const {\n        liveMode: liveModeFromContext,\n        onLiveEvent: onLiveEventContextCallback,\n    } = useContext<IRefineContext>(RefineContext);\n\n    const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n    const invalidate = useInvalidate();\n\n    const dataProviderName =\n        dataProviderNameFromProps ??\n        meta?.dataProviderName ??\n        resource?.meta?.dataProviderName;\n\n    useEffect(() => {\n        let subscription: any;\n\n        const callback = (event: LiveEvent) => {\n            if (liveMode === \"auto\") {\n                invalidate({\n                    resource: identifier,\n                    dataProviderName,\n                    invalidates: [\"resourceAll\"],\n                    invalidationFilters: {\n                        type: \"active\",\n                        refetchType: \"active\",\n                    },\n                    invalidationOptions: { cancelRefetch: false },\n                });\n            }\n\n            onLiveEvent?.(event);\n            onLiveEventContextCallback?.(event);\n        };\n\n        if (liveMode && liveMode !== \"off\" && enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params: {\n                    resource: resource?.name,\n                    ...params,\n                },\n                types,\n                callback,\n                dataProviderName,\n                meta: {\n                    ...meta,\n                    dataProviderName,\n                },\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n", "import { useContext } from \"react\";\nimport { LiveModeProps, IRefineContext } from \"../../../interfaces\";\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useLiveMode = (\n    liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n    const { liveMode: liveModeFromContext } =\n        useContext<IRefineContext>(RefineContext);\n\n    return liveMode ?? liveModeFromContext;\n};\n", "import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    LiveEvent,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\n\nexport type UseSubscriptionProps = {\n    /**\n     * Channel name to subscribe.\n     */\n    channel: string;\n    /**\n     * Callback that is run when new events from subscription arrive.\n     */\n    onLiveEvent: (event: LiveEvent) => void;\n    /**\n     * Type of events to subscribe. `\"*\"` means all events.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    types?: LiveEvent[\"type\"][];\n    /**\n     * Determines subscription should subscribe or not.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    enabled?: boolean;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        /**\n         * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n         */\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated, use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n        resource?: string;\n        [key: string]: any;\n    };\n    /**\n     * @deprecated use `meta.dataProviderName` instead.\n     */\n    dataProviderName?: string;\n    meta?: MetaQuery & { dataProviderName?: string };\n};\n\nexport const useSubscription = ({\n    params,\n    channel,\n    types = [\"*\"],\n    enabled = true,\n    onLiveEvent,\n    dataProviderName = \"default\",\n    meta,\n}: UseSubscriptionProps): void => {\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n\n    useEffect(() => {\n        let subscription: any;\n\n        if (enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params,\n                types,\n                callback: onLiveEvent,\n                dataProviderName,\n                meta: {\n                    ...meta,\n                    dataProviderName,\n                },\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n", "import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { ILiveContext } from \"../../../interfaces\";\n\nexport const usePublish: () => NonNullable<ILiveContext>[\"publish\"] = () => {\n    const liveContext = useContext<ILiveContext>(LiveContext);\n\n    return liveContext?.publish;\n};\n", "import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../../interfaces\";\n\nexport type UseCancelNotificationType = () => {\n    notifications: IUndoableQueue[];\n    notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n    const { notifications, notificationDispatch } =\n        useContext<IUndoableQueueContext>(UndoableQueueContext);\n\n    return { notifications, notificationDispatch };\n};\n", "import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport { INotificationContext } from \"../../../interfaces\";\n\nexport const useNotification = (): INotificationContext => {\n    const { open, close } = useContext(NotificationContext);\n\n    return { open, close };\n};\n", "import React, { createContext } from \"react\";\n\nimport { INotificationContext } from \"./INotificationContext\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n    INotificationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ open, close, children }) => {\n    return (\n        <NotificationContext.Provider value={{ open, close }}>\n            {children}\n        </NotificationContext.Provider>\n    );\n};\n", "import { useCallback } from \"react\";\n\nimport { OpenNotificationParams } from \"../../../interfaces\";\nimport { useNotification } from \"@hooks\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n    const { open } = useNotification();\n\n    const handleNotification = useCallback(\n        (\n            notification: OpenNotificationParams | false | undefined,\n            fallbackNotification?: OpenNotificationParams,\n        ) => {\n            if (notification !== false) {\n                if (notification) {\n                    open?.(notification);\n                } else if (fallbackNotification) {\n                    open?.(fallbackNotification);\n                }\n            }\n        },\n        [],\n    );\n\n    return handleNotification;\n};\n", "import { useCallback, useContext } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n", "import React from \"react\";\n\nimport { ITranslationContext } from \"../../interfaces\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: ITranslationContext = {};\n\nexport const TranslationContext = React.createContext<ITranslationContext>({});\n\nexport const TranslationContextProvider: React.FC<\n    ITranslationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, i18nProvider }) => {\n    return (\n        <TranslationContext.Provider\n            value={{\n                i18nProvider: i18nProvider,\n            }}\n        >\n            {children}\n        </TranslationContext.Provider>\n    );\n};\n", "import { useContext, useMemo } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    const fn = useMemo(() => {\n        function translate(\n            key: string,\n            options?: any,\n            defaultMessage?: string,\n        ): string;\n        function translate(key: string, defaultMessage?: string): string;\n\n        function translate(\n            key: string,\n            options?: string | any,\n            defaultMessage?: string,\n        ) {\n            return (\n                i18nProvider?.translate(key, options, defaultMessage) ??\n                defaultMessage ??\n                (typeof options === \"string\" &&\n                typeof defaultMessage === \"undefined\"\n                    ? options\n                    : key)\n            );\n        }\n\n        return translate;\n    }, [i18nProvider]);\n\n    return fn;\n};\n", "import { useContext, useCallback } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback(() => i18nProvider?.getLocale(), []);\n};\n", "import { useState } from \"react\";\nimport { useResource, useDataProvider, useMeta } from \"@hooks\";\nimport {\n    BaseRecord,\n    MapDataFn,\n    CrudSorting,\n    CrudFilters,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    useUserFriendlyName,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { ExportToCsv, Options } from \"export-to-csv-fix-source-map\";\n\ntype UseExportOptionsType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents\n     */\n    mapData?: MapDataFn<TData, TVariables>;\n    /**\n     *  Sorts records\n     *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    /**\n     *  Sorts records\n     */\n    sorters?: CrudSorting;\n    /**\n     *  Filters records\n     */\n    filters?: CrudFilters;\n    maxItemCount?: number;\n    /**\n     *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n     */\n    pageSize?: number;\n    /**\n     *  Used for exporting options\n     *  @type [Options](https://github.com/alexcaza/export-to-csv)\n     */\n    exportOptions?: Options;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     *  Callback to handle error events of this hook\n     */\n    onError?: (error: any) => void;\n};\n\ntype UseExportReturnType = {\n    isLoading: boolean;\n    triggerExport: () => Promise<void>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    sorter,\n    sorters,\n    filters,\n    maxItemCount,\n    pageSize = 20,\n    mapData = (item) => item as any,\n    exportOptions,\n    meta,\n    metaData,\n    dataProviderName,\n    onError,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dataProvider = useDataProvider();\n    const getMeta = useMeta();\n    const { resource, resources, identifier } = useResource(\n        pickNotDeprecated(resourceFromProps, resourceName),\n    );\n    const getFriendlyName = useUserFriendlyName();\n\n    const filename = `${getFriendlyName(\n        identifier,\n        \"plural\",\n    )}-${new Date().toLocaleString()}`;\n\n    const { getList } = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n    );\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const triggerExport = async () => {\n        setIsLoading(true);\n\n        let rawData: BaseRecord[] = [];\n\n        let current = 1;\n        let preparingData = true;\n        while (preparingData) {\n            try {\n                const { data, total } = await getList<TData>({\n                    resource: resource?.name ?? \"\",\n                    filters,\n                    sort: pickNotDeprecated(sorters, sorter),\n                    sorters: pickNotDeprecated(sorters, sorter),\n                    pagination: {\n                        current,\n                        pageSize,\n                        mode: \"server\",\n                    },\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n\n                current++;\n\n                rawData.push(...data);\n\n                if (maxItemCount && rawData.length >= maxItemCount) {\n                    rawData = rawData.slice(0, maxItemCount);\n                    preparingData = false;\n                }\n\n                if (total === rawData.length) {\n                    preparingData = false;\n                }\n            } catch (error) {\n                setIsLoading(false);\n                preparingData = false;\n\n                onError?.(error);\n\n                return;\n            }\n        }\n\n        const csvExporter = new ExportToCsv({\n            filename,\n            useKeysAsHeaders: true,\n            ...exportOptions,\n        });\n\n        csvExporter.generateCsv(rawData.map(mapData as any));\n\n        setIsLoading(false);\n    };\n\n    return {\n        isLoading,\n        triggerExport,\n    };\n};\n", "import React, { Dispatch, SetStateAction } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\nimport debounce from \"lodash-es/debounce\";\n\nimport {\n    useWarnAboutChange,\n    useCreate,\n    useUpdate,\n    useRedirectionAfterSubmission,\n    useMutationMode,\n    useOne,\n    useRefineContext,\n    useMeta,\n    useInvalidate,\n} from \"@hooks\";\n\nimport {\n    BaseRecord,\n    CreateResponse,\n    GetOneResponse,\n    HttpError,\n    LiveModeProps,\n    RedirectAction,\n    SuccessErrorNotification,\n    UpdateResponse,\n    MutationMode,\n    BaseKey,\n    IQueryKeys,\n    FormAction,\n    MetaQuery,\n    AutoSaveProps,\n    AutoSaveReturnType,\n    OptimisticUpdateMapType,\n} from \"../../interfaces\";\nimport {\n    UpdateParams,\n    UseUpdateProps,\n    UseUpdateReturnType,\n} from \"../data/useUpdate\";\nimport { UseCreateProps, UseCreateReturnType } from \"../data/useCreate\";\nimport { redirectPage } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type ActionParams = {\n    /**\n     * Type of the form mode\n     * @default Action that it reads from route otherwise \"create\" is used\n     */\n    action?: FormAction;\n};\n\ntype ActionFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Record id for fetching\n     * @default Id that it reads from the URL\n     */\n    id?: BaseKey;\n    /**\n     * Page to redirect after a succesfull mutation\n     * @type `\"show\" | \"edit\" | \"list\" | \"create\" | false`\n     * @default `\"list\"`\n     */\n    redirect?: RedirectAction;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Metadata to pass for the `useOne` query\n     */\n    queryMeta?: MetaQuery;\n    /**\n     * Metadata to pass for the mutation (`useCreate` for `create` and `clone` actions, `useUpdate` for `edit` action)\n     */\n    mutationMeta?: MetaQuery;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     * @default `\"pessimistic\"*`\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Called when a mutation is successful\n     */\n    onMutationSuccess?: (\n        data: CreateResponse<TResponse> | UpdateResponse<TResponse>,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Called when a mutation encounters an error\n     */\n    onMutationError?: (\n        error: TResponseError,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Duration to wait before executing mutations when `mutationMode = \"undoable\"`\n     * @default `5000*`\n     */\n    undoableTimeout?: number;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @type  `all`, `resourceAll`, `list`, `many`, `detail`, `false`\n     * @default `[\"list\", \"many\", \"detail\"]`\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options of useOne hook used while in edit mode.\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useCreate hook used while submitting in create and clone modes.\n     */\n    createMutationOptions?: UseCreateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useUpdate hook used while submitting in edit mode.\n     */\n    updateMutationOptions?: UseUpdateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * If you customize the [`optimisticUpdateMap`](https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany/#optimisticupdatemap) option, you can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TResponse, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TResponse> | CreateResponse<TResponse>,\n    TResponseError,\n    { id: BaseKey; values: TVariables } | TVariables\n> &\n    ActionParams &\n    LiveModeProps;\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = ActionFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    ActionParams &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps &\n    AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    id?: BaseKey;\n    setId: Dispatch<SetStateAction<BaseKey | undefined>>;\n    queryResult?: QueryObserverResult<GetOneResponse<TData>, TError>;\n    mutationResult:\n        | UseUpdateReturnType<TResponse, TResponseError, TVariables>\n        | UseCreateReturnType<TResponse, TResponseError, TVariables>;\n    formLoading: boolean;\n    onFinish: (\n        values: TVariables,\n    ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n    redirect: (\n        redirect: RedirectAction,\n        idFromFunction?: BaseKey | undefined,\n        routeParams?: Record<string, string | number>,\n    ) => void;\n} & UseLoadingOvertimeReturnType &\n    AutoSaveReturnType<TResponse, TResponseError, TVariables>;\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    resource: resourceFromProps,\n    action: actionFromProps,\n    id: idFromProps,\n    onMutationSuccess,\n    onMutationError,\n    redirect: redirectFromProps,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    queryMeta,\n    mutationMeta,\n    mutationMode: mutationModeProp,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    undoableTimeout,\n    dataProviderName,\n    invalidates,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    overtimeOptions,\n    autoSave,\n    optimisticUpdateMap,\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const { options } = useRefineContext();\n    const getMeta = useMeta();\n\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n        identifier,\n    } = useResource(resourceFromProps);\n    const { identifier: inferredIdentifier } = useResource();\n\n    /** We only accept `id` from URL params if `resource` is not explicitly passed. */\n    /** This is done to avoid sending wrong requests for custom `resource` and an async `id` */\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = idFromProps ?? idFromRoute;\n\n        if (resourceFromProps && resourceFromProps !== inferredIdentifier) {\n            return idFromProps;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    // id state is needed to determine selected record in a context for example useModal\n    const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n    /**\n     * In some cases, `id` from the router params is not available at the first render.\n     *\n     * (e.g. when using `Next.js` and client-side-rendering, `router` is not ready to use at the first render)\n     *\n     * We're watching for `defaultId` changes and setting `id` state if it's not equal to `defaultId`.\n     */\n    React.useEffect(() => {\n        setId(defaultId);\n    }, [defaultId]);\n\n    const getAction = () => {\n        if (actionFromProps) return actionFromProps;\n        else if (actionFromRoute === \"edit\" || actionFromRoute === \"clone\")\n            return actionFromRoute;\n        else return \"create\";\n    };\n    const action = getAction();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const isCreate = action === \"create\";\n    const isEdit = action === \"edit\";\n    const isClone = action === \"clone\";\n\n    warnOnce(\n        (isClone || isEdit) &&\n            Boolean(resourceFromProps) &&\n            !Boolean(idFromProps) &&\n            queryOptions?.enabled !== false,\n        `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/useForm/#resource`,\n    );\n\n    /**\n     * Designated `redirect` route\n     */\n    const designatedRedirectAction = redirectPage({\n        redirectFromProps,\n        action,\n        redirectOptions: options.redirect,\n    });\n\n    const enableQuery = id !== undefined && (isEdit || isClone);\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: id ?? \"\",\n        queryOptions: {\n            enabled: enableQuery,\n            ...queryOptions,\n        },\n        liveMode,\n        onLiveEvent,\n        liveParams,\n        meta: { ...combinedMeta, ...queryMeta },\n        metaData: { ...combinedMeta, ...queryMeta },\n        dataProviderName,\n    });\n\n    const { isFetching: isFetchingQuery } = queryResult;\n\n    const mutationResultCreate = useCreate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: createMutationOptions,\n    });\n    const { mutate: mutateCreate, isLoading: isLoadingCreate } =\n        mutationResultCreate;\n\n    const mutationResultUpdate = useUpdate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: updateMutationOptions,\n    });\n    const { mutate: mutateUpdate, isLoading: isLoadingUpdate } =\n        mutationResultUpdate;\n\n    const autoSaveMutation = useUpdate<TResponse, TResponseError, TVariables>(\n        {},\n    );\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n    const onFinishCreate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        const onSuccess = (id?: BaseKey) => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        return new Promise<CreateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n\n                if (!resource) return;\n\n                return mutateCreate(\n                    {\n                        values,\n                        resource: identifier ?? resource.name,\n                        successNotification,\n                        errorNotification,\n                        meta: { ...combinedMeta, ...mutationMeta },\n                        metaData: { ...combinedMeta, ...mutationMeta },\n                        dataProviderName,\n                        invalidates,\n                    },\n                    {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            const responseId = data?.data?.id;\n\n                            onSuccess(responseId);\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    },\n                );\n            },\n        );\n    };\n\n    React.useEffect(() => {\n        return () => {\n            if (\n                autoSave?.invalidateOnUnmount &&\n                autoSaveMutation.status === \"success\"\n            ) {\n                invalidate({\n                    id,\n                    invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                    dataProviderName,\n                    resource: identifier,\n                });\n            }\n        };\n    }, [autoSave?.invalidateOnUnmount, autoSaveMutation.status]);\n\n    const onFinishAutoSaveMutation = (\n        values: TVariables,\n    ): Promise<UpdateResponse<TResponse> | void> | void => {\n        if (!resource || !isEdit) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            successNotification: false,\n            errorNotification: false,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates: [],\n            mutationMode: \"pessimistic\",\n        };\n\n        return autoSaveMutation.mutate(variables, {\n            onSuccess: (data, _, context) => {\n                if (onMutationSuccess) {\n                    onMutationSuccess(data, values, context, true);\n                }\n            },\n            onError: (error: TResponseError, _, context) => {\n                if (onMutationError) {\n                    return onMutationError(error, values, context, true);\n                }\n            },\n        });\n    };\n\n    const onFinishAutoSave = debounce((allValues) => {\n        return onFinishAutoSaveMutation(allValues);\n    }, autoSave?.debounce || 1000);\n\n    const onFinishUpdate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        if (!resource) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            mutationMode,\n            undoableTimeout,\n            successNotification,\n            errorNotification,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates,\n            optimisticUpdateMap,\n        };\n\n        const onSuccess = () => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        // setWarnWhen is set to \"false\" at the start of the mutation. With the help of setTimeout we guarantee that the value false is set.\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        // setTimeout is required to make onSuccess e.g. callbacks to work if component unmounts i.e. on route change\n        return new Promise<UpdateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n                return setTimeout(() => {\n                    mutateUpdate(variables, {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            if (mutationMode === \"pessimistic\") {\n                                onSuccess();\n                            }\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    });\n                });\n            },\n        );\n    };\n\n    const createResult = {\n        formLoading: isFetchingQuery || isLoadingCreate,\n        mutationResult: mutationResultCreate,\n        onFinish: onFinishCreate,\n    };\n\n    const editResult = {\n        formLoading: isFetchingQuery || isLoadingUpdate,\n        mutationResult: mutationResultUpdate,\n        onFinish: onFinishUpdate,\n    };\n\n    const result = isCreate || isClone ? createResult : editResult;\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: result.mutationResult.isLoading || queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        ...result,\n        queryResult,\n        onFinishAutoSave,\n        autoSaveProps: {\n            status: autoSaveMutation.status,\n            data: autoSaveMutation.data,\n            error: autoSaveMutation.error,\n        },\n        id,\n        setId,\n        redirect: (redirect, idFromFunction?: BaseKey | undefined) => {\n            handleSubmitWithRedirect({\n                redirect:\n                    redirect !== undefined\n                        ? redirect\n                        : isEdit\n                        ? \"list\"\n                        : \"edit\",\n                resource,\n                id: idFromFunction ?? id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        },\n        overtime: {\n            elapsedTime,\n        },\n    };\n};\n", "import { useCallback } from \"react\";\n\nimport {\n    BaseKey,\n    IResourceItem,\n    MetaDataQuery,\n    RedirectAction,\n} from \"../../interfaces\";\nimport { useNavigation } from \"@hooks\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n    redirect: RedirectAction;\n    resource?: IResourceItem;\n    id?: BaseKey;\n    meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n    () => {\n        const { show, edit, list, create } = useNavigation();\n\n        const handleSubmitWithRedirect = useCallback(\n            ({\n                redirect,\n                resource,\n                id,\n                meta = {},\n            }: {\n                redirect: RedirectAction;\n                resource?: IResourceItem;\n                id?: BaseKey;\n                meta?: MetaDataQuery;\n            }) => {\n                if (redirect && resource) {\n                    if (!!resource.show && redirect === \"show\" && id) {\n                        return show(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.edit && redirect === \"edit\" && id) {\n                        return edit(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.create && redirect === \"create\") {\n                        return create(resource, undefined, meta);\n                    }\n\n                    return list(resource, \"push\", meta);\n                } else {\n                    return;\n                }\n            },\n            [],\n        );\n\n        return handleSubmitWithRedirect;\n    };\n", "import { RouterBindingsContext } from \"@contexts/router\";\nimport { useResource } from \"@hooks/resource\";\nimport React, { useCallback, useContext } from \"react\";\nimport type {\n    Action,\n    BaseKey,\n    GoConfig as GoConfigBase,\n    IResourceItem,\n} from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype ResourceWithoutId = {\n    /**\n     *  The name or identifier of the resource.\n     */\n    resource: string;\n    action: Extract<Action, \"create\" | \"list\">;\n    id?: never;\n    meta?: Record<string, unknown>;\n};\n\ntype ResourceWithId = {\n    /**\n     *  The name or identifier of the resource.\n     */\n    resource: string;\n    action: Extract<Action, \"edit\" | \"show\" | \"clone\">;\n    id: BaseKey;\n    meta?: Record<string, unknown>;\n};\n\nexport type Resource = ResourceWithoutId | ResourceWithId;\n\nexport type GoConfigWithResource = Omit<GoConfigBase, \"to\"> & {\n    to?: GoConfigBase[\"to\"] | Resource;\n};\n\nexport const useGo = () => {\n    const bindings = useContext(RouterBindingsContext);\n    const { select: resourceSelect } = useResource();\n    const getToPath = useGetToPath();\n\n    const useGo = React.useMemo(\n        () => bindings?.go ?? (() => () => undefined),\n        [bindings?.go],\n    );\n\n    const goFromRouter = useGo();\n\n    const go = useCallback(\n        (config: GoConfigWithResource | GoConfigBase) => {\n            if (typeof config.to !== \"object\") {\n                return goFromRouter({ ...config, to: config.to });\n            }\n\n            // when config.to is an object, it means that we want to go to a resource.\n            // so we need to find the path for the resource.\n            const { resource } = resourceSelect(config.to.resource);\n            handleResourceErrors(config.to, resource);\n            const newTo = getToPath({\n                resource,\n                action: config.to.action,\n                meta: {\n                    id: config.to.id,\n                    ...config.to.meta,\n                },\n            });\n\n            return goFromRouter({\n                ...config,\n                to: newTo,\n            });\n        },\n        [resourceSelect, goFromRouter],\n    );\n\n    return go;\n};\n\n/**\n * handle errors for resource\n * @internal\n */\nexport const handleResourceErrors = (to: Resource, resource: IResourceItem) => {\n    if (!to?.action || !to?.resource) {\n        throw new Error(`[useGo]: \"action\" or \"resource\" is required.`);\n    }\n\n    if ([\"edit\", \"show\", \"clone\"].includes(to?.action) && !to.id) {\n        throw new Error(\n            `[useGo]: [action: ${to.action}] requires an \"id\" for resource [resource: ${to.resource}]`,\n        );\n    }\n\n    const actionUrl = resource[to.action];\n    if (!actionUrl) {\n        throw new Error(\n            `[useGo]: [action: ${to.action}] is not defined for [resource: ${to.resource}]`,\n        );\n    }\n};\n", "import React from \"react\";\nimport { useResource } from \"../../resource\";\nimport { Action, IResourceItem } from \"../../../interfaces\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { useParsed } from \"../use-parsed\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useRouterType } from \"./../../../contexts/router-picker\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n    const routerType = useRouterType();\n    const { resource: resourceFromRoute, resources } = useResource();\n    const parsed = useParsed();\n\n    const fn = React.useCallback(\n        ({ resource, action, meta }: UseToPathParams): string | undefined => {\n            const selectedResource = resource || resourceFromRoute;\n\n            if (!selectedResource) {\n                return undefined;\n            }\n\n            const actionRoutes = getActionRoutesFromResource(\n                selectedResource,\n                resources,\n                routerType === \"legacy\",\n            );\n\n            const actionRoute = actionRoutes.find(\n                (item) => item.action === action,\n            )?.route;\n\n            if (!actionRoute) {\n                return undefined;\n            }\n\n            const composed = composeRoute(\n                actionRoute,\n                selectedResource?.meta,\n                parsed,\n                meta,\n            );\n\n            return composed;\n        },\n        [resources, resourceFromRoute, parsed],\n    );\n\n    return fn;\n};\n", "import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useBack = React.useMemo(\n        () => bindings?.back ?? (() => () => undefined),\n        [bindings?.back],\n    );\n\n    const back = useBack();\n\n    return back;\n};\n", "import { useRouterContext, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, MetaDataQuery } from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useBack } from \"@hooks/router/use-back\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/hooks/use-navigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n    const { resources } = useResource();\n    const routerType = useRouterType();\n    const { useHistory } = useRouterContext();\n    const history = useHistory();\n    const parsed = useParsed();\n    const go = useGo();\n    const back = useBack();\n\n    const handleUrl = (url: string, type: HistoryType = \"push\") => {\n        if (routerType === \"legacy\") {\n            history[type](url);\n        } else {\n            go({ to: url, type });\n        }\n    };\n\n    const createUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"create\");\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                createActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"create\")?.route;\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    createActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const editUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"edit\");\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                editActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"edit\")?.route;\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const cloneUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"clone\");\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                cloneActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"clone\")?.route;\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const showUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"show\");\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                showActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"show\")?.route;\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const listUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"list\");\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                listActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"list\")?.route;\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    listActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const create = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(createUrl(resource, meta), type);\n    };\n\n    const edit = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(editUrl(resource, id, meta), type);\n    };\n\n    const clone = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(cloneUrl(resource, id, meta), type);\n    };\n\n    const show = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(showUrl(resource, id, meta), type);\n    };\n\n    const list = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(listUrl(resource, meta), type);\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const push = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.push(path, ...rest);\n        } else {\n            go({ to: path, type: \"push\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const replace = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.replace(path, ...rest);\n        } else {\n            go({ to: path, type: \"replace\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useBack` hook instead.\n     */\n    const goBack = () => {\n        if (routerType === \"legacy\") {\n            history.goBack();\n        } else {\n            back();\n        }\n    };\n\n    return {\n        create,\n        createUrl,\n        edit,\n        editUrl,\n        clone,\n        cloneUrl,\n        show,\n        showUrl,\n        list,\n        listUrl,\n        push,\n        replace,\n        goBack,\n    };\n};\n", "import React, { useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\n\nimport { useMeta, useOne } from \"@hooks\";\n\nimport {\n    BaseRecord,\n    GetOneResponse,\n    SuccessErrorNotification,\n    MetaQuery,\n    LiveModeProps,\n    BaseKey,\n    HttpError,\n    Prettify,\n} from \"../../interfaces\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type useShowReturnType<TData extends BaseRecord = BaseRecord, TError extends HttpError = HttpError> = {\n    queryResult: QueryObserverResult<GetOneResponse<TData>, TError>;\n    showId?: BaseKey;\n    setShowId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n} & UseLoadingOvertimeReturnType;\n\nexport type useShowProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Reads `:resource` from the URL\n     */\n    resource?: string;\n    /**\n     * Data item ID for API data interactions\n     * @default Reads `:id` from the URL\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Target data provider name for API call to be made\n     * @default `\"default\"`\n     */\n    dataProviderName?: string;\n} & LiveModeProps &\n    SuccessErrorNotification<\n        GetOneResponse<TData>,\n        TError,\n        Prettify<{ id?: BaseKey } & MetaQuery>\n    > &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/show/useShow} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useShow = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    dataProviderName,\n    queryOptions,\n    overtimeOptions,\n}: useShowProps<\n    TQueryFnData,\n    TError,\n    TData\n> = {}): useShowReturnType<TData, TError> => {\n    const {\n        resource,\n        id: idFromRoute,\n        identifier,\n    } = useResource(resourceFromProp);\n    const { identifier: inferredIdentifier } = useResource();\n    const getMeta = useMeta();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== inferredIdentifier) {\n            return id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const [showId, setShowId] = useState<BaseKey | undefined>(defaultId);\n\n    React.useEffect(() => {\n        setShowId(defaultId);\n    }, [defaultId]);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    warnOnce(\n        Boolean(resourceFromProp) && !Boolean(id),\n        `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/show/useShow/#resource`,\n    );\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: showId ?? \"\",\n        queryOptions: {\n            enabled: showId !== undefined,\n            ...queryOptions,\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        queryResult,\n        showId,\n        setShowId,\n        overtime: { elapsedTime },\n    };\n};\n", "import { useEffect, useState } from \"react\";\nimport { parse, ParseConfig } from \"papaparse\";\nimport chunk from \"lodash-es/chunk\";\n\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\nimport { MapDataFn, BaseRecord, HttpError, MetaQuery } from \"../../interfaces\";\nimport {\n    importCSVMapper,\n    sequentialPromises,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n    request: TVariables[];\n    type: \"success\";\n    response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n    request: TVariables[];\n    type: \"error\";\n    response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n    succeeded: ImportSuccessResult<TVariables, TData>[];\n    errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n    totalAmount: number;\n    processedAmount: number;\n};\n\nexport type ImportOptions<\n    TItem,\n    TVariables = any,\n    TData extends BaseRecord = BaseRecord,\n> = {\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents.\n     */\n    mapData?: MapDataFn<TItem, TVariables>;\n    /**\n     * Custom Papa Parse options.\n     * @type [`ParseConfig`](https://www.papaparse.com/docs)\n     */\n    paparseOptions?: ParseConfig;\n    /**\n     * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n     */\n    batchSize?: number;\n    /**\n     * Called with errors and successful responses when all requests are sent.\n     */\n    onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     *  A callback function that returns a current state of uploading process.\n     *\n     *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n     */\n    onProgress?: (onProgressParams: OnProgressParams) => void;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n    | ImportSuccessResult<TVariables, TData>\n    | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n    file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n    type: \"file\";\n    accept: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = {},\n    TError extends HttpError = HttpError,\n> = {\n    inputProps: UseImportInputPropsType;\n    mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n    isLoading: boolean;\n    handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n    TItem = any,\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    mapData = (item) => item as unknown as TVariables,\n    paparseOptions,\n    batchSize = Number.MAX_SAFE_INTEGER,\n    onFinish,\n    meta,\n    metaData,\n    onProgress,\n    dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n    TData,\n    TVariables,\n    TError\n> => {\n    const [processedAmount, setProcessedAmount] = useState<number>(0);\n    const [totalAmount, setTotalAmount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { resource, identifier } = useResource(\n        resourceFromProps ?? resourceName,\n    );\n\n    const getMeta = useMeta();\n\n    const createMany = useCreateMany<TData, TError, TVariables>();\n    const create = useCreate<TData, TError, TVariables>();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    let mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n\n    if (batchSize === 1) {\n        mutationResult = create;\n    } else {\n        mutationResult = createMany;\n    }\n\n    const handleCleanup = () => {\n        setTotalAmount(0);\n        setProcessedAmount(0);\n        setIsLoading(false);\n    };\n\n    const handleFinish = (\n        createdValues: CreatedValuesType<TVariables, TData>[],\n    ) => {\n        const result = {\n            succeeded: createdValues.filter(\n                (item) => item.type === \"success\",\n            ) as unknown as ImportSuccessResult<TVariables, TData>[],\n            errored: createdValues.filter(\n                (item) => item.type === \"error\",\n            ) as unknown as ImportErrorResult<TVariables>[],\n        };\n\n        onFinish?.(result);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        onProgress?.({ totalAmount, processedAmount });\n    }, [totalAmount, processedAmount]);\n\n    const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n        handleCleanup();\n        return new Promise<CreatedValuesType<TVariables, TData>[]>(\n            (resolve) => {\n                setIsLoading(true);\n                parse(file as any, {\n                    complete: async ({ data }: { data: unknown[][] }) => {\n                        const values = importCSVMapper(data, mapData);\n\n                        setTotalAmount(values.length);\n\n                        if (batchSize === 1) {\n                            // Create Processor Functions\n                            const valueFns = values.map((value) => {\n                                const fn = async () => {\n                                    const response = await create.mutateAsync({\n                                        resource: identifier ?? \"\",\n                                        values: value,\n                                        successNotification: false,\n                                        errorNotification: false,\n                                        dataProviderName,\n                                        meta: combinedMeta,\n                                        metaData: combinedMeta,\n                                    });\n\n                                    return { response, value };\n                                };\n                                return fn;\n                            });\n                            // Sequentially run processor functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                valueFns,\n                                ({ response, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return currentAmount + 1;\n                                    });\n\n                                    return {\n                                        response: [response.data],\n                                        type: \"success\",\n                                        request: [value],\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: [values[index]],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // Resolve with created values\n                            resolve(createdValues);\n                        } else {\n                            // Create Chunks\n                            const chunks = chunk(values, batchSize);\n                            // Create Chunk Processor Functions\n                            const chunkedFns = chunks.map((chunkedValues) => {\n                                const fn = async () => {\n                                    const response =\n                                        await createMany.mutateAsync({\n                                            resource: identifier ?? \"\",\n                                            values: chunkedValues,\n                                            successNotification: false,\n                                            errorNotification: false,\n                                            dataProviderName,\n                                            meta: combinedMeta,\n                                            metaData: combinedMeta,\n                                        });\n\n                                    return {\n                                        response,\n                                        value: chunkedValues,\n                                        currentBatchLength:\n                                            chunkedValues.length,\n                                    };\n                                };\n\n                                return fn;\n                            });\n                            // Sequentially run chunked functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                chunkedFns,\n                                ({ response, currentBatchLength, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return (\n                                            currentAmount + currentBatchLength\n                                        );\n                                    });\n\n                                    return {\n                                        response: response.data,\n                                        type: \"success\",\n                                        request: value,\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: chunks[index],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // resolve with all created values\n                            resolve(createdValues);\n                        }\n                    },\n\n                    ...paparseOptions,\n                });\n            },\n        ).then((createdValues) => {\n            handleFinish(createdValues);\n            return createdValues;\n        });\n    };\n\n    return {\n        inputProps: {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.files && event.target.files.length > 0) {\n                    handleChange({ file: event.target.files[0] });\n                }\n            },\n        },\n        mutationResult,\n        isLoading,\n        handleChange,\n    };\n};\n", "import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n    visible: boolean;\n    show: () => void;\n    close: () => void;\n};\n\nexport type useModalProps = {\n    /**\n     * Initial state of the modal\n     */\n    defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n    defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n    const [visible, setVisible] = useState(defaultVisible);\n\n    const show = useCallback(() => setVisible(true), [visible]);\n    const close = useCallback(() => setVisible(false), [visible]);\n\n    return {\n        visible,\n        show,\n        close,\n    };\n};\n", "import { Action, IResourceItem } from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n    resource,\n    action,\n    meta,\n    legacy,\n}: UseToPathParams): string | undefined => {\n    const getToPath = useGetToPath();\n\n    return getToPath({ resource, action, meta, legacy });\n};\n", "import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useLink = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    if (bindings?.Link) {\n        return bindings.Link;\n    }\n\n    const FallbackLink: Required<typeof bindings>[\"Link\"] = ({\n        to,\n        ...rest\n    }) => <a href={to} {...rest} />;\n\n    return FallbackLink;\n};\n", "import { useContext } from \"react\";\nimport { RouterContext, defaultProvider } from \"@contexts/legacy-router\";\n\nexport const useRouterContext = () => {\n    const routerContextValues = useContext(RouterContext);\n\n    const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n        routerContextValues ?? defaultProvider;\n\n    return {\n        useHistory,\n        useLocation,\n        useParams,\n        Prompt,\n        Link,\n        routes,\n    };\n};\n", "import React from \"react\";\n\nimport { IRouterContext } from \"../../interfaces\";\n\nexport const defaultProvider: IRouterContext = {\n    useHistory: () => false,\n    useLocation: () => false,\n    useParams: () => ({} as any),\n    Prompt: () => null,\n    Link: () => null,\n};\n\nexport const LegacyRouterContext =\n    React.createContext<IRouterContext>(defaultProvider);\n\nexport const RouterContext = LegacyRouterContext;\n\nexport const LegacyRouterContextProvider: React.FC<\n    Partial<IRouterContext> & {\n        children?: React.ReactNode;\n    }\n> = ({\n    children,\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n}) => {\n    return (\n        <RouterContext.Provider\n            value={{\n                useHistory: useHistory ?? defaultProvider.useHistory,\n                useLocation: useLocation ?? defaultProvider.useLocation,\n                useParams: useParams ?? defaultProvider.useParams,\n                Prompt: Prompt ?? defaultProvider.Prompt,\n                Link: Link ?? defaultProvider.Link,\n                routes: routes ?? defaultProvider.routes,\n            }}\n        >\n            {children}\n        </RouterContext.Provider>\n    );\n};\n", "import {\n    useQuery,\n    UseQueryOptions,\n    UseQueryResult,\n} from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { CanParams, CanReturnType } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseCanProps = CanParams & {\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n    action,\n    resource,\n    params,\n    queryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n    const { can } = useContext(AccessControlContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    /**\n     * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n     * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n     */\n    const { resource: _resource, ...paramsRest } = params ?? {};\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const sanitizedResource = sanitizeResource(_resource);\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const queryResponse = useQuery<CanReturnType>({\n        queryKey: keys()\n            .access()\n            .resource(resource)\n            .action(action)\n            .params({\n                params: { ...paramsRest, resource: sanitizedResource },\n                enabled: queryOptions?.enabled,\n            })\n            .get(preferLegacyKeys),\n        // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        queryFn: () =>\n            can?.({\n                action,\n                resource,\n                params: { ...paramsRest, resource: sanitizedResource },\n            }) ?? Promise.resolve({ can: true }),\n        enabled: typeof can !== \"undefined\",\n        ...queryOptions,\n        meta: {\n            ...queryOptions?.meta,\n            ...getXRay(\"useCan\", preferLegacyKeys),\n        },\n        retry: false,\n    });\n\n    return typeof can === \"undefined\"\n        ? ({ data: { can: true } } as typeof queryResponse)\n        : queryResponse;\n};\n", "import React from \"react\";\n\nimport {\n    IAccessControlContext,\n    IAccessControlContextReturnType,\n} from \"./IAccessControlContext\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext: IAccessControlContext = {};\n\nexport const AccessControlContext =\n    React.createContext<IAccessControlContextReturnType>({\n        options: {\n            buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n        },\n    });\n\nexport { IAccessControlContext };\n\nexport const AccessControlContextProvider: React.FC<\n    IAccessControlContext & {\n        children?: React.ReactNode;\n    }\n> = ({ can, children, options }) => {\n    return (\n        <AccessControlContext.Provider\n            value={{\n                can,\n                options: options\n                    ? {\n                          ...options,\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                              ...options.buttons,\n                          },\n                      }\n                    : {\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                          },\n                      },\n            }}\n        >\n            {children}\n        </AccessControlContext.Provider>\n    );\n};\n", "import { IResourceItem } from \"../../../interfaces/bindings/resource\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n    resource?: Partial<IResourceItem> &\n        Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n    | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n    | undefined => {\n    if (!resource) {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {\n        icon,\n        list,\n        edit,\n        create,\n        show,\n        clone,\n        children,\n        meta,\n        options,\n        ...restResource\n    } = resource;\n\n    const { icon: _metaIcon, ...restMeta } = meta ?? {};\n    const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n    return {\n        ...restResource,\n        ...(meta ? { meta: restMeta } : {}),\n        ...(options ? { options: restOptions } : {}),\n    };\n};\n", "import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IAccessControlContext } from \"../../interfaces\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n    const { can: canFromContext } = React.useContext(AccessControlContext);\n\n    const can = React.useMemo(() => {\n        if (!canFromContext) {\n            return undefined;\n        }\n\n        const canWithSanitizedResource: NonNullable<\n            typeof canFromContext\n        > = async ({ params, ...rest }) => {\n            const sanitizedResource = params?.resource\n                ? sanitizeResource(params.resource)\n                : undefined;\n\n            return canFromContext({\n                ...rest,\n                ...(params\n                    ? {\n                          params: {\n                              ...params,\n                              resource: sanitizedResource,\n                          },\n                      }\n                    : {}),\n            });\n        };\n\n        return canWithSanitizedResource;\n    }, [canFromContext]);\n\n    return { can };\n};\n", "import { useCallback, useMemo, useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport uniqBy from \"lodash-es/uniqBy\";\nimport debounce from \"lodash-es/debounce\";\nimport get from \"lodash-es/get\";\n\nimport { useList, useMany, useMeta } from \"@hooks\";\nimport {\n    CrudSorting,\n    BaseOption,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    CrudFilters,\n    SuccessErrorNotification,\n    HttpError,\n    LiveModeProps,\n    BaseKey,\n    Pagination,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource/index\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Set the option's value\n     * @default `\"title\"`\n     */\n    optionLabel?: keyof TData extends string ? keyof TData : never;\n    /**\n     * Set the option's label value\n     * @default `\"id\"`\n     */\n    optionValue?: keyof TData extends string ? keyof TData : never;\n    /**\n     * Allow us to sort the options\n     * @deprecated Use `sorters` instead\n     */\n    sort?: CrudSorting;\n    /**\n     * Allow us to sort the options\n     */\n    sorters?: CrudSorting;\n    /**\n     * Resource name for API data interactions\n     */\n    filters?: CrudFilters;\n    /**\n     * Adds extra `options`\n     */\n    defaultValue?: BaseKey | BaseKey[];\n    /**\n     * The number of milliseconds to delay\n     * @default `300`\n     */\n    debounce?: number;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type {  current?: number; pageSize?: number;}\n     * @default `undefined`\n     */\n    pagination?: Prettify<\n        Omit<Pagination, \"mode\"> & {\n            /**\n             * Whether to use server side pagination or not.\n             * @default \"off\"\n             */\n            mode?: Pagination[\"mode\"];\n        }\n    >;\n    /**\n     * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type boolean\n     * @default `false`\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    defaultValueQueryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError\n    >;\n    /**\n     * If defined, this callback allows us to override all filters for every search request.\n     * @default `undefined`\n     */\n    onSearch?: (value: string) => CrudFilters;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `default`\n     */\n    dataProviderName?: string;\n    /**\n     * Amount of records to fetch in select box list.\n     * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n     * @default `undefined`\n     */\n    fetchSize?: number;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TOption extends BaseOption = BaseOption,\n> = {\n    queryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n    onSearch: (value: string) => void;\n    options: TOption[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TError, TOption> => {\n    const [search, setSearch] = useState<CrudFilters>([]);\n    const [options, setOptions] = useState<TOption[]>([]);\n    const [selectedOptions, setSelectedOptions] = useState<TOption[]>([]);\n\n    const {\n        resource: resourceFromProps,\n        sort,\n        sorters,\n        filters = [],\n        optionLabel = \"title\",\n        optionValue = \"id\",\n        debounce: debounceValue = 300,\n        successNotification,\n        errorNotification,\n        defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n        queryOptions,\n        fetchSize,\n        pagination,\n        hasPagination = false,\n        liveMode,\n        defaultValue = [],\n        onLiveEvent,\n        onSearch: onSearchFromProp,\n        liveParams,\n        meta,\n        metaData,\n        dataProviderName,\n        overtimeOptions,\n    } = props;\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const getMeta = useMeta();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const defaultValues = Array.isArray(defaultValue)\n        ? defaultValue\n        : [defaultValue];\n\n    const defaultValueQueryOnSuccess = useCallback(\n        (data: GetManyResponse<TData>) => {\n            setSelectedOptions(\n                data.data.map(\n                    (item) =>\n                        ({\n                            label: get(item, optionLabel),\n                            value: get(item, optionValue),\n                        } as TOption),\n                ),\n            );\n        },\n        [optionLabel, optionValue],\n    );\n\n    const defaultValueQueryOptions =\n        defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n    const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n        resource: identifier,\n        ids: defaultValues,\n        queryOptions: {\n            ...defaultValueQueryOptions,\n            enabled:\n                defaultValues.length > 0 &&\n                (defaultValueQueryOptions?.enabled ?? true),\n            onSuccess: (data) => {\n                defaultValueQueryOnSuccess(data);\n                defaultValueQueryOptions?.onSuccess?.(data);\n            },\n        },\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode: \"off\",\n        dataProviderName,\n    });\n\n    const defaultQueryOnSuccess = useCallback(\n        (data: GetListResponse<TData>) => {\n            {\n                setOptions(\n                    data.data.map(\n                        (item) =>\n                            ({\n                                label: get(item, optionLabel),\n                                value: get(item, optionValue),\n                            } as TOption),\n                    ),\n                );\n            }\n        },\n        [optionLabel, optionValue],\n    );\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        sorters: pickNotDeprecated(sorters, sort),\n        filters: filters.concat(search),\n        pagination: {\n            current: pagination?.current,\n            pageSize: pagination?.pageSize ?? fetchSize,\n            mode: pagination?.mode,\n        },\n        hasPagination,\n        queryOptions: {\n            ...queryOptions,\n            onSuccess: (data) => {\n                defaultQueryOnSuccess(data);\n                queryOptions?.onSuccess?.(data);\n            },\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const onSearch = (value: string) => {\n        if (onSearchFromProp) {\n            setSearch(onSearchFromProp(value));\n            return;\n        }\n\n        if (!value) {\n            setSearch([]);\n            return;\n        } else {\n            setSearch([\n                {\n                    field: optionLabel,\n                    operator: \"contains\",\n                    value,\n                },\n            ]);\n        }\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    const combinedOptions = useMemo(\n        () => uniqBy([...options, ...selectedOptions], \"value\"),\n        [options, selectedOptions],\n    );\n\n    return {\n        queryResult,\n        defaultValueQueryResult,\n        options: combinedOptions,\n        onSearch: debounce(onSearch, debounceValue),\n        overtime: { elapsedTime },\n    };\n};\n", "import React, { useState, useEffect } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport qs from \"qs\";\nimport differenceWith from \"lodash-es/differenceWith\";\nimport isEqual from \"lodash-es/isEqual\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    useRouterContext,\n    useSyncWithLocation,\n    useNavigation,\n    useList,\n    useLiveMode,\n    useRouterType,\n    useResource,\n    useParsed,\n    useMeta,\n} from \"@hooks\";\nimport {\n    stringifyTableParams,\n    parseTableParams,\n    unionFilters,\n    setInitialFilters,\n    setInitialSorters,\n    unionSorters,\n} from \"@definitions/table\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    SuccessErrorNotification,\n    HttpError,\n    MetaQuery,\n    LiveModeProps,\n    Pagination,\n    Prettify,\n} from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Configuration for pagination\n     */\n    pagination?: Pagination;\n    /**\n     * Initial page index\n     * @default 1\n     * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n     */\n    initialCurrent?: number;\n    /**\n     * Initial number of items per page\n     * @default 10\n     * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n     */\n    initialPageSize?: number;\n    /**\n     * Sort configs\n     */\n    sorters?: {\n        /**\n         * Initial sorter state\n         */\n        initial?: CrudSorting;\n        /**\n         * Default and unchangeable sorter state\n         *  @default `[]`\n         */\n        permanent?: CrudSorting;\n        /**\n         * Whether to use server side sorting or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial sorter state\n     * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n     */\n    initialSorter?: CrudSorting;\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n     */\n    permanentSorter?: CrudSorting;\n    /**\n     * Filter configs\n     */\n    filters?: {\n        /**\n         * Initial filter state\n         */\n        initial?: CrudFilters;\n        /**\n         * Default and unchangeable filter state\n         *  @default `[]`\n         */\n        permanent?: CrudFilters;\n        /**\n         * Default behavior of the `setFilters` function\n         * @default `\"merge\"`\n         */\n        defaultBehavior?: SetFilterBehavior;\n        /**\n         * Whether to use server side filter or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial filter state\n     * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n     */\n    initialFilter?: CrudFilters;\n    /**\n     * Default and unchangeable filter state\n     * @default `[]`\n     * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n     */\n    permanentFilter?: CrudFilters;\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n     */\n    defaultSetFilterBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side pagination or not.\n     * @default `true`\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sortings, filters, page index and records shown per page are tracked by browser history\n     * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n     */\n    syncWithLocation?: boolean;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n    pagination: { current?: number; pageSize?: number };\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    sorters: CrudSorting;\n    filters: CrudFilters;\n};\n\nexport type useTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n> = {\n    tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter: CrudSorting;\n    sorters: CrudSorting;\n    /**\n     * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n     */\n    setSorter: (sorter: CrudSorting) => void;\n    setSorters: (sorter: CrudSorting) => void;\n    filters: CrudFilters;\n    setFilters: ((filters: CrudFilters, behavior?: SetFilterBehavior) => void) &\n        ((setter: (prevFilters: CrudFilters) => CrudFilters) => void);\n    createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n    current: number;\n    setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n    pageSize: number;\n    setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n    pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilters = [];\nconst defaultPermanentSorter: CrudSorting = [];\n\nexport function useTable<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    initialCurrent,\n    initialPageSize,\n    hasPagination = true,\n    pagination,\n    initialSorter,\n    permanentSorter = defaultPermanentSorter,\n    defaultSetFilterBehavior,\n    initialFilter,\n    permanentFilter = defaultPermanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n    TData,\n    TError\n> {\n    const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n    const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const routerType = useRouterType();\n    const { useLocation } = useRouterContext();\n    const { search, pathname } = useLocation();\n    const getMeta = useMeta();\n    const parsedParams = useParsed();\n\n    const isServerSideFilteringEnabled =\n        (filtersFromProp?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (sortersFromProp?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n    const prefferedCurrent = pickNotDeprecated(\n        pagination?.current,\n        initialCurrent,\n    );\n    const prefferedPageSize = pickNotDeprecated(\n        pagination?.pageSize,\n        initialPageSize,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    /** `parseTableParams` is redundant with the new routing */\n    // We want to always parse the query string even when syncWithLocation is\n    // deactivated, for hotlinking to work properly\n    const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n        parseTableParams(search ?? \"?\");\n\n    const preferredInitialFilters = pickNotDeprecated(\n        filtersFromProp?.initial,\n        initialFilter,\n    );\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n        defaultPermanentFilter;\n\n    const preferredInitialSorters = pickNotDeprecated(\n        sortersFromProp?.initial,\n        initialSorter,\n    );\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n        defaultPermanentSorter;\n\n    const prefferedFilterBehavior =\n        pickNotDeprecated(\n            filtersFromProp?.defaultBehavior,\n            defaultSetFilterBehavior,\n        ) ?? \"merge\";\n\n    let defaultCurrent: number;\n    let defaultPageSize: number;\n    let defaultSorter: CrudSorting | undefined;\n    let defaultFilter: CrudFilters | undefined;\n\n    if (syncWithLocation) {\n        defaultCurrent =\n            parsedParams?.params?.current ||\n            parsedCurrent ||\n            prefferedCurrent ||\n            1;\n        defaultPageSize =\n            parsedParams?.params?.pageSize ||\n            parsedPageSize ||\n            prefferedPageSize ||\n            10;\n        defaultSorter =\n            parsedParams?.params?.sorters ||\n            (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n        defaultFilter =\n            parsedParams?.params?.filters ||\n            (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n    } else {\n        defaultCurrent = prefferedCurrent || 1;\n        defaultPageSize = prefferedPageSize || 10;\n        defaultSorter = preferredInitialSorters;\n        defaultFilter = preferredInitialFilters;\n    }\n\n    const { replace } = useNavigation();\n    /** New way of `replace` calls to the router is using `useGo` */\n    const go = useGo();\n\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: preferredMeta,\n    });\n\n    React.useEffect(() => {\n        warnOnce(\n            typeof identifier === \"undefined\",\n            `useTable: \\`resource\\` is not defined.`,\n        );\n    }, [identifier]);\n\n    const [sorters, setSorters] = useState<CrudSorting>(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n    );\n    const [filters, setFilters] = useState<CrudFilters>(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n    );\n    const [current, setCurrent] = useState<number>(defaultCurrent);\n    const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n    const createLinkForSyncWithLocation = ({\n        pagination: { current, pageSize },\n        sorter,\n        filters,\n    }: SyncWithLocationParams) => {\n        if (routerType === \"new\") {\n            return (\n                go({\n                    type: \"path\",\n                    options: {\n                        keepHash: true,\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { current, pageSize } : {}),\n                        sorters: sorter,\n                        filters,\n                        ...currentQueryParams(),\n                    },\n                }) ?? \"\"\n            );\n        } else {\n            const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n            const stringifyParams = stringifyTableParams({\n                pagination: {\n                    pageSize,\n                    current,\n                },\n                sorters: sorters ?? sorter,\n                filters,\n                ...currentQueryParams,\n            });\n            return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n        }\n    };\n\n    useEffect(() => {\n        if (search === \"\") {\n            setCurrent(defaultCurrent);\n            setPageSize(defaultPageSize);\n            setSorters(\n                setInitialSorters(\n                    preferredPermanentSorters,\n                    defaultSorter ?? [],\n                ),\n            );\n            setFilters(\n                setInitialFilters(\n                    preferredPermanentFilters,\n                    defaultFilter ?? [],\n                ),\n            );\n        }\n    }, [search]);\n\n    const currentQueryParams = (): object => {\n        if (routerType === \"new\") {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorters, filters, pageSize, current, ...rest } =\n                parsedParams?.params ?? {};\n\n            return rest;\n        } else {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorter, filters, pageSize, current, ...rest } = qs.parse(\n                search,\n                {\n                    ignoreQueryPrefix: true,\n                },\n            );\n\n            return rest;\n        }\n    };\n\n    useEffect(() => {\n        if (syncWithLocation) {\n            // Careful! This triggers render\n            const queryParams = currentQueryParams();\n\n            if (routerType === \"new\") {\n                go({\n                    type: \"replace\",\n                    options: {\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { pageSize, current } : {}),\n                        sorters: differenceWith(\n                            sorters,\n                            preferredPermanentSorters,\n                            isEqual,\n                        ),\n                        filters: differenceWith(\n                            filters,\n                            preferredPermanentFilters,\n                            isEqual,\n                        ),\n                        // ...queryParams,\n                    },\n                });\n            } else {\n                const stringifyParams = stringifyTableParams({\n                    ...(isPaginationEnabled\n                        ? {\n                              pagination: {\n                                  pageSize,\n                                  current,\n                              },\n                          }\n                        : {}),\n                    sorters: differenceWith(\n                        sorters,\n                        preferredPermanentSorters,\n                        isEqual,\n                    ),\n                    filters: differenceWith(\n                        filters,\n                        preferredPermanentFilters,\n                        isEqual,\n                    ),\n                    ...queryParams,\n                });\n                return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n                    shallow: true,\n                });\n            }\n        }\n    }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        hasPagination,\n        pagination: { current, pageSize, mode: pagination?.mode },\n        filters: isServerSideFilteringEnabled\n            ? unionFilters(preferredPermanentFilters, filters)\n            : undefined,\n        sorters: isServerSideSortingEnabled\n            ? unionSorters(preferredPermanentSorters, sorters)\n            : undefined,\n        queryOptions,\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const setFiltersAsMerge = (newFilters: CrudFilters) => {\n        setFilters((prevFilters) =>\n            unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n        );\n    };\n\n    const setFiltersAsReplace = (newFilters: CrudFilters) => {\n        setFilters(unionFilters(preferredPermanentFilters, newFilters));\n    };\n\n    const setFiltersWithSetter = (\n        setter: (prevFilters: CrudFilters) => CrudFilters,\n    ) => {\n        setFilters((prev) =>\n            unionFilters(preferredPermanentFilters, setter(prev)),\n        );\n    };\n\n    const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] = (\n        setterOrFilters,\n        behavior: SetFilterBehavior = prefferedFilterBehavior,\n    ) => {\n        if (typeof setterOrFilters === \"function\") {\n            setFiltersWithSetter(setterOrFilters);\n        } else {\n            if (behavior === \"replace\") {\n                setFiltersAsReplace(setterOrFilters);\n            } else {\n                setFiltersAsMerge(setterOrFilters);\n            }\n        }\n    };\n\n    const setSortWithUnion = (newSorter: CrudSorting) => {\n        setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        tableQueryResult: queryResult,\n        sorters,\n        setSorters: setSortWithUnion,\n        sorter: sorters,\n        setSorter: setSortWithUnion,\n        filters,\n        setFilters: setFiltersFn,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount: pageSize\n            ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n            : 1,\n        createLinkForSyncWithLocation,\n        overtime: {\n            elapsedTime,\n        },\n    };\n}\n", "import { useContext } from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { BaseKey, LogParams } from \"../../../interfaces\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\ntype LogRenameData =\n    | {\n          resource?: string;\n      }\n    | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n    log: UseMutationResult<TLogData, Error, LogParams>;\n    rename: UseMutationResult<\n        TLogRenameData,\n        Error,\n        {\n            id: BaseKey;\n            name: string;\n        }\n    >;\n};\n\nexport type UseLogMutationProps<\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n    logMutationOptions?: Omit<\n        UseMutationOptions<TLogData, Error, LogParams, unknown>,\n        \"mutationFn\"\n    >;\n    renameMutationOptions?: Omit<\n        UseMutationOptions<\n            TLogRenameData,\n            Error,\n            { id: BaseKey; name: string },\n            unknown\n        >,\n        \"mutationFn\" | \"onSuccess\"\n    >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n>({\n    logMutationOptions,\n    renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n    TLogData,\n    TLogRenameData\n> => {\n    const queryClient = useQueryClient();\n    const auditLogContext = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const authProvider = useActiveAuthProvider();\n\n    const { resources } = useContext(ResourceContext);\n    const {\n        data: identityData,\n        refetch,\n        isLoading,\n    } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        queryOptions: {\n            enabled: !!auditLogContext?.create,\n        },\n    });\n\n    const log = useMutation<TLogData, Error, LogParams, unknown>(\n        async (params) => {\n            const resource = pickResource(params.resource, resources);\n            const logPermissions = pickNotDeprecated(\n                resource?.meta?.audit,\n                resource?.options?.audit,\n                resource?.options?.auditLog?.permissions,\n            );\n\n            if (logPermissions) {\n                if (!hasPermission(logPermissions, params.action)) {\n                    return;\n                }\n            }\n\n            let authorData;\n            if (isLoading && !!auditLogContext?.create) {\n                authorData = await refetch();\n            }\n\n            return await auditLogContext.create?.({\n                ...params,\n                author: identityData ?? authorData?.data,\n            });\n        },\n        {\n            mutationKey: keys().audit().action(\"log\").get(),\n            ...logMutationOptions,\n            meta: {\n                ...logMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const rename = useMutation<\n        TLogRenameData,\n        Error,\n        { id: BaseKey; name: string },\n        unknown\n    >(\n        async (params) => {\n            return await auditLogContext.update?.(params);\n        },\n        {\n            onSuccess: (data) => {\n                if (data?.resource) {\n                    queryClient.invalidateQueries(\n                        keys()\n                            .audit()\n                            .resource(data?.resource ?? \"\")\n                            .action(\"list\")\n                            .get(preferLegacyKeys),\n                    );\n                }\n            },\n            mutationKey: keys().audit().action(\"rename\").get(),\n            ...renameMutationOptions,\n            meta: {\n                ...renameMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return { log, rename };\n};\n", "import React from \"react\";\n\nimport { IAuditLogContext } from \"./IAuditLogContext\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n    IAuditLogContext & {\n        children: React.ReactNode;\n    }\n> = ({ create, get, update, children }) => {\n    return (\n        <AuditLogContext.Provider value={{ create, get, update }}>\n            {children}\n        </AuditLogContext.Provider>\n    );\n};\n", "import { useContext } from \"react\";\nimport {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { HttpError, MetaQuery } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n    resource: string;\n    action?: string;\n    meta?: Record<number | string, any>;\n    author?: Record<number | string, any>;\n    queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n    metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n    TQueryFnData = any,\n    TError extends HttpError = HttpError,\n    TData = TQueryFnData,\n>({\n    resource,\n    action,\n    meta,\n    author,\n    metaData,\n    queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n    const { get } = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TQueryFnData, TError, TData>({\n        queryKey: keys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n        queryFn: () =>\n            get?.({\n                resource,\n                action,\n                author,\n                meta,\n                metaData,\n            }) ?? Promise.resolve([]),\n        enabled: typeof get !== \"undefined\",\n        ...queryOptions,\n        retry: false,\n        meta: {\n            ...queryOptions?.meta,\n            ...getXRay(\"useLogList\", preferLegacyKeys),\n        },\n    });\n\n    return queryResponse;\n};\n", "import React, { useContext } from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { pickNotDeprecated } from \"@definitions\";\n\nimport { IResourceItem } from \"../../interfaces\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nexport type BreadcrumbsType = {\n    label: string;\n    href?: string;\n    icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n    breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n    /**\n     * Additional params to be used in the route generation process.\n     */\n    meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n    meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n    const routerType = useRouterType();\n    const { i18nProvider } = useContext(TranslationContext);\n    const parsed = useParsed();\n    const translate = useTranslate();\n    const { resources, resource, action } = useResource();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const breadcrumbs: BreadcrumbsType[] = [];\n\n    if (!resource?.name) {\n        return { breadcrumbs };\n    }\n\n    const addBreadcrumb = (parentName: string | IResourceItem) => {\n        const parentResource =\n            typeof parentName === \"string\"\n                ? pickResource(\n                      parentName,\n                      resources,\n                      routerType === \"legacy\",\n                  ) ?? { name: parentName }\n                : parentName;\n\n        if (parentResource) {\n            const grandParentName = pickNotDeprecated(\n                parentResource?.meta?.parent,\n                parentResource?.parentName,\n            );\n            if (grandParentName) {\n                addBreadcrumb(grandParentName);\n            }\n            const listActionOfResource = getActionRoutesFromResource(\n                parentResource,\n                resources,\n                routerType === \"legacy\",\n            ).find((r) => r.action === \"list\");\n\n            const hrefRaw = listActionOfResource?.resource?.list\n                ? listActionOfResource?.route\n                : undefined;\n\n            const href = hrefRaw\n                ? routerType === \"legacy\"\n                    ? hrefRaw\n                    : composeRoute(\n                          hrefRaw,\n                          parentResource?.meta,\n                          parsed,\n                          metaFromProps,\n                      )\n                : undefined;\n\n            breadcrumbs.push({\n                label:\n                    pickNotDeprecated(\n                        parentResource.meta?.label,\n                        parentResource.options?.label,\n                    ) ??\n                    translate(\n                        `${parentResource.name}.${parentResource.name}`,\n                        textTransformers.humanize(parentResource.name),\n                    ),\n                href: href,\n                icon: pickNotDeprecated(\n                    parentResource.meta?.icon,\n                    parentResource.options?.icon,\n                    parentResource.icon,\n                ),\n            });\n        }\n    };\n\n    addBreadcrumb(resource);\n\n    if (action && action !== \"list\") {\n        const key = `actions.${action}`;\n        const actionLabel = translate(key);\n        if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n            warnOnce(\n                true,\n                `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n            );\n            breadcrumbs.push({\n                label: translate(\n                    `buttons.${action}`,\n                    textTransformers.humanize(action),\n                ),\n            });\n        } else {\n            breadcrumbs.push({\n                label: translate(key, textTransformers.humanize(action)),\n            });\n        }\n    }\n\n    return {\n        breadcrumbs,\n    };\n};\n", "import React from \"react\";\nimport { useTranslate, useResource, useParsed, useRouterContext } from \"..\";\nimport { useUserFriendlyName, pickNotDeprecated } from \"@definitions\";\nimport { useRouterType } from \"../../contexts/router-picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\nimport { getParentResource } from \"@definitions/helpers/router\";\nimport {\n    FlatTreeItem,\n    createTree,\n} from \"../../definitions/helpers/menu/create-tree\";\n\ntype UseMenuReturnType = {\n    defaultOpenKeys: string[];\n    selectedKey: string;\n    menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n    meta?: Record<string, any>;\n    hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem = FlatTreeItem & {\n    route?: string;\n    icon?: React.ReactNode;\n    label?: string;\n    children: TreeMenuItem[];\n};\n\nconst getCleanPath = (pathname: string) => {\n    return pathname\n        .split(\"?\")[0]\n        .split(\"#\")[0]\n        .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n    { meta, hideOnMissingParameter }: UseMenuProps = {\n        hideOnMissingParameter: true,\n    },\n): UseMenuReturnType => {\n    const translate = useTranslate();\n\n    const getToPath = useGetToPath();\n    const routerType = useRouterType();\n    const { resource, resources } = useResource();\n    const { pathname } = useParsed();\n    const { useLocation } = useRouterContext();\n    const { pathname: legacyPath } = useLocation();\n    const getFriendlyName = useUserFriendlyName();\n\n    const cleanPathname =\n        routerType === \"legacy\"\n            ? getCleanPath(legacyPath)\n            : pathname\n            ? getCleanPath(pathname)\n            : undefined;\n\n    const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n    const selectedKey = resource\n        ? createResourceKey(resource, resources, routerType === \"legacy\")\n        : cleanRoute ?? \"\";\n\n    const defaultOpenKeys = React.useMemo(() => {\n        if (!resource) return [];\n        let parent = getParentResource(resource, resources);\n        const keys = [createResourceKey(resource, resources)];\n        while (parent) {\n            keys.push(createResourceKey(parent, resources));\n            parent = getParentResource(parent, resources);\n        }\n        return keys;\n    }, []);\n\n    const prepareItem = React.useCallback(\n        (item: FlatTreeItem): TreeMenuItem | undefined => {\n            if (item?.meta?.hide ?? item?.options?.hide) return undefined;\n            if (!item?.list && item.children.length === 0) return undefined;\n\n            const composed = item.list\n                ? getToPath({\n                      resource: item,\n                      action: \"list\",\n                      legacy: routerType === \"legacy\",\n                      meta,\n                  })\n                : undefined;\n\n            if (\n                hideOnMissingParameter &&\n                composed &&\n                composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n            )\n                return undefined;\n\n            return {\n                ...item,\n                route: composed,\n                icon: pickNotDeprecated(\n                    item.meta?.icon,\n                    item.options?.icon,\n                    item.icon,\n                ),\n                label:\n                    pickNotDeprecated(\n                        item?.meta?.label,\n                        item?.options?.label,\n                    ) ??\n                    translate(\n                        `${item.name}.${item.name}`,\n                        getFriendlyName(item.name, \"plural\"),\n                    ),\n            };\n        },\n        [routerType, meta, getToPath, translate, hideOnMissingParameter],\n    );\n\n    const treeItems = React.useMemo(() => {\n        const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n        // add paths to items and their nodes recursively\n        const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n            return items.flatMap((item) => {\n                const preparedNodes = prepare(item.children);\n                const newItem = prepareItem({\n                    ...item,\n                    children: preparedNodes,\n                });\n\n                if (!newItem) return [];\n\n                return [newItem];\n            });\n        };\n\n        return prepare(treeMenuItems);\n    }, [resources, routerType, prepareItem]);\n\n    return {\n        defaultOpenKeys,\n        selectedKey,\n        menuItems: treeItems,\n    };\n};\n", "import { IResourceItem } from \"../../../interfaces\";\nimport {\n    getParentResource,\n    removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    legacy = false,\n) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParentResource = getParentResource(resource, resources);\n    while (currentParentResource) {\n        parents.push(currentParentResource);\n        currentParentResource = getParentResource(\n            currentParentResource,\n            resources,\n        );\n    }\n    parents.reverse();\n\n    const key = [...parents, resource]\n        .map((r) =>\n            removeLeadingTrailingSlashes(\n                (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n            ),\n        )\n        .join(\"/\");\n\n    return `/${key.replace(/^\\//, \"\")}`;\n};\n", "import { IResourceItem } from \"../../../contexts/resource\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n    item: IResourceItem;\n    children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n    key: string;\n    children: FlatTreeItem[];\n};\n\nexport const createTree = (\n    resources: IResourceItem[],\n    legacy = false,\n): FlatTreeItem[] => {\n    const root: Tree = {\n        item: {\n            name: \"__root__\",\n        },\n        children: {},\n    };\n\n    resources.forEach((resource) => {\n        const parents: IResourceItem[] = [];\n\n        let currentParent = getParentResource(resource, resources);\n        while (currentParent) {\n            parents.push(currentParent);\n            currentParent = getParentResource(currentParent, resources);\n        }\n        parents.reverse();\n\n        let currentTree = root;\n\n        parents.forEach((parent) => {\n            const key =\n                (legacy ? parent.route : undefined) ??\n                parent.identifier ??\n                parent.name;\n\n            if (!currentTree.children[key]) {\n                currentTree.children[key] = {\n                    item: parent,\n                    children: {},\n                };\n            }\n            currentTree = currentTree.children[key];\n        });\n\n        const key =\n            (legacy ? resource.route : undefined) ??\n            resource.identifier ??\n            resource.name;\n\n        if (!currentTree.children[key]) {\n            currentTree.children[key] = {\n                item: resource,\n                children: {},\n            };\n        }\n    });\n\n    const flatten = (tree: Tree): FlatTreeItem[] => {\n        const items: FlatTreeItem[] = [];\n\n        Object.keys(tree.children).forEach((key) => {\n            const itemKey = createResourceKey(\n                tree.children[key].item,\n                resources,\n                legacy,\n            );\n            const item: FlatTreeItem = {\n                ...tree.children[key].item,\n                key: itemKey,\n                children: flatten(tree.children[key]),\n            };\n            items.push(item);\n        });\n\n        return items;\n    };\n\n    return flatten(root);\n};\n", "import { useParsed } from \"@hooks/router\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IResourceItem, MetaQuery } from \"../../interfaces\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta and query params.\n * @internal\n */\nexport const useMeta = () => {\n    const { params } = useParsed();\n\n    const getMetaFn = ({\n        resource,\n        meta: metaFromProp,\n    }: {\n        resource?: IResourceItem;\n        meta?: MetaQuery;\n    } = {}) => {\n        const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n        // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n        const {\n            filters: _filters,\n            sorters: _sorters,\n            current: _current,\n            pageSize: _pageSize,\n            ...additionalParams\n        } = params ?? {};\n\n        return { ...meta, ...additionalParams, ...metaFromProp };\n    };\n\n    return getMetaFn;\n};\n", "import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n    username: string;\n    password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    return (\n        <>\n            <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ username, password });\n                }}\n            >\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.username\",\n                                    undefined,\n                                    \"username\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    size={20}\n                                    autoCorrect=\"off\"\n                                    spellCheck={false}\n                                    autoCapitalize=\"off\"\n                                    autoFocus\n                                    required\n                                    value={username}\n                                    onChange={(e) =>\n                                        setUsername(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.password\",\n                                    undefined,\n                                    \"password\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"password\"\n                                    required\n                                    size={20}\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br />\n                <input type=\"submit\" value=\"login\" />\n            </form>\n        </>\n    );\n};\n", "import React, {\n    DetailedHTMLProps,\n    HTMLAttributes,\n    FormHTMLAttributes,\n} from \"react\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nimport { AuthPageProps } from \"../../../interfaces\";\n\nexport type DivPropsType = DetailedHTMLProps<\n    HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n    FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n", "import React, { useState } from \"react\";\nimport { LoginPageProps, LoginFormTypes } from \"../../../../../interfaces\";\n\nimport { useRouterContext, useLink, useRouterType, useLogin } from \"@hooks\";\nimport { useTranslate } from \"@hooks/translate\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title = undefined,\n    hideForm,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [remember, setRemember] = useState(false);\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            login({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </h1>\n            {renderProviders()}\n            {!hideForm && (\n                <>\n                    <hr />\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            login({ email, password, remember });\n                        }}\n                        {...formProps}\n                    >\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                padding: 25,\n                            }}\n                        >\n                            <label htmlFor=\"email-input\">\n                                {translate(\"pages.login.fields.email\", \"Email\")}\n                            </label>\n                            <input\n                                id=\"email-input\"\n                                name=\"email\"\n                                type=\"text\"\n                                size={20}\n                                autoCorrect=\"off\"\n                                spellCheck={false}\n                                autoCapitalize=\"off\"\n                                required\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                            <label htmlFor=\"password-input\">\n                                {translate(\n                                    \"pages.login.fields.password\",\n                                    \"Password\",\n                                )}\n                            </label>\n                            <input\n                                id=\"password-input\"\n                                type=\"password\"\n                                name=\"password\"\n                                required\n                                size={20}\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            {rememberMe ?? (\n                                <>\n                                    <label htmlFor=\"remember-me-input\">\n                                        {translate(\n                                            \"pages.login.buttons.rememberMe\",\n                                            \"Remember me\",\n                                        )}\n                                        <input\n                                            id=\"remember-me-input\"\n                                            name=\"remember\"\n                                            type=\"checkbox\"\n                                            size={20}\n                                            checked={remember}\n                                            value={remember.toString()}\n                                            onChange={() => {\n                                                setRemember(!remember);\n                                            }}\n                                        />\n                                    </label>\n                                </>\n                            )}\n                            <br />\n                            {forgotPasswordLink ??\n                                renderLink(\n                                    \"/forgot-password\",\n                                    translate(\n                                        \"pages.login.buttons.forgotPassword\",\n                                        \"Forgot password?\",\n                                    ),\n                                )}\n                            <input\n                                type=\"submit\"\n                                value={translate(\n                                    \"pages.login.signin\",\n                                    \"Sign in\",\n                                )}\n                            />\n                            {registerLink ?? (\n                                <span>\n                                    {translate(\n                                        \"pages.login.buttons.noAccount\",\n                                        \"Don’t have an account?\",\n                                    )}{\" \"}\n                                    {renderLink(\n                                        \"/register\",\n                                        translate(\n                                            \"pages.login.register\",\n                                            \"Sign up\",\n                                        ),\n                                    )}\n                                </span>\n                            )}\n                        </div>\n                    </form>\n                </>\n            )}\n            {registerLink !== false && hideForm && (\n                <div style={{ textAlign: \"center\" }}>\n                    {translate(\n                        \"pages.login.buttons.noAccount\",\n                        \"Don’t have an account?\",\n                    )}{\" \"}\n                    {renderLink(\n                        \"/register\",\n                        translate(\"pages.login.register\", \"Sign up\"),\n                    )}\n                </div>\n            )}\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n", "import React, { useState } from \"react\";\nimport { RegisterPageProps } from \"../../../../../interfaces\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useRegister,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype RegisterProps = RegisterPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n    hideForm,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            register({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </h1>\n            {renderProviders()}\n            {!hideForm && (\n                <>\n                    <hr />\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            register({ email, password });\n                        }}\n                        {...formProps}\n                    >\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                padding: 25,\n                            }}\n                        >\n                            <label htmlFor=\"email-input\">\n                                {translate(\n                                    \"pages.register.fields.email\",\n                                    \"Email\",\n                                )}\n                            </label>\n                            <input\n                                id=\"email-input\"\n                                name=\"email\"\n                                type=\"email\"\n                                size={20}\n                                autoCorrect=\"off\"\n                                spellCheck={false}\n                                autoCapitalize=\"off\"\n                                required\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                            <label htmlFor=\"password-input\">\n                                {translate(\n                                    \"pages.register.fields.password\",\n                                    \"Password\",\n                                )}\n                            </label>\n                            <input\n                                id=\"password-input\"\n                                name=\"password\"\n                                type=\"password\"\n                                required\n                                size={20}\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            <input\n                                type=\"submit\"\n                                value={translate(\n                                    \"pages.register.buttons.submit\",\n                                    \"Sign up\",\n                                )}\n                                disabled={isLoading}\n                            />\n                            {loginLink ?? (\n                                <>\n                                    <span>\n                                        {translate(\n                                            \"pages.login.buttons.haveAccount\",\n                                            \"Have an account?\",\n                                        )}{\" \"}\n                                        {renderLink(\n                                            \"/login\",\n                                            translate(\n                                                \"pages.login.signin\",\n                                                \"Sign in\",\n                                            ),\n                                        )}\n                                    </span>\n                                </>\n                            )}\n                        </div>\n                    </form>\n                </>\n            )}\n            {loginLink !== false && hideForm && (\n                <div style={{ textAlign: \"center\" }}>\n                    {translate(\n                        \"pages.login.buttons.haveAccount\",\n                        \"Have an account?\",\n                    )}{\" \"}\n                    {renderLink(\n                        \"/login\",\n                        translate(\"pages.login.signin\", \"Sign in\"),\n                    )}\n                </div>\n            )}\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n", "import React, { useState } from \"react\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useForgotPassword,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport {\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n} from \"../../../../../interfaces\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    forgotPassword({ email });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"mail\"\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    />\n                    <br />\n                    {loginLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account? \",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/login\",\n                                translate(\"pages.login.signin\", \"Sign in\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n", "import React, { useState } from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n} from \"../../../../../interfaces\";\n\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.updatePassword.title\", \"Update Password\")}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    updatePassword({\n                        password: newPassword,\n                        confirmPassword,\n                    });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                    <label htmlFor=\"confirm-password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"confirm-password-input\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n", "import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n    return (\n        <>\n            <h1>Welcome on board</h1>\n            <p>Your configuration is completed.</p>\n            <p>\n                Now you can get started by adding your resources to the{\" \"}\n                <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n            </p>\n            <div style={{ display: \"flex\", gap: 8 }}>\n                <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n                    <button>Documentation</button>\n                </a>\n                <a\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Examples</button>\n                </a>\n                <a\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Community</button>\n                </a>\n            </div>\n        </>\n    );\n};\n", "import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n    title: string;\n    description: string;\n    link: string;\n    iconUrl: string;\n};\n\nconst cards: CardInfo[] = [\n    {\n        title: \"Documentation\",\n        description:\n            \"Learn about the technical details of using refine in your projects.\",\n        link: \"https://refine.dev/\",\n        iconUrl:\n            \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/book.svg\",\n    },\n    {\n        title: \"Tutorial\",\n        description:\n            \"Learn how to use refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n        link: \"https://refine.dev/docs/tutorial/introduction/index/\",\n        iconUrl:\n            \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/hat.svg\",\n    },\n    {\n        title: \"Examples\",\n        description:\n            \"A collection of reference applications you can use as a starting point.\",\n        link: \"https://refine.dev/examples\",\n        iconUrl:\n            \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/application.svg\",\n    },\n    {\n        title: \"Community\",\n        description:\n            \"Join our Discord community and keep up with the latest news.\",\n        link: \"https://discord.gg/refine\",\n        iconUrl:\n            \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/discord.svg\",\n    },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const WelcomePage: React.FC = () => {\n    const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n    const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n    const getGridTemplateColumns = () => {\n        if (isMobile) {\n            return \"1, 280px\";\n        } else if (isTablet) {\n            return \"2, 280px\";\n        } else {\n            return \"4, 1fr\";\n        }\n    };\n\n    const getHeaderFontSize = () => {\n        if (isMobile) {\n            return \"32px\";\n        } else if (isTablet) {\n            return \"40px\";\n        } else {\n            return \"48px\";\n        }\n    };\n\n    const getSubHeaderFontSize = () => {\n        if (isMobile) {\n            return \"16px\";\n        } else if (isTablet) {\n            return \"20px\";\n        } else {\n            return \"24px\";\n        }\n    };\n\n    return (\n        <div\n            style={{\n                position: \"fixed\",\n                zIndex: 10,\n                inset: 0,\n                overflow: \"auto\",\n                width: \"100dvw\",\n                height: \"100dvh\",\n            }}\n        >\n            <div\n                style={{\n                    overflow: \"hidden\",\n                    position: \"relative\",\n                    backgroundSize: \"cover\",\n                    backgroundRepeat: \"no-repeat\",\n                    background: isMobile\n                        ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(88.89% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(88.89% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n                        : isTablet\n                        ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(66.67% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(66.67% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n                        : \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(35.56% 50% at 50% 100%, rgba(38, 217, 127, 0.12) 0%, rgba(38, 217, 127, 0) 100%), radial-gradient(35.56% 50% at 50% 0%, rgba(71, 235, 235, 0.18) 0%, rgba(71, 235, 235, 0) 100%), #1D1E30\",\n                    minHeight: \"100%\",\n                    minWidth: \"100%\",\n                    fontFamily: \"Arial\",\n                    color: \"#FFFFFF\",\n                }}\n            >\n                <div\n                    style={{\n                        zIndex: 2,\n                        position: \"absolute\",\n                        width: isMobile ? \"400px\" : \"800px\",\n                        height: \"552px\",\n                        opacity: \"0.5\",\n                        background:\n                            \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/welcome-page-hexagon.png)\",\n                        backgroundRepeat: \"no-repeat\",\n                        backgroundSize: \"contain\",\n                        top: \"0\",\n                        left: \"50%\",\n                        transform: \"translateX(-50%)\",\n                    }}\n                />\n                <div style={{ height: isMobile ? \"40px\" : \"80px\" }}></div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div\n                        style={{\n                            backgroundRepeat: \"no-repeat\",\n                            backgroundSize: isMobile\n                                ? \"112px 58px\"\n                                : \"224px 116px\",\n                            backgroundImage:\n                                \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/refine-logo.svg)\",\n                            width: isMobile ? 112 : 224,\n                            height: isMobile ? 58 : 116,\n                        }}\n                    />\n                </div>\n                <div\n                    style={{\n                        height: isMobile\n                            ? \"120px\"\n                            : isTablet\n                            ? \"270px\"\n                            : \"40vh\",\n                        minHeight: isMobile\n                            ? \"120px\"\n                            : isTablet\n                            ? \"270px\"\n                            : \"270px\",\n                    }}\n                ></div>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"16px\",\n                        textAlign: \"center\",\n                    }}\n                >\n                    <h1\n                        style={{\n                            fontSize: getHeaderFontSize(),\n                            fontWeight: 700,\n                            margin: \"0px\",\n                        }}\n                    >\n                        Welcome Aboard!\n                    </h1>\n                    <h4\n                        style={{\n                            fontSize: getSubHeaderFontSize(),\n                            fontWeight: 400,\n                            margin: \"0px\",\n                        }}\n                    >\n                        Your configuration is completed.\n                    </h4>\n                </div>\n                <div style={{ height: \"64px\" }}></div>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n                        justifyContent: \"center\",\n                        gap: \"48px\",\n                        paddingRight: \"16px\",\n                        paddingLeft: \"16px\",\n                        paddingBottom: \"32px\",\n                        maxWidth: \"976px\",\n                        margin: \"auto\",\n                    }}\n                >\n                    {cards.map((card) => (\n                        <Card key={`welcome-page-${card.title}`} card={card} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\ntype CardProps = {\n    card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n    const { title, description, iconUrl, link } = card;\n\n    const [isHover, setIsHover] = useState(false);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"16px\",\n            }}\n        >\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}\n            >\n                <a\n                    onPointerEnter={() => setIsHover(true)}\n                    onPointerLeave={() => setIsHover(false)}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        color: \"#fff\",\n                        textDecoration: \"none\",\n                    }}\n                    href={link}\n                >\n                    <div\n                        style={{\n                            width: \"16px\",\n                            height: \"16px\",\n                            backgroundPosition: \"center\",\n                            backgroundSize: \"contain\",\n                            backgroundRepeat: \"no-repeat\",\n                            backgroundImage: `url(${iconUrl})`,\n                        }}\n                    />\n                    <span\n                        style={{\n                            fontSize: \"16px\",\n                            fontWeight: 700,\n                            marginLeft: \"13px\",\n                            marginRight: \"14px\",\n                        }}\n                    >\n                        {title}\n                    </span>\n                    <svg\n                        style={{\n                            transition:\n                                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n                            ...(isHover && {\n                                transform: \"translateX(4px)\",\n                                opacity: 1,\n                            }),\n                        }}\n                        width=\"12\"\n                        height=\"8\"\n                        fill=\"none\"\n                        opacity=\"0.5\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n                            fill=\"#fff\"\n                        />\n                    </svg>\n                </a>\n            </div>\n            <span\n                style={{\n                    fontSize: \"12px\",\n                    opacity: 0.5,\n                    lineHeight: \"16px\",\n                }}\n            >\n                {description}\n            </span>\n        </div>\n    );\n};\n", "import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { AccessControlContextProvider } from \"@contexts/accessControl\";\nimport { AuditLogContextProvider } from \"@contexts/auditLog\";\nimport {\n    AuthBindingsContextProvider,\n    LegacyAuthContextProvider,\n} from \"@contexts/auth\";\nimport { DataContextProvider } from \"@contexts/data\";\nimport { LegacyRouterContextProvider } from \"@contexts/legacy-router\";\nimport { LiveContextProvider } from \"@contexts/live\";\nimport { NotificationContextProvider } from \"@contexts/notification\";\nimport { RefineContextProvider } from \"@contexts/refine\";\nimport { ResourceContextProvider } from \"@contexts/resource\";\nimport { TranslationContextProvider } from \"@contexts/translation\";\nimport { UndoableQueueContextProvider } from \"@contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"@contexts/unsavedWarn\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { RouterBindings } from \"src/interfaces/bindings\";\n\nimport { RouterPickerProvider } from \"@contexts/router-picker\";\nimport { RouterBindingsProvider } from \"../../../contexts/router\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\nimport {\n    AccessControlProvider,\n    AuditLogProvider,\n    AuthBindings,\n    DashboardPageProps,\n    I18nProvider,\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n    ILiveContext,\n    INotificationContext,\n    IRefineOptions,\n    IRouterProvider,\n    LayoutProps,\n    LegacyAuthProvider,\n    LiveModeProps,\n    NotificationProvider,\n    TitleProps,\n} from \"../../../interfaces\";\nimport { ResourceProps } from \"../../../interfaces/bindings/resource\";\n\nexport interface RefineProps {\n    children?: React.ReactNode;\n    /**\n     * `resources` is the predefined interaction points for a refine app. A resource represents an entity in an endpoint in the API.\n     * While this is not a required property, it is used in resource detection and creation of routes for the app.\n     * @type [`ResourceProps[]`](https://refine.dev/docs/api-reference/core/components/refine-config/#resources)\n     */\n    resources?: ResourceProps[];\n    /**\n     * **refine** needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want\n     * @type [`IRouterProvider`](https://refine.dev/docs/api-reference/core/providers/router-provider/)\n     * @deprecated This property is deprecated and was the legacy way of routing. Please use `routerProvider` with new router bindings instead.\n     */\n    legacyRouterProvider?: IRouterProvider;\n    /**\n     * Router bindings for **refine**. A simple interface for **refine** to interact with your router in a flexible way.\n     * @type [`RouterBindings`](https://refine.dev/docs/api-reference/core/bindings/router/)\n     */\n    routerProvider?: RouterBindings;\n    /**\n     * A `dataProvider` is the place where a refine app communicates with an API. Data providers also act as adapters for refine, making it possible for it to consume different API's and data services.\n     * @type [`IDataContextProvider` | `IDataMultipleContextProvider`](https://refine.dev/docs/api-reference/core/providers/data-provider/)\n     */\n    dataProvider: IDataContextProvider | IDataMultipleContextProvider;\n    /**\n     * `authProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthBindings`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     */\n    authProvider?: AuthBindings;\n    /**\n     * `legacyAuthProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthProvider`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     * @deprecated `legacyAuthProvider` is deprecated with refine@4, use `authProvider` instead.\n     */\n    legacyAuthProvider?: LegacyAuthProvider;\n    /**\n     * **refine** lets you add Realtime support to your app via `liveProvider`. It can be used to update and show data in Realtime throughout your app.\n     * @type [`ILiveContext`](https://refine.dev/docs/api-reference/core/providers/live-provider/)\n     */\n    liveProvider?: ILiveContext;\n    /**\n     * `notificationProvider` handles notification logics. It is an object with methods that refine uses when necessary.\n     * @type [`NotificationProvider` | `(() => NotificationProvider)`](https://refine.dev/docs/api-reference/core/providers/notification-provider/)\n     */\n    notificationProvider?: NotificationProvider | (() => NotificationProvider);\n    /**\n     * `accessControlProvider` is the entry point for implementing access control for refine apps.\n     * @type [`AccessControlProvider`](https://refine.dev/docs/api-reference/core/providers/accessControl-provider/)\n     */\n    accessControlProvider?: AccessControlProvider;\n    /**\n     * **refine** allows you to track changes in your data and keep track of who made the changes.\n     * @type [`AuditLogProvider`](https://refine.dev/docs/api-reference/core/providers/audit-log-provider#overview)\n     */\n    auditLogProvider?: AuditLogProvider;\n    /**\n     * `i18nProvider` property lets you add i18n support to your app. Making you able to use any i18n framework.\n     * @type [`i18nProvider`](https://refine.dev/docs/api-reference/core/providers/i18n-provider/)\n     */\n    i18nProvider?: I18nProvider;\n    /**\n     * A custom error component.\n     * @type [`ReactNode`](https://refine.dev/docs/api-reference/core/components/refine-config/#catchall)\n     * @deprecated Please use the `catchAll` element in your routes instead.\n     */\n    catchAll?: React.ReactNode;\n    /**\n     * Custom login component can be passed to the `LoginPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage)\n     * @deprecated Please use the `LoginPage` component in your routes instead.\n     */\n    LoginPage?: React.FC;\n    /**\n     * A custom dashboard page can be passed to the `DashboardPage` prop which is accessible on root route.\n     * @type [`React.FC<DashboardPageProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#dashboardpage)\n     * @deprecated Please use the `DashboardPage` component in your routes instead.\n     */\n    DashboardPage?: React.FC<DashboardPageProps>;\n    /**\n     * Custom ready page component can be set by passing to `ReadyPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#readypage)\n     * @deprecated This component is only used with the legacy router and will be removed in the future.\n     */\n    ReadyPage?: React.FC;\n    /**\n     * Default layout can be customized by passing the `Layout` property.\n     * @type [`React.FC<LayoutProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#layout)\n     * @deprecated Please use the `Layout` component as a children instead of a prop.\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * The default sidebar can be customized by using refine hooks and passing custom components to `Sider` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#sider)\n     * @deprecated Please pass the `Sider` component to your `Layout` component.\n     */\n    Sider?: React.FC;\n    /**\n     * The default app header can be customized by passing the `Header` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#header)\n     * @deprecated Please pass the `Header` component to your `Layout` component.\n     */\n    Header?: React.FC;\n    /**\n     *The default app footer can be customized by passing the `Footer` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#footer)\n     * @deprecated Please pass the `Footer` component to your `Layout` component.\n     */\n    Footer?: React.FC;\n    /**\n     * The component wanted to be placed out of app layout structure can be set by passing to `OffLayoutArea` prop.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#offlayoutarea)\n     * @deprecated Please use your `OffLayoutArea` component as a children instead of a prop.\n     */\n    OffLayoutArea?: React.FC;\n    /**\n     * TThe app title can be set by passing the `Title` property.\n     * @type [`React.FC<TitleProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#title)\n     * @deprecated Please pass the `Title` component to your `Layout` component.\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * Callback to handle all live events.\n     * @type [`(event: LiveEvent) => void`](https://refine.dev/docs/api-reference/core/providers/live-provider/#onliveevent)\n     */\n    onLiveEvent?: LiveModeProps[\"onLiveEvent\"];\n    /**\n     * `options` is used to configure the app.\n     * @type [`IRefineOptions`](https://refine.dev/docs/api-reference/core/components/refine-config/#options)\n     * */\n    options?: IRefineOptions;\n}\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n    legacyAuthProvider,\n    authProvider,\n    dataProvider,\n    legacyRouterProvider,\n    routerProvider,\n    notificationProvider,\n    accessControlProvider,\n    auditLogProvider,\n    resources,\n    DashboardPage,\n    ReadyPage,\n    LoginPage,\n    catchAll,\n    children,\n    liveProvider,\n    i18nProvider,\n    Title,\n    Layout,\n    Sider,\n    Header,\n    Footer,\n    OffLayoutArea,\n    onLiveEvent,\n    options,\n}) => {\n    const {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    } = handleRefineOptions({\n        options,\n    });\n\n    const queryClient = useDeepMemo(() => {\n        if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n            return reactQueryWithDefaults.clientConfig;\n        }\n\n        return new QueryClient({\n            ...reactQueryWithDefaults.clientConfig,\n            defaultOptions: {\n                ...reactQueryWithDefaults.clientConfig.defaultOptions,\n                queries: {\n                    refetchOnWindowFocus: false,\n                    keepPreviousData: true,\n                    ...reactQueryWithDefaults.clientConfig.defaultOptions\n                        ?.queries,\n                },\n            },\n        });\n    }, [reactQueryWithDefaults.clientConfig]);\n\n    useQuerySubscription(queryClient);\n\n    const useNotificationProviderValues = React.useMemo(() => {\n        return typeof notificationProvider === \"function\"\n            ? notificationProvider\n            : () => notificationProvider ?? ({} as INotificationContext);\n    }, [notificationProvider]);\n\n    const notificationProviderContextValues = useNotificationProviderValues();\n\n    /**\n     * Warn our users if they are using the old way of routing in the wrong prop.\n     */\n    useRouterMisuseWarning(routerProvider);\n    /** */\n\n    /**\n     * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n     * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n     * If `resources` is empty, then we'll render `<ReadyPage />` component.\n     */\n    if (\n        legacyRouterProvider &&\n        !routerProvider &&\n        (resources ?? []).length === 0\n    ) {\n        return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n    }\n\n    /** Router\n     *\n     * Handle routing from `RouterBindingsProvider` and `router` prop for the brand new way\n     * If `router` is not provided, then we'r checking for `routerProvider` prop\n     * If `routerProvider` is provided, then `RouterContextProvider` is used\n     * If none of them is provided, then `RouterBindingsProvider` is used because it supports undefined router\n     *\n     * `RouterContextProvider` is skipped whenever possible and by this way,\n     * we can achieve backward compability only when its provided by user\n     *\n     */\n    const { RouterComponent = React.Fragment } = !routerProvider\n        ? legacyRouterProvider ?? {}\n        : {};\n    /** */\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <NotificationContextProvider {...notificationProviderContextValues}>\n                <LegacyAuthContextProvider\n                    {...(legacyAuthProvider ?? {})}\n                    isProvided={Boolean(legacyAuthProvider)}\n                >\n                    <AuthBindingsContextProvider\n                        {...(authProvider ?? {})}\n                        isProvided={Boolean(authProvider)}\n                    >\n                        <DataContextProvider {...dataProvider}>\n                            <LiveContextProvider liveProvider={liveProvider}>\n                                <RouterPickerProvider\n                                    value={\n                                        legacyRouterProvider && !routerProvider\n                                            ? \"legacy\"\n                                            : \"new\"\n                                    }\n                                >\n                                    <RouterBindingsProvider\n                                        router={routerProvider}\n                                    >\n                                        <LegacyRouterContextProvider\n                                            {...legacyRouterProvider}\n                                        >\n                                            <ResourceContextProvider\n                                                resources={resources ?? []}\n                                            >\n                                                <TranslationContextProvider\n                                                    i18nProvider={i18nProvider}\n                                                >\n                                                    <AccessControlContextProvider\n                                                        {...(accessControlProvider ??\n                                                            {})}\n                                                    >\n                                                        <AuditLogContextProvider\n                                                            {...(auditLogProvider ??\n                                                                {})}\n                                                        >\n                                                            <UndoableQueueContextProvider>\n                                                                <RefineContextProvider\n                                                                    mutationMode={\n                                                                        optionsWithDefaults.mutationMode\n                                                                    }\n                                                                    warnWhenUnsavedChanges={\n                                                                        optionsWithDefaults.warnWhenUnsavedChanges\n                                                                    }\n                                                                    syncWithLocation={\n                                                                        optionsWithDefaults.syncWithLocation\n                                                                    }\n                                                                    Title={\n                                                                        Title\n                                                                    }\n                                                                    undoableTimeout={\n                                                                        optionsWithDefaults.undoableTimeout\n                                                                    }\n                                                                    catchAll={\n                                                                        catchAll\n                                                                    }\n                                                                    DashboardPage={\n                                                                        DashboardPage\n                                                                    }\n                                                                    LoginPage={\n                                                                        LoginPage\n                                                                    }\n                                                                    Layout={\n                                                                        Layout\n                                                                    }\n                                                                    Sider={\n                                                                        Sider\n                                                                    }\n                                                                    Footer={\n                                                                        Footer\n                                                                    }\n                                                                    Header={\n                                                                        Header\n                                                                    }\n                                                                    OffLayoutArea={\n                                                                        OffLayoutArea\n                                                                    }\n                                                                    hasDashboard={\n                                                                        !!DashboardPage\n                                                                    }\n                                                                    liveMode={\n                                                                        optionsWithDefaults.liveMode\n                                                                    }\n                                                                    onLiveEvent={\n                                                                        onLiveEvent\n                                                                    }\n                                                                    options={\n                                                                        optionsWithDefaults\n                                                                    }\n                                                                >\n                                                                    <UnsavedWarnContextProvider>\n                                                                        <RouterComponent>\n                                                                            {\n                                                                                children\n                                                                            }\n                                                                            {!disableTelemetryWithDefault && (\n                                                                                <Telemetry />\n                                                                            )}\n                                                                            <RouteChangeHandler />\n                                                                        </RouterComponent>\n                                                                    </UnsavedWarnContextProvider>\n                                                                </RefineContextProvider>\n                                                            </UndoableQueueContextProvider>\n                                                        </AuditLogContextProvider>\n                                                    </AccessControlContextProvider>\n                                                </TranslationContextProvider>\n                                            </ResourceContextProvider>\n                                        </LegacyRouterContextProvider>\n                                    </RouterBindingsProvider>\n                                </RouterPickerProvider>\n                            </LiveContextProvider>\n                        </DataContextProvider>\n                    </AuthBindingsContextProvider>\n                </LegacyAuthContextProvider>\n            </NotificationContextProvider>\n        </QueryClientProvider>\n    );\n};\n", "import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n    try {\n        const stringifiedPayload = JSON.stringify(payload || {});\n\n        if (typeof btoa !== \"undefined\") {\n            return btoa(stringifiedPayload);\n        }\n\n        return Buffer.from(stringifiedPayload).toString(\"base64\");\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst throughImage = (src: string) => {\n    const img = new Image();\n\n    img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n    fetch(src);\n};\n\nconst transport = (src: string) => {\n    if (typeof Image !== \"undefined\") {\n        throughImage(src);\n    } else if (typeof fetch !== \"undefined\") {\n        throughFetch(src);\n    }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n    const payload = useTelemetryData();\n    const sent = React.useRef(false);\n\n    React.useEffect(() => {\n        if (sent.current) {\n            return;\n        }\n        const encoded = encode(payload);\n\n        if (!encoded) {\n            return;\n        }\n\n        transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n        sent.current = true;\n    }, []);\n\n    return null;\n};\n", "import { useContext } from \"react\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RouterContext } from \"@contexts/legacy-router\";\nimport { DataContext } from \"@contexts/data\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.46.2\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n    const auth = useIsExistAuthentication();\n    const auditLogContext = useContext(AuditLogContext);\n    const liveContext = useContext(LiveContext);\n    const routerContext = useContext(RouterContext);\n    const dataContext = useContext(DataContext);\n    const { i18nProvider } = useContext(TranslationContext);\n    const notificationContext = useContext(NotificationContext);\n    const accessControlContext = useContext(AccessControlContext);\n    const { resources } = useResource();\n    const refineOptions = useRefineContext();\n\n    const auditLog =\n        !!auditLogContext.create ||\n        !!auditLogContext.get ||\n        !!auditLogContext.update;\n\n    const live =\n        !!liveContext?.publish ||\n        !!liveContext?.subscribe ||\n        !!liveContext?.unsubscribe;\n\n    const router =\n        !!routerContext.useHistory ||\n        !!routerContext.Link ||\n        !!routerContext.Prompt ||\n        !!routerContext.useLocation ||\n        !!routerContext.useParams;\n\n    const data = !!dataContext;\n\n    const i18n =\n        !!i18nProvider?.changeLocale ||\n        !!i18nProvider?.getLocale ||\n        !!i18nProvider?.translate;\n\n    const notification =\n        !!notificationContext.close || !!notificationContext.open;\n\n    const accessControl = !!accessControlContext.can;\n\n    const projectId = refineOptions?.options?.projectId;\n\n    return {\n        providers: {\n            auth,\n            auditLog,\n            live,\n            router,\n            data,\n            i18n,\n            notification,\n            accessControl,\n        },\n        version: REFINE_VERSION,\n        resourceCount: resources.length,\n        projectId,\n    };\n};\n", "import { IRouterProvider, RouterBindings } from \"src/interfaces\";\n\nexport const checkRouterPropMisuse = (\n    value: IRouterProvider | RouterBindings,\n) => {\n    // check if `routerProvider` prop is passed with legacy properties.\n    // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n    const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n    // check if `value` contains properties other than `bindings`\n    const otherProps = Object.keys(value).filter(\n        (key) => !bindings.includes(key),\n    );\n\n    const hasOtherProps = otherProps.length > 0;\n\n    if (hasOtherProps) {\n        console.warn(\n            `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n                \", \",\n            )}\\`. Supported properties are \\`${bindings.join(\n                \", \",\n            )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n        );\n\n        return true;\n    }\n\n    return false;\n};\n", "import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nexport const useRouterMisuseWarning = (value?: RouterBindings) => {\n    const warned = React.useRef(false);\n\n    React.useEffect(() => {\n        if (warned.current === false) {\n            if (value) {\n                const warn = checkRouterPropMisuse(value);\n                if (warn) {\n                    warned.current = true;\n                }\n            }\n        }\n    }, [value]);\n};\n", "import React, { useEffect, useState } from \"react\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\nimport { IUndoableQueue } from \"../../interfaces\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\n\nexport const UndoableQueue: React.FC<{\n    notification: IUndoableQueue;\n}> = ({ notification }) => {\n    const translate = useTranslate();\n\n    const { notificationDispatch } = useCancelNotification();\n    const { open } = useNotification();\n\n    const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n    const cancelNotification = () => {\n        if (notification.isRunning === true) {\n            if (notification.seconds === 0) {\n                notification.doMutation();\n            }\n            if (!notification.isSilent) {\n                open?.({\n                    key: `${notification.id}-${notification.resource}-notification`,\n                    type: \"progress\",\n                    message: translate(\n                        \"notifications.undoable\",\n                        {\n                            seconds: userFriendlySecond(notification.seconds),\n                        },\n                        `You have ${userFriendlySecond(\n                            notification.seconds,\n                        )} seconds to undo`,\n                    ),\n                    cancelMutation: notification.cancelMutation,\n                    undoableTimeout: userFriendlySecond(notification.seconds),\n                });\n            }\n\n            if (notification.seconds > 0) {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n\n                const newTimeoutId = setTimeout(() => {\n                    notificationDispatch({\n                        type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n                        payload: {\n                            id: notification.id,\n                            seconds: notification.seconds,\n                            resource: notification.resource,\n                        },\n                    });\n                }, 1000) as unknown as number;\n\n                setTimeoutId(newTimeoutId);\n            }\n        }\n    };\n\n    useEffect(() => {\n        cancelNotification();\n    }, [notification]);\n\n    return null;\n};\n", "import React, { useEffect } from \"react\";\n\nimport {\n    useRefineContext,\n    useRouterContext,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@hooks\";\nimport { LayoutProps, TitleProps } from \"../../interfaces\";\n\nexport interface LayoutWrapperProps {\n    /**\n     * Outer component that renders other components\n     * @default *\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n     * @default *\n     */\n    Sider?: React.FC;\n    /**\n     * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n     * @default *\n     */\n    Header?: React.FC;\n    /**\n     * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n     * @default *\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n     * @default *\n     */\n    Footer?: React.FC;\n    /**\n     * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n     * @default *\n     */\n    OffLayoutArea?: React.FC;\n    children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n    children,\n    Layout: LayoutFromProps,\n    Sider: SiderFromProps,\n    Header: HeaderFromProps,\n    Title: TitleFromProps,\n    Footer: FooterFromProps,\n    OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n    const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n        useRefineContext();\n\n    const LayoutToRender = LayoutFromProps ?? Layout;\n\n    return (\n        <LayoutToRender\n            Sider={SiderFromProps ?? Sider}\n            Header={HeaderFromProps ?? Header}\n            Footer={FooterFromProps ?? Footer}\n            Title={TitleFromProps ?? Title}\n            OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n        >\n            {children}\n            <UnsavedPrompt />\n        </LayoutToRender>\n    );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n    const { Prompt } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const warnWhenListener = (e: {\n        preventDefault: () => void;\n        returnValue: string;\n    }) => {\n        e.preventDefault();\n\n        e.returnValue = translate(\n            \"warnWhenUnsavedChanges\",\n            \"Are you sure you want to leave? You have unsaved changes.\",\n        );\n\n        return e.returnValue;\n    };\n\n    useEffect(() => {\n        if (warnWhen) {\n            window.addEventListener(\"beforeunload\", warnWhenListener);\n        }\n\n        return window.removeEventListener(\"beforeunload\", warnWhenListener);\n    }, [warnWhen]);\n\n    return (\n        <Prompt\n            when={warnWhen}\n            message={translate(\n                \"warnWhenUnsavedChanges\",\n                \"Are you sure you want to leave? You have unsaved changes.\",\n            )}\n            setWarnWhen={setWarnWhen}\n        />\n    );\n};\n", "import React from \"react\";\n\nimport {\n    useGo,\n    useNavigation,\n    useParsed,\n    useRouterContext,\n    useRouterType,\n    useIsAuthenticated,\n} from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport { GoConfig } from \"src/interfaces\";\n\nexport type AuthenticatedCommonProps = {\n    /**\n     * Unique key to identify the component.\n     * This is required if you have multiple `Authenticated` components at the same level.\n     * @required\n     */\n    key: React.Key;\n    /**\n     * Whether to redirect user if not logged in or not.\n     * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n     * This behavior is only available for new auth providers.\n     * Legacy auth providers will redirect to `/login` by default if this property is not set.\n     * If set to a string, user will be redirected to that string.\n     *\n     * This property only works if `fallback` is **not set**.\n     */\n    redirectOnFail?: string | true;\n    /**\n     * Whether to append current path to search params of the redirect url at `to` property.\n     *\n     * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n     * If `to` present, it will be used as the redirect url after successful login.\n     */\n    appendCurrentPathToQuery?: boolean;\n    /**\n     * Content to show if user is not logged in.\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Content to show while checking whether user is logged in or not.\n     */\n    loading?: React.ReactNode;\n    /**\n     * Content to show if user is logged in\n     */\n    children?: React.ReactNode;\n};\n\nexport type LegacyAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(\n    props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\nexport function Authenticated({\n    redirectOnFail = true,\n    appendCurrentPathToQuery = true,\n    children,\n    fallback: fallbackContent,\n    loading: loadingContent,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n    const activeAuthProvider = useActiveAuthProvider();\n    const routerType = useRouterType();\n\n    const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n    const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n    const isLegacyRouter = routerType === \"legacy\";\n\n    const parsed = useParsed();\n    const go = useGo();\n    const { useLocation } = useRouterContext();\n    const legacyLocation = useLocation();\n\n    const {\n        isFetching,\n        isSuccess,\n        data: {\n            authenticated: isAuthenticatedStatus,\n            redirectTo: authenticatedRedirect,\n        } = {},\n    } = useIsAuthenticated({\n        v3LegacyAuthProviderCompatible: isLegacyAuth,\n    });\n\n    // Authentication status\n    const isAuthenticated = hasAuthProvider\n        ? isLegacyAuth\n            ? isSuccess\n            : isAuthenticatedStatus\n        : true;\n\n    // when there is no auth provider\n    if (!hasAuthProvider) {\n        return <>{children ?? null}</>;\n    }\n\n    // when checking authentication status\n    if (isFetching) {\n        return <>{loadingContent ?? null}</>;\n    }\n\n    // when user is authenticated return children\n    if (isAuthenticated) {\n        return <>{children ?? null}</>;\n    }\n    // when user is not authenticated redirect or render fallbackContent\n    else {\n        // render fallbackContent if it is exist\n        if (typeof fallbackContent !== \"undefined\") {\n            return <>{fallbackContent ?? null}</>;\n        }\n        // if there is no fallbackContent, redirect page\n\n        // Redirect url to use. use redirectOnFail if it is set.\n        // Otherwise use redirectTo property of the check function's response.\n        // If both are not set, use `/login` as the default redirect url. (only for legacy auth providers)\n        const appliedRedirect = isLegacyAuth\n            ? typeof redirectOnFail === \"string\"\n                ? redirectOnFail\n                : \"/login\"\n            : typeof redirectOnFail === \"string\"\n            ? redirectOnFail\n            : (authenticatedRedirect as string | undefined);\n\n        // Current pathname to append to the redirect url.\n        // User will be redirected to this url after successful mutation. (like login)\n        const pathname = `${\n            isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n        }`.replace(/(\\?.*|#.*)$/, \"\");\n        // Redirect if appliedRedirect is set, otherwise return null.\n        //  Uses `replace` for legacy router and `go` for new router.\n        if (appliedRedirect) {\n            if (isLegacyRouter) {\n                const toQuery = appendCurrentPathToQuery\n                    ? `?to=${encodeURIComponent(pathname)}`\n                    : \"\";\n                return <RedirectLegacy to={`${appliedRedirect}${toQuery}`} />;\n            } else {\n                return (\n                    <Redirect\n                        config={{\n                            to: appliedRedirect,\n                            query: appendCurrentPathToQuery\n                                ? {\n                                      to: parsed.params?.to\n                                          ? parsed.params.to\n                                          : go({\n                                                to: pathname,\n                                                options: { keepQuery: true },\n                                                type: \"path\",\n                                            }),\n                                  }\n                                : undefined,\n                            type: \"replace\",\n                        }}\n                    />\n                );\n            }\n        }\n\n        return null;\n    }\n}\n\nconst Redirect = ({ config }: { config: GoConfig }) => {\n    const go = useGo();\n\n    React.useEffect(() => {\n        go(config);\n    }, [go, config]);\n\n    return null;\n};\n\nconst RedirectLegacy = ({ to }: { to: string }) => {\n    const { replace } = useNavigation();\n\n    React.useEffect(() => {\n        replace(to);\n    }, [replace, to]);\n\n    return null;\n};\n", "import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n    const { useLocation } = useRouterContext();\n\n    const { checkAuth } = useLegacyAuthContext();\n    const location = useLocation();\n\n    useEffect(() => {\n        checkAuth?.().catch(() => false);\n    }, [location?.pathname]);\n\n    return null;\n};\n", "import React, { useEffect } from \"react\";\n\nimport { useCan, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, ITreeMenu } from \"../../interfaces\";\n\ntype CanParams = {\n    resource?: IResourceItem & { children?: ITreeMenu[] };\n    id?: BaseKey;\n    [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n    resource?: string;\n    reason?: string;\n    action: string;\n    params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * Intended action on resource\n     */\n    action: string;\n    /**\n     * Parameters associated with the resource\n     * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n     */\n    params?: CanParams;\n    /**\n     * Content to show if access control returns `false`\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Callback function to be called if access control returns `can: false`\n     */\n    onUnauthorized?: (props: OnUnauthorizedProps) => void;\n    children: React.ReactNode;\n};\n\ntype CanAccessWithoutParamsProps = {\n    [key in Exclude<\n        keyof CanAccessBaseProps,\n        \"fallback\" | \"children\"\n    >]?: undefined;\n} & {\n    [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n    resource: resourceFromProp,\n    action: actionFromProp,\n    params: paramsFromProp,\n    fallback,\n    onUnauthorized,\n    children,\n    ...rest\n}) => {\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n    } = useResource(resourceFromProp);\n    const { identifier } = useResource();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = paramsFromProp?.id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== identifier) {\n            return paramsFromProp?.id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const resourceName = resourceFromProp ?? resource?.name;\n    const action = actionFromProp ?? actionFromRoute ?? \"\";\n    const params = paramsFromProp ?? {\n        id: defaultId,\n        resource: resource,\n    };\n\n    const { data } = useCan({\n        resource: resourceName,\n        action,\n        params,\n    });\n\n    useEffect(() => {\n        if (onUnauthorized && data?.can === false) {\n            onUnauthorized({\n                resource: resourceName,\n                action,\n                reason: data?.reason,\n                params,\n            });\n        }\n    }, [data?.can]);\n\n    if (data?.can) {\n        if (React.isValidElement(children)) {\n            const Children = React.cloneElement(children, rest);\n            return Children;\n        }\n\n        return <>{children}</>;\n    }\n\n    if (data?.can === false) {\n        return <>{fallback ?? null}</>;\n    }\n\n    return null;\n};\n", "import React, { SVGProps, useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nconst text =\n    \"If you find Refine useful, you can contribute to its growth by giving it a star on GitHub\";\n\nexport const GitHubBanner = () => {\n    useEffect(() => {\n        const styleTag = document.createElement(\"style\");\n        document.head.appendChild(styleTag);\n        CSSRules.forEach((rule) =>\n            styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n        );\n    }, []);\n\n    return (\n        <div\n            className=\"banner bg-top-announcement\"\n            style={{\n                width: \"100%\",\n                height: \"48px\",\n            }}\n        >\n            <div\n                style={{\n                    position: \"relative\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    paddingLeft: \"200px\",\n                    width: \"100%\",\n                    maxWidth: \"100vw\",\n                    height: \"100%\",\n                    borderBottom: \"1px solid #47ebeb26\",\n                }}\n            >\n                <div\n                    className=\"top-announcement-mask\"\n                    style={{\n                        position: \"absolute\",\n                        left: 0,\n                        top: 0,\n                        width: \"100%\",\n                        height: \"100%\",\n                        borderBottom: \"1px solid #47ebeb26\",\n                    }}\n                >\n                    <div\n                        style={{\n                            position: \"relative\",\n                            width: \"960px\",\n                            height: \"100%\",\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            margin: \"0 auto\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                width: \"calc(50% - 300px)\",\n                                height: \"100%\",\n                                position: \"relative\",\n                            }}\n                        >\n                            <GlowSmall\n                                style={{\n                                    animationDelay: \"1.5s\",\n                                    position: \"absolute\",\n                                    top: \"2px\",\n                                    right: \"220px\",\n                                }}\n                                id={\"1\"}\n                            />\n                            <GlowSmall\n                                style={{\n                                    animationDelay: \"1s\",\n                                    position: \"absolute\",\n                                    top: \"8px\",\n                                    right: \"100px\",\n                                    transform: \"rotate(180deg)\",\n                                }}\n                                id={\"2\"}\n                            />\n                            <GlowBig\n                                style={{\n                                    position: \"absolute\",\n                                    right: \"10px\",\n                                }}\n                                id={\"3\"}\n                            />\n                        </div>\n\n                        <div\n                            style={{\n                                width: \"calc(50% - 300px)\",\n                                height: \"100%\",\n                                position: \"relative\",\n                            }}\n                        >\n                            <GlowSmall\n                                style={{\n                                    animationDelay: \"2s\",\n                                    position: \"absolute\",\n                                    top: \"6px\",\n                                    right: \"180px\",\n                                    transform: \"rotate(180deg)\",\n                                }}\n                                id={\"4\"}\n                            />\n                            <GlowSmall\n                                style={{\n                                    animationDelay: \"0.5s\",\n                                    transitionDelay: \"1.3s\",\n                                    position: \"absolute\",\n                                    top: \"2px\",\n                                    right: \"40px\",\n                                }}\n                                id={\"5\"}\n                            />\n                            <GlowBig\n                                style={{\n                                    position: \"absolute\",\n                                    right: \"-70px\",\n                                }}\n                                id={\"6\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <Text text={text} />\n            </div>\n        </div>\n    );\n};\n\nconst Text = ({ text }: { text: string }) => {\n    return (\n        <a\n            className=\"gh-link\"\n            href=\"https://s.refine.dev/github-support\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{\n                position: \"absolute\",\n                height: \"100%\",\n                padding: \"0 60px\",\n                display: \"flex\",\n                flexWrap: \"nowrap\",\n                whiteSpace: \"nowrap\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                backgroundImage:\n                    \"linear-gradient(90deg, rgba(31, 63, 72, 0.00) 0%, #1F3F48 10%, #1F3F48 90%, rgba(31, 63, 72, 0.00) 100%)\",\n            }}\n        >\n            <div\n                style={{\n                    color: \"#fff\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    gap: \"8px\",\n                }}\n            >\n                <span\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    ⭐️\n                </span>\n                <span\n                    className=\"text\"\n                    style={{\n                        fontSize: \"16px\",\n                        lineHeight: \"24px\",\n                    }}\n                >\n                    {text}\n                </span>\n                <span\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    ⭐️\n                </span>\n            </div>\n        </a>\n    );\n};\n\nconst GlowSmall = ({ style, ...props }: SVGProps<SVGSVGElement>) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={80}\n            height={40}\n            fill=\"none\"\n            style={{\n                opacity: 1,\n                animation:\n                    \"top-announcement-glow 1s ease-in-out infinite alternate\",\n                ...style,\n            }}\n        >\n            <circle\n                cx={40}\n                r={40}\n                fill={`url(#${props.id}-a)`}\n                fillOpacity={0.5}\n            />\n            <defs>\n                <radialGradient\n                    id={`${props.id}-a`}\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientTransform=\"matrix(0 40 -40 0 40 0)\"\n                    gradientUnits=\"userSpaceOnUse\"\n                >\n                    <stop stopColor=\"#47EBEB\" />\n                    <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n                </radialGradient>\n            </defs>\n        </svg>\n    );\n};\n\nconst GlowBig = ({ style, ...props }: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={120}\n        height={48}\n        fill=\"none\"\n        {...props}\n        style={{\n            opacity: 1,\n            animation:\n                \"top-announcement-glow 1s ease-in-out infinite alternate\",\n            ...style,\n        }}\n    >\n        <circle\n            cx={60}\n            cy={24}\n            r={60}\n            fill={`url(#${props.id}-a)`}\n            fillOpacity={0.5}\n        />\n        <defs>\n            <radialGradient\n                id={`${props.id}-a`}\n                cx={0}\n                cy={0}\n                r={1}\n                gradientTransform=\"matrix(0 60 -60 0 60 24)\"\n                gradientUnits=\"userSpaceOnUse\"\n            >\n                <stop stopColor=\"#47EBEB\" />\n                <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n            </radialGradient>\n        </defs>\n    </svg>\n);\n", "export const CSSRules = [\n    `\n    .bg-top-announcement {\n        border-bottom: 1px solid rgba(71, 235, 235, 0.15);\n        background: radial-gradient(\n                218.19% 111.8% at 0% 0%,\n                rgba(71, 235, 235, 0.1) 0%,\n                rgba(71, 235, 235, 0.2) 100%\n            ),\n            #14141f;\n    }\n    `,\n    `\n    .top-announcement-mask {\n        mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        -webkit-mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        mask-repeat: repeat;\n        -webkit-mask-repeat: repeat;\n        background: rgba(71, 235, 235, 0.25);\n    }\n    `,\n    `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n    `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n    `\n    @keyframes top-announcement-glow {\n        0% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n        }\n    }\n    `,\n];\n", "import React from \"react\";\nimport { AutoSaveIndicatorProps } from \"../../interfaces\";\nimport { useTranslate } from \"@hooks/translate\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n    elements: {\n        success = <Message key=\"autoSave.success\" defaultMessage=\"saved\" />,\n        error = (\n            <Message key=\"autoSave.error\" defaultMessage=\"auto save failure\" />\n        ),\n        loading = <Message key=\"autoSave.loading\" defaultMessage=\"saving...\" />,\n        idle = (\n            <Message key=\"autoSave.idle\" defaultMessage=\"waiting for changes\" />\n        ),\n    } = {},\n}) => {\n    switch (status) {\n        case \"success\":\n            return <>{success}</>;\n        case \"error\":\n            return <>{error}</>;\n        case \"loading\":\n            return <>{loading}</>;\n        default:\n            return <>{idle}</>;\n    }\n};\n\nconst Message = ({\n    key,\n    defaultMessage,\n}: {\n    key: string;\n    defaultMessage: string;\n}) => {\n    const translate = useTranslate();\n\n    return <span>{translate(key, defaultMessage)}</span>;\n};\n", "type Listener = () => void\n\nexport class Subscribable<TListener extends Function = Listener> {\n  protected listeners: Set<{ listener: TListener }>\n\n  constructor() {\n    this.listeners = new Set()\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    const identity = { listener }\n    this.listeners.add(identity)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(identity)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n", "import type { Mutation } from './mutation'\nimport type { Query } from './query'\nimport type {\n  FetchStatus,\n  MutationFunction,\n  MutationKey,\n  MutationOptions,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n} from './types'\n\n// TYPES\n\nexport interface QueryFilters {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: QueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (mutation: Mutation<any, any, any>) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Include or exclude fetching mutations\n   */\n  fetching?: boolean\n}\n\nexport type DataUpdateFunction<TInput, TOutput> = (input: TInput) => TOutput\n\nexport type Updater<TInput, TOutput> =\n  | TOutput\n  | DataUpdateFunction<TInput, TOutput>\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in window\n\nexport function noop(): undefined {\n  return undefined\n}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as DataUpdateFunction<TInput, TOutput>)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function difference<T>(array1: T[], array2: T[]): T[] {\n  return array1.filter((x) => !array2.includes(x))\n}\n\nexport function replaceAt<T>(array: T[], index: number, value: T): T[] {\n  const copy = array.slice(0)\n  copy[index] = value\n  return copy\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function parseQueryArgs<\n  TOptions extends QueryOptions<any, any, any, TQueryKey>,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | TOptions,\n  arg2?: QueryFunction<any, TQueryKey> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (!isQueryKey(arg1)) {\n    return arg1 as TOptions\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 } as TOptions\n  }\n\n  return { ...arg2, queryKey: arg1 } as TOptions\n}\n\nexport function parseMutationArgs<\n  TOptions extends MutationOptions<any, any, any, any>,\n>(\n  arg1: MutationKey | MutationFunction<any, any> | TOptions,\n  arg2?: MutationFunction<any, any> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3, mutationKey: arg1, mutationFn: arg2 } as TOptions\n    }\n    return { ...arg2, mutationKey: arg1 } as TOptions\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2, mutationFn: arg1 } as TOptions\n  }\n\n  return { ...arg1 } as TOptions\n}\n\nexport function parseFilterArgs<\n  TFilters extends QueryFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1) ? [{ ...arg2, queryKey: arg1 }, arg3] : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function parseMutationFilterArgs<\n  TFilters extends MutationFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1)\n      ? [{ ...arg2, mutationKey: arg1 }, arg3]\n      : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (\n    typeof fetchStatus !== 'undefined' &&\n    fetchStatus !== query.state.fetchStatus\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, fetching, predicate, mutationKey } = filters\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (\n        hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)\n      ) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (\n    typeof fetching === 'boolean' &&\n    (mutation.state.status === 'loading') !== fetching\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: QueryOptions<any, any, any, TQueryKey>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashQueryKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashQueryKey(queryKey: QueryKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean {\n  return partialDeepEqual(a, b)\n}\n\n/**\n * Checks if `b` partially matches with `a`.\n */\nexport function partialDeepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aSize = array ? a.length : Object.keys(a).length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      copy[key] = replaceEqualDeep(a[key], b[key])\n      if (copy[key] === a[key]) {\n        equalItems++\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\nexport function shallowEqualObjects<T>(a: T, b: T): boolean {\n  if ((a && !b) || (b && !a)) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function isQueryKey(value: unknown): value is QueryKey {\n  return Array.isArray(value)\n}\n\nexport function isError(value: any): value is Error {\n  return value instanceof Error\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout)\n  })\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nexport function scheduleMicrotask(callback: () => void) {\n  sleep(0).then(callback)\n}\n\nexport function getAbortController(): AbortController | undefined {\n  if (typeof AbortController === 'function') {\n    return new AbortController()\n  }\n  return\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual?.(prevData, data)) {\n    return prevData as TData\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data)\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable {\n  private focused?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibillitychange and focus\n        window.addEventListener('visibilitychange', listener, false)\n        window.addEventListener('focus', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n          window.removeEventListener('focus', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.focused !== focused\n    if (changed) {\n      this.focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.focused === 'boolean') {\n      return this.focused\n    }\n\n    // document global can be unavailable in react native\n    if (typeof document === 'undefined') {\n      return true\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(\n      document.visibilityState,\n    )\n  }\n}\n\nexport const focusManager = new FocusManager()\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setOnline: (online?: boolean) => void,\n) => (() => void) | undefined\n\nconst onlineEvents = ['online', 'offline'] as const\n\nexport class OnlineManager extends Subscribable {\n  private online?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline()\n        // Listen to online\n        onlineEvents.forEach((event) => {\n          window.addEventListener(event, listener, false)\n        })\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach((event) => {\n            window.removeEventListener(event, listener)\n          })\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((online?: boolean) => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online)\n      } else {\n        this.onOnline()\n      }\n    })\n  }\n\n  setOnline(online?: boolean): void {\n    const changed = this.online !== online\n\n    if (changed) {\n      this.online = online\n      this.onOnline()\n    }\n  }\n\n  onOnline(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isOnline(): boolean {\n    if (typeof this.online === 'boolean') {\n      return this.online\n    }\n\n    if (\n      typeof navigator === 'undefined' ||\n      typeof navigator.onLine === 'undefined'\n    ) {\n      return true\n    }\n\n    return navigator.onLine\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n", "import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { sleep } from './utils'\nimport type { CancelOptions, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = unknown> {\n  fn: () => TData | Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = unknown> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = unknown>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => boolean) | undefined\n  let promiseResolve: (data: TData) => void\n  let promiseReject: (error: TError) => void\n\n  const promise = new Promise<TData>((outerResolve, outerReject) => {\n    promiseResolve = outerResolve\n    promiseReject = outerReject\n  })\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const shouldPause = () =>\n    !focusManager.isFocused() ||\n    (config.networkMode !== 'always' && !onlineManager.isOnline())\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      promiseResolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      promiseReject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        const canContinue = isResolved || !shouldPause()\n        if (canContinue) {\n          continueResolve(value)\n        }\n        return canContinue\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // Execute query\n    try {\n      promiseOrValue = config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? 3\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            if (shouldPause()) {\n              return pause()\n            }\n            return\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  // Start loop\n  if (canFetch(config.networkMode)) {\n    run()\n  } else {\n    pause().then(run)\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn?.()\n      return didContinue ? promise : Promise.resolve()\n    },\n    cancelRetry,\n    continueRetry,\n  }\n}\n", "export interface Logger {\n  log: LogFunction\n  warn: LogFunction\n  error: LogFunction\n}\n\ntype LogFunction = (...args: any[]) => void\n\nexport const defaultLogger: Logger = console\n", "import { scheduleMicrotask } from './utils'\n\n// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends unknown[]> = (...args: T) => void\n\nexport function createNotifyManager() {\n  let queue: NotifyCallback[] = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n\n  const batch = <T>(callback: () => T): T => {\n    let result\n    transactions++\n    try {\n      result = callback()\n    } finally {\n      transactions--\n      if (!transactions) {\n        flush()\n      }\n    }\n    return result\n  }\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  const batchCalls = <T extends unknown[]>(\n    callback: BatchCallsCallback<T>,\n  ): BatchCallsCallback<T> => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args)\n      })\n    }\n  }\n\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  const setNotifyFunction = (fn: NotifyFunction) => {\n    notifyFn = fn\n  }\n\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  const setBatchNotifyFunction = (fn: BatchNotifyFunction) => {\n    batchNotifyFn = fn\n  }\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n", "import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  cacheTime!: number\n  private gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.cacheTime)\n    }\n  }\n\n  protected updateCacheTime(newCacheTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(\n      this.cacheTime || 0,\n      newCacheTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout)\n      this.gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n", "import { getAbortController, noop, replaceData, timeUntilStale } from './utils'\nimport { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type {\n  CancelOptions,\n  FetchStatus,\n  InitialDataFunction,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n} from './types'\nimport type { QueryCache } from './queryCache'\nimport type { QueryObserver } from './queryObserver'\nimport type { Logger } from './logger'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  cache: QueryCache\n  queryKey: TQueryKey\n  queryHash: string\n  logger?: Logger\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = unknown> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: any\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal?: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n  ) => void\n}\n\nexport interface FetchOptions {\n  cancelRefetch?: boolean\n  meta?: any\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: any\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  initialState: QueryState<TData, TError>\n  revertState?: QueryState<TData, TError>\n  state: QueryState<TData, TError>\n  isFetchingOptimistic?: boolean\n\n  private cache: QueryCache\n  private logger: Logger\n  private promise?: Promise<TData>\n  private retryer?: Retryer<TData>\n  private observers: QueryObserver<any, any, any, any, any>[]\n  private defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  private abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.abortSignalConsumed = false\n    this.defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.cache = config.cache\n    this.logger = config.logger || defaultLogger\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.initialState = config.state || getDefaultState(this.options)\n    this.state = this.initialState\n    this.scheduleGc()\n  }\n\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  private setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.promise\n    this.retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some((observer) => observer.options.enabled !== false)\n  }\n\n  isDisabled(): boolean {\n    return this.getObserversCount() > 0 && !this.isActive()\n  }\n\n  isStale(): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      this.observers.some((observer) => observer.getCurrentResult().isStale)\n    )\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({ revert: true })\n          } else {\n            this.retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({ silent: true })\n      } else if (this.promise) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.retryer?.continueRetry()\n        // Return current promise if we are already fetching\n        return this.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = getAbortController()\n\n    // Create query function context\n    const queryFnContext: QueryFunctionContext<TQueryKey> = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta,\n    }\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true\n            return abortController.signal\n          }\n          return undefined\n        },\n      })\n    }\n\n    addSignalProperty(queryFnContext)\n\n    // Create fetch function\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\n          `Missing queryFn for queryKey '${this.options.queryHash}'`,\n        )\n      }\n      this.abortSignalConsumed = false\n      return this.options.queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const context: FetchContext<TQueryFnData, TError, TData, TQueryKey> = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(context)\n\n    // Store state in case the current fetch needs to be reverted\n    this.revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.cache.config.onError?.(error, this as Query<any, any, any, any>)\n        this.cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this as Query<any, any, any, any>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      }\n      this.isFetchingOptimistic = false\n    }\n\n    // Try to fetch the data\n    this.retryer = createRetryer({\n      fn: context.fetchFn as () => TData,\n      abort: abortController?.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        this.setData(data as TData)\n\n        // Notify cache callback\n        this.cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this as Query<any, any, any, any>,\n        )\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc()\n        }\n        this.isFetchingOptimistic = false\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n    })\n\n    this.promise = this.retryer.promise\n\n    return this.promise\n  }\n\n  private dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: action.meta ?? null,\n            fetchStatus: canFetch(this.options.networkMode)\n              ? 'fetching'\n              : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading',\n            }),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error as unknown\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error: error as TError,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error as TError,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate(action)\n      })\n\n      this.cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = typeof data !== 'undefined'\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle',\n  }\n}\n", "import { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type { NotifyEvent, QueryKey, QueryOptions } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (error: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface QueryHashMap {\n  [hash: string]: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  config: QueryCacheConfig\n\n  private queries: Query<any, any, any, any>[]\n  private queriesMap: QueryHashMap\n\n  constructor(config?: QueryCacheConfig) {\n    super()\n    this.config = config || {}\n    this.queries = []\n    this.queriesMap = {}\n  }\n\n  build<TQueryFnData, TError, TData, TQueryKey extends QueryKey>(\n    client: QueryClient,\n    options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey!\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query\n      this.queries.push(query)\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.queriesMap[query.queryHash]\n\n    if (queryInMap) {\n      query.destroy()\n\n      this.queries = this.queries.filter((x) => x !== query)\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash]\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.queriesMap[queryHash]\n  }\n\n  getAll(): Query[] {\n    return this.queries\n  }\n\n  find<TQueryFnData = unknown, TError = unknown, TData = TQueryFnData>(\n    arg1: QueryKey,\n    arg2?: QueryFilters,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const [filters] = parseFilterArgs(arg1, arg2)\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.queries.find((query) => matchQuery(filters, query))\n  }\n\n  findAll(queryKey?: QueryKey, filters?: QueryFilters): Query[]\n  findAll(filters?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[] {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    return Object.keys(filters).length > 0\n      ? this.queries.filter((query) => matchQuery(filters, query))\n      : this.queries\n  }\n\n  notify(event: QueryCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n", "import { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { canFetch, createRetryer } from './retryer'\nimport type { MutationMeta, MutationOptions, MutationStatus } from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Logger } from './logger'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  logger?: Logger\n  defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n  meta?: MutationMeta\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface LoadingAction<TVariables, TContext> {\n  type: 'loading'\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError, TVariables, TContext> {\n  type: 'setState'\n  state: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | LoadingAction<TVariables, TContext>\n  | PauseAction\n  | SetStateAction<TData, TError, TVariables, TContext>\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  mutationId: number\n\n  private observers: MutationObserver<TData, TError, TVariables, TContext>[]\n  private defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  private mutationCache: MutationCache\n  private logger: Logger\n  private retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.defaultOptions = config.defaultOptions\n    this.mutationId = config.mutationId\n    this.mutationCache = config.mutationCache\n    this.logger = config.logger || defaultLogger\n    this.observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options?: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  setState(state: MutationState<TData, TError, TVariables, TContext>): void {\n    this.dispatch({ type: 'setState', state })\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.observers = this.observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc()\n      } else {\n        this.mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return this.retryer?.continue() ?? this.execute()\n  }\n\n  async execute(): Promise<TData> {\n    const executeMutation = () => {\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found')\n          }\n          return this.options.mutationFn(this.state.variables!)\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({ type: 'failed', failureCount, error })\n        },\n        onPause: () => {\n          this.dispatch({ type: 'pause' })\n        },\n        onContinue: () => {\n          this.dispatch({ type: 'continue' })\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode,\n      })\n\n      return this.retryer.promise\n    }\n\n    const restored = this.state.status === 'loading'\n    try {\n      if (!restored) {\n        this.dispatch({ type: 'loading', variables: this.options.variables! })\n        // Notify cache callback\n        await this.mutationCache.config.onMutate?.(\n          this.state.variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(this.state.variables!)\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables,\n          })\n        }\n      }\n      const data = await executeMutation()\n\n      // Notify cache callback\n      await this.mutationCache.config.onSuccess?.(\n        data,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        this.state.variables!,\n        this.state.context!,\n      )\n\n      // Notify cache callback\n      await this.mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        this.state.variables!,\n        this.state.context,\n      )\n\n      this.dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.mutationCache.config.onError?.(\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n\n        await this.options.onError?.(\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.mutationCache.config.onSettled?.(\n          undefined,\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.dispatch({ type: 'error', error: error as TError })\n      }\n    }\n  }\n\n  private dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'loading':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n  }\n}\n", "import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\ntype MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  config: MutationCacheConfig\n\n  private mutations: Mutation<any, any, any, any>[]\n  private mutationId: number\n  private resuming: Promise<unknown> | undefined\n\n  constructor(config?: MutationCacheConfig) {\n    super()\n    this.config = config || {}\n    this.mutations = []\n    this.mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey\n        ? client.getMutationDefaults(options.mutationKey)\n        : undefined,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.mutations = this.mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Mutation[] {\n    return this.mutations\n  }\n\n  find<TData = unknown, TError = unknown, TVariables = any, TContext = unknown>(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.mutations.find((mutation) => matchMutation(filters, mutation))\n  }\n\n  findAll(filters: MutationFilters): Mutation[] {\n    return this.mutations.filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    this.resuming = (this.resuming ?? Promise.resolve())\n      .then(() => {\n        const pausedMutations = this.mutations.filter((x) => x.state.isPaused)\n        return notifyManager.batch(() =>\n          pausedMutations.reduce(\n            (promise, mutation) =>\n              promise.then(() => mutation.continue().catch(noop)),\n            Promise.resolve() as Promise<unknown>,\n          ),\n        )\n      })\n      .then(() => {\n        this.resuming = undefined\n      })\n\n    return this.resuming\n  }\n}\n", "import type { QueryBehavior } from './query'\n\nimport type {\n  InfiniteData,\n  QueryFunctionContext,\n  QueryOptions,\n  RefetchQueryFilters,\n} from './types'\n\nexport function infiniteQueryBehavior<\n  TQueryFnData,\n  TError,\n  TData,\n>(): QueryBehavior<TQueryFnData, TError, InfiniteData<TData>> {\n  return {\n    onFetch: (context) => {\n      context.fetchFn = () => {\n        const refetchPage: RefetchQueryFilters['refetchPage'] | undefined =\n          context.fetchOptions?.meta?.refetchPage\n        const fetchMore = context.fetchOptions?.meta?.fetchMore\n        const pageParam = fetchMore?.pageParam\n        const isFetchingNextPage = fetchMore?.direction === 'forward'\n        const isFetchingPreviousPage = fetchMore?.direction === 'backward'\n        const oldPages = context.state.data?.pages || []\n        const oldPageParams = context.state.data?.pageParams || []\n        let newPageParams = oldPageParams\n        let cancelled = false\n\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal?.aborted) {\n                cancelled = true\n              } else {\n                context.signal?.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        // Get query function\n        const queryFn =\n          context.options.queryFn ||\n          (() =>\n            Promise.reject(\n              `Missing queryFn for queryKey '${context.options.queryHash}'`,\n            ))\n\n        const buildNewPages = (\n          pages: unknown[],\n          param: unknown,\n          page: unknown,\n          previous?: boolean,\n        ) => {\n          newPageParams = previous\n            ? [param, ...newPageParams]\n            : [...newPageParams, param]\n          return previous ? [page, ...pages] : [...pages, page]\n        }\n\n        // Create function to fetch a page\n        const fetchPage = (\n          pages: unknown[],\n          manual?: boolean,\n          param?: unknown,\n          previous?: boolean,\n        ): Promise<unknown[]> => {\n          if (cancelled) {\n            return Promise.reject('Cancelled')\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages)\n          }\n\n          const queryFnContext: QueryFunctionContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta,\n          }\n\n          addSignalProperty(queryFnContext)\n\n          const queryFnResult = queryFn(queryFnContext)\n\n          const promise = Promise.resolve(queryFnResult).then((page) =>\n            buildNewPages(pages, param, page, previous),\n          )\n\n          return promise\n        }\n\n        let promise: Promise<unknown[]>\n\n        // Fetch first page?\n        if (!oldPages.length) {\n          promise = fetchPage([])\n        }\n\n        // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getNextPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param)\n        }\n\n        // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getPreviousPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param, true)\n        }\n\n        // Refetch pages\n        else {\n          newPageParams = []\n\n          const manual = typeof context.options.getNextPageParam === 'undefined'\n\n          const shouldFetchFirstPage =\n            refetchPage && oldPages[0]\n              ? refetchPage(oldPages[0], 0, oldPages)\n              : true\n\n          // Fetch first page\n          promise = shouldFetchFirstPage\n            ? fetchPage([], manual, oldPageParams[0])\n            : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]))\n\n          // Fetch remaining pages\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then((pages) => {\n              const shouldFetchNextPage =\n                refetchPage && oldPages[i]\n                  ? refetchPage(oldPages[i], i, oldPages)\n                  : true\n\n              if (shouldFetchNextPage) {\n                const param = manual\n                  ? oldPageParams[i]\n                  : getNextPageParam(context.options, pages)\n                return fetchPage(pages, manual, param)\n              }\n              return Promise.resolve(\n                buildNewPages(pages, oldPageParams[i], oldPages[i]),\n              )\n            })\n          }\n        }\n\n        const finalPromise = promise.then((pages) => ({\n          pages,\n          pageParams: newPageParams,\n        }))\n\n        return finalPromise\n      }\n    },\n  }\n}\n\nexport function getNextPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getNextPageParam?.(pages[pages.length - 1], pages)\n}\n\nexport function getPreviousPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getPreviousPageParam?.(pages[0], pages)\n}\n\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasNextPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages)\n    return (\n      typeof nextPageParam !== 'undefined' &&\n      nextPageParam !== null &&\n      nextPageParam !== false\n    )\n  }\n  return\n}\n\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasPreviousPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages)\n    return (\n      typeof previousPageParam !== 'undefined' &&\n      previousPageParam !== null &&\n      previousPageParam !== false\n    )\n  }\n  return\n}\n", "import {\n  functionalUpdate,\n  hashQueryKey,\n  hashQueryKeyByOptions,\n  noop,\n  parseFilterArgs,\n  parseQueryArgs,\n  partialMatchKey,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport { defaultLogger } from './logger'\nimport type { CancelOptions, DefaultedQueryObserverOptions } from './types'\nimport type { Logger } from './logger'\nimport type { QueryState } from './query'\nimport type {\n  DefaultOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  QueryClientConfig,\n  QueryFunction,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  ResetQueryFilters,\n  SetDataOptions,\n  WithRequired,\n} from './types'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: QueryOptions<any, any, any>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  private queryCache: QueryCache\n  private mutationCache: MutationCache\n  private logger: Logger\n  private defaultOptions: DefaultOptions\n  private queryDefaults: QueryDefaults[]\n  private mutationDefaults: MutationDefaults[]\n  private mountCount: number\n  private unsubscribeFocus?: () => void\n  private unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.queryCache = config.queryCache || new QueryCache()\n    this.mutationCache = config.mutationCache || new MutationCache()\n    this.logger = config.logger || defaultLogger\n    this.defaultOptions = config.defaultOptions || {}\n    this.queryDefaults = []\n    this.mutationDefaults = []\n    this.mountCount = 0\n\n    if (process.env.NODE_ENV !== 'production' && config.logger) {\n      this.logger.error(\n        `Passing a custom logger has been deprecated and will be removed in the next major version.`,\n      )\n    }\n  }\n\n  mount(): void {\n    this.mountCount++\n    if (this.mountCount !== 1) return\n\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations()\n        this.queryCache.onFocus()\n      }\n    })\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations()\n        this.queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.mountCount--\n    if (this.mountCount !== 0) return\n\n    this.unsubscribeFocus?.()\n    this.unsubscribeFocus = undefined\n\n    this.unsubscribeOnline?.()\n    this.unsubscribeOnline = undefined\n  }\n\n  isFetching(filters?: QueryFilters): number\n  isFetching(queryKey?: QueryKey, filters?: QueryFilters): number\n  isFetching(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): number {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    filters.fetchStatus = 'fetching'\n    return this.queryCache.findAll(filters).length\n  }\n\n  isMutating(filters?: MutationFilters): number {\n    return this.mutationCache.findAll({ ...filters, fetching: true }).length\n  }\n\n  getQueryData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): TQueryFnData | undefined {\n    return this.queryCache.find<TQueryFnData>(queryKey, filters)?.state.data\n  }\n\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: WithRequired<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey' | 'queryFn'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | WithRequired<\n          FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n          'queryKey'\n        >,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const cachedData = this.getQueryData<TData>(parsedOptions.queryKey!)\n\n    return cachedData\n      ? Promise.resolve(cachedData)\n      : this.fetchQuery(parsedOptions)\n  }\n\n  getQueriesData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    filters: QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return this.getQueryCache()\n      .findAll(queryKeyOrFilters)\n      .map(({ queryKey, state }) => {\n        const data = state.data as TQueryFnData | undefined\n        return [queryKey, data]\n      })\n  }\n\n  setQueryData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): TQueryFnData | undefined {\n    const query = this.queryCache.find<TQueryFnData>(queryKey)\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (typeof data === 'undefined') {\n      return undefined\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n    return this.queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    filters: QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return notifyManager.batch(() =>\n      this.getQueryCache()\n        .findAll(queryKeyOrFilters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<TQueryFnData = unknown, TError = undefined>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): QueryState<TQueryFnData, TError> | undefined {\n    return this.queryCache.find<TQueryFnData, TError>(queryKey, filters)?.state\n  }\n\n  removeQueries(filters?: QueryFilters): void\n  removeQueries(queryKey?: QueryKey, filters?: QueryFilters): void\n  removeQueries(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): void {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    const queryCache = this.queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TPageData = unknown>(\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries(\n    arg1?: QueryKey | ResetQueryFilters,\n    arg2?: ResetQueryFilters | ResetOptions,\n    arg3?: ResetOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n    const queryCache = this.queryCache\n\n    const refetchFilters: RefetchQueryFilters = {\n      type: 'active',\n      ...filters,\n    }\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  cancelQueries(filters?: QueryFilters, options?: CancelOptions): Promise<void>\n  cancelQueries(\n    queryKey?: QueryKey,\n    filters?: QueryFilters,\n    options?: CancelOptions,\n  ): Promise<void>\n  cancelQueries(\n    arg1?: QueryKey | QueryFilters,\n    arg2?: QueryFilters | CancelOptions,\n    arg3?: CancelOptions,\n  ): Promise<void> {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3)\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true\n    }\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(cancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TPageData = unknown>(\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries(\n    arg1?: QueryKey | InvalidateQueryFilters,\n    arg2?: InvalidateQueryFilters | InvalidateOptions,\n    arg3?: InvalidateOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    return notifyManager.batch(() => {\n      this.queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      const refetchFilters: RefetchQueryFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? 'active',\n      }\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  refetchQueries<TPageData = unknown>(\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries(\n    arg1?: QueryKey | RefetchQueryFilters,\n    arg2?: RefetchQueryFilters | RefetchOptions,\n    arg3?: RefetchOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled())\n        .map((query) =>\n          query.fetch(undefined, {\n            ...options,\n            cancelRefetch: options?.cancelRefetch ?? true,\n            meta: { refetchPage: filters.refetchPage },\n          }),\n        ),\n    )\n\n    let promise = Promise.all(promises).then(noop)\n\n    if (!options?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(defaultedOptions.staleTime)\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    parsedOptions.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData\n    >()\n    return this.fetchQuery(parsedOptions)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    return this.mutationCache.resumePausedMutations()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.mutationCache\n  }\n\n  getLogger(): Logger {\n    return this.logger\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.defaultOptions = options\n  }\n\n  setQueryDefaults(\n    queryKey: QueryKey,\n    options: QueryObserverOptions<unknown, any, any, any>,\n  ): void {\n    const result = this.queryDefaults.find(\n      (x) => hashQueryKey(queryKey) === hashQueryKey(x.queryKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.queryDefaults.push({ queryKey, defaultOptions: options })\n    }\n  }\n\n  getQueryDefaults(\n    queryKey?: QueryKey,\n  ): QueryObserverOptions<any, any, any, any, any> | undefined {\n    if (!queryKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.queryDefaults.find((x) =>\n      partialMatchKey(queryKey, x.queryKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter((x) =>\n        partialMatchKey(queryKey, x.queryKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several query defaults match with key '${JSON.stringify(\n            queryKey,\n          )}'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  setMutationDefaults(\n    mutationKey: MutationKey,\n    options: MutationObserverOptions<any, any, any, any>,\n  ): void {\n    const result = this.mutationDefaults.find(\n      (x) => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.mutationDefaults.push({ mutationKey, defaultOptions: options })\n    }\n  }\n\n  getMutationDefaults(\n    mutationKey?: MutationKey,\n  ): MutationObserverOptions<any, any, any, any> | undefined {\n    if (!mutationKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.mutationDefaults.find((x) =>\n      partialMatchKey(mutationKey, x.mutationKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter((x) =>\n        partialMatchKey(mutationKey, x.mutationKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several mutation defaults match with key '${JSON.stringify(\n            mutationKey,\n          )}'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  defaultQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey extends QueryKey,\n  >(\n    options?:\n      | QueryObserverOptions<TQueryFnData, TError, TData, TQueryData, TQueryKey>\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options?._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options?.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options?.mutationKey),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.queryCache.clear()\n    this.mutationCache.clear()\n  }\n}\n", "import {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { focusManager } from './focusManager'\nimport { Subscribable } from './subscribable'\nimport { canFetch, isCancelledError } from './retryer'\nimport type {\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\nimport type { Action, FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { DefaultedQueryObserverOptions, RefetchPageFilters } from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\nexport interface NotifyOptions {\n  cache?: boolean\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\nexport interface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  options: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n\n  private client: QueryClient\n  private currentQuery!: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  private currentQueryInitialState!: QueryState<TQueryData, TError>\n  private currentResult!: QueryObserverResult<TData, TError>\n  private currentResultState?: QueryState<TQueryData, TError>\n  private currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  private previousQueryResult?: QueryObserverResult<TData, TError>\n  private selectError: TError | null\n  private selectFn?: (data: TQueryData) => TData\n  private selectResult?: TData\n  private staleTimeoutId?: ReturnType<typeof setTimeout>\n  private refetchIntervalId?: ReturnType<typeof setInterval>\n  private currentRefetchInterval?: number | false\n  private trackedProps!: Set<keyof QueryObserverResult>\n\n  constructor(\n    client: QueryClient,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.client = client\n    this.options = options\n    this.trackedProps = new Set()\n    this.selectError = null\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.remove = this.remove.bind(this)\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch()\n      }\n\n      this.updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.clearStaleTimeout()\n    this.clearRefetchInterval()\n    this.currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options?: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.currentQuery\n\n    this.options = this.client.defaultQueryOptions(options)\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof options?.isDataEqual !== 'undefined'\n    ) {\n      this.client\n        .getLogger()\n        .error(\n          `The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option`,\n        )\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this,\n      })\n    }\n\n    if (\n      typeof this.options.enabled !== 'undefined' &&\n      typeof this.options.enabled !== 'boolean'\n    ) {\n      throw new Error('Expected enabled to be a boolean')\n    }\n\n    // Keep previous query key if the user does not supply one\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey\n    }\n\n    this.updateQuery()\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.executeFetch()\n    }\n\n    // Update result\n    this.updateResult(notifyOptions)\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        this.options.staleTime !== prevOptions.staleTime)\n    ) {\n      this.updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        nextRefetchInterval !== this.currentRefetchInterval)\n    ) {\n      this.updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.client.getQueryCache().build(this.client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result\n      this.currentResultOptions = this.options\n      this.currentResultState = this.currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n  ): QueryObserverResult<TData, TError> {\n    const trackedResult = {} as QueryObserverResult<TData, TError>\n\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key as keyof QueryObserverResult)\n          return result[key as keyof QueryObserverResult]\n        },\n      })\n    })\n\n    return trackedResult\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.currentQuery\n  }\n\n  remove(): void {\n    this.client.getQueryCache().remove(this.currentQuery)\n  }\n\n  refetch<TPageData>({\n    refetchPage,\n    ...options\n  }: RefetchOptions & RefetchPageFilters<TPageData> = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: { refetchPage },\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.client.defaultQueryOptions(options)\n\n    const query = this.client\n      .getQueryCache()\n      .build(this.client, defaultedOptions)\n    query.isFetchingOptimistic = true\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.currentResult\n    })\n  }\n\n  private executeFetch(\n    fetchOptions?: ObserverFetchOptions,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  private updateStaleTimeout(): void {\n    this.clearStaleTimeout()\n\n    if (\n      isServer ||\n      this.currentResult.isStale ||\n      !isValidTimeout(this.options.staleTime)\n    ) {\n      return\n    }\n\n    const time = timeUntilStale(\n      this.currentResult.dataUpdatedAt,\n      this.options.staleTime,\n    )\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  private computeRefetchInterval() {\n    return typeof this.options.refetchInterval === 'function'\n      ? this.options.refetchInterval(this.currentResult.data, this.currentQuery)\n      : this.options.refetchInterval ?? false\n  }\n\n  private updateRefetchInterval(nextInterval: number | false): void {\n    this.clearRefetchInterval()\n\n    this.currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      this.options.enabled === false ||\n      !isValidTimeout(this.currentRefetchInterval) ||\n      this.currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.executeFetch()\n      }\n    }, this.currentRefetchInterval)\n  }\n\n  private updateTimers(): void {\n    this.updateStaleTimeout()\n    this.updateRefetchInterval(this.computeRefetchInterval())\n  }\n\n  private clearStaleTimeout(): void {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId)\n      this.staleTimeoutId = undefined\n    }\n  }\n\n  private clearRefetchInterval(): void {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId)\n      this.refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.currentQuery\n    const prevOptions = this.options\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.currentResultState\n    const prevResultOptions = this.currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.currentQueryInitialState\n    const prevQueryResult = queryChange\n      ? this.currentResult\n      : this.previousQueryResult\n\n    const { state } = query\n    let { dataUpdatedAt, error, errorUpdatedAt, fetchStatus, status } = state\n    let isPreviousData = false\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode)\n          ? 'fetching'\n          : 'paused'\n        if (!dataUpdatedAt) {\n          status = 'loading'\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle'\n      }\n    }\n\n    // Keep previous data if needed\n    if (\n      options.keepPreviousData &&\n      !state.dataUpdatedAt &&\n      prevQueryResult?.isSuccess &&\n      status !== 'error'\n    ) {\n      data = prevQueryResult.data\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt\n      status = prevQueryResult.status\n      isPreviousData = true\n    }\n    // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (\n        prevResult &&\n        state.data === prevResultState?.data &&\n        options.select === this.selectFn\n      ) {\n        data = this.selectResult\n      } else {\n        try {\n          this.selectFn = options.select\n          data = options.select(state.data)\n          data = replaceData(prevResult?.data, data, options)\n          this.selectResult = data\n          this.selectError = null\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError)\n          }\n          this.selectError = selectError as TError\n        }\n      }\n    }\n    // Use query data\n    else {\n      data = state.data as unknown as TData\n    }\n\n    // Show placeholder data if needed\n    if (\n      typeof options.placeholderData !== 'undefined' &&\n      typeof data === 'undefined' &&\n      status === 'loading'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n      } else {\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (options.placeholderData as PlaceholderDataFunction<TQueryData>)()\n            : options.placeholderData\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData)\n            this.selectError = null\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError)\n            }\n            this.selectError = selectError as TError\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success'\n        data = replaceData(prevResult?.data, placeholderData, options) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError as any\n      data = this.selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = fetchStatus === 'fetching'\n    const isLoading = status === 'loading'\n    const isError = status === 'error'\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        state.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove,\n    }\n\n    return result as QueryObserverResult<TData, TError>\n  }\n\n  updateResult(notifyOptions?: NotifyOptions): void {\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.currentQuery, this.options)\n    this.currentResultState = this.currentQuery.state\n    this.currentResultOptions = this.options\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.currentResult = nextResult\n\n    // Determine which callbacks to trigger\n    const defaultNotifyOptions: NotifyOptions = { cache: true }\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.trackedProps,\n      )\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey]\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true\n    }\n\n    this.notify({ ...defaultNotifyOptions, ...notifyOptions })\n  }\n\n  private updateQuery(): void {\n    const query = this.client.getQueryCache().build(this.client, this.options)\n\n    if (query === this.currentQuery) {\n      return\n    }\n\n    const prevQuery = this.currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.currentQuery = query\n    this.currentQueryInitialState = query.state\n    this.previousQueryResult = this.currentResult\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(action: Action<TData, TError>): void {\n    const notifyOptions: NotifyOptions = {}\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true\n    }\n\n    this.updateResult(notifyOptions)\n\n    if (this.hasListeners()) {\n      this.updateTimers()\n    }\n  }\n\n  private notify(notifyOptions: NotifyOptions): void {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        this.options.onSuccess?.(this.currentResult.data!)\n        this.options.onSettled?.(this.currentResult.data!, null)\n      } else if (notifyOptions.onError) {\n        this.options.onError?.(this.currentResult.error!)\n        this.options.onSettled?.(undefined, this.currentResult.error!)\n      }\n\n      // Then trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated',\n        })\n      }\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    !query.state.dataUpdatedAt &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.dataUpdatedAt > 0 &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: typeof options['refetchOnMount'] &\n    typeof options['refetchOnWindowFocus'] &\n    typeof options['refetchOnReconnect'],\n) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    (query !== prevQuery || prevOptions.enabled === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return query.isStaleByTime(options.staleTime)\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false\n  }\n\n  // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData\n  }\n\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n", "import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type {\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions, ObserverFetchOptions } from './queryObserver'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  InfiniteData<TData>,\n  InfiniteData<TQueryData>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: (\n    listener?: InfiniteQueryObserverListener<TData, TError>,\n  ) => () => void\n\n  // Type override\n  getCurrentResult!: () => InfiniteQueryObserverResult<TData, TError>\n\n  // Type override\n  protected fetch!: (\n    fetchOptions: ObserverFetchOptions,\n  ) => Promise<InfiniteQueryObserverResult<TData, TError>>\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options?: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior(),\n      },\n      notifyOptions,\n    )\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage({ pageParam, ...options }: FetchNextPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward', pageParam },\n      },\n    })\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  }: FetchPreviousPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward', pageParam },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, InfiniteData<TQueryData>, TQueryKey>,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const result = super.createResult(query, options)\n\n    const { isFetching, isRefetching } = result\n\n    const isFetchingNextPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'forward'\n\n    const isFetchingPreviousPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'backward'\n\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data?.pages),\n      hasPreviousPage: hasPreviousPage(options, state.data?.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n  }\n}\n", "import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n", "'use client'\nimport * as ReactDOM from 'react-dom'\n\nexport const unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates\n", "import { notifyManager } from '@tanstack/query-core'\nimport { unstable_batchedUpdates } from './reactBatchedUpdates'\n\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates)\n", "'use client'\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n", "'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ndeclare global {\n  interface Window {\n    ReactQueryClientContext?: React.Context<QueryClient | undefined>\n  }\n}\n\nexport const defaultContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\nconst QueryClientSharingContext = React.createContext<boolean>(false)\n\n// If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\nfunction getQueryClientContext(\n  context: React.Context<QueryClient | undefined> | undefined,\n  contextSharing: boolean,\n) {\n  if (context) {\n    return context\n  }\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext\n    }\n\n    return window.ReactQueryClientContext\n  }\n\n  return defaultContext\n}\n\nexport const useQueryClient = ({ context }: ContextOptions = {}) => {\n  const queryClient = React.useContext(\n    getQueryClientContext(context, React.useContext(QueryClientSharingContext)),\n  )\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return queryClient\n}\n\ntype QueryClientProviderPropsBase = {\n  client: QueryClient\n  children?: React.ReactNode\n}\ntype QueryClientProviderPropsWithContext = ContextOptions & {\n  contextSharing?: never\n} & QueryClientProviderPropsBase\ntype QueryClientProviderPropsWithContextSharing = {\n  context?: never\n  contextSharing?: boolean\n} & QueryClientProviderPropsBase\n\nexport type QueryClientProviderProps =\n  | QueryClientProviderPropsWithContext\n  | QueryClientProviderPropsWithContextSharing\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false,\n}: QueryClientProviderProps): JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client\n      .getLogger()\n      .error(\n        `The contextSharing option has been deprecated and will be removed in the next major version`,\n      )\n  }\n\n  const Context = getQueryClientContext(context, contextSharing)\n\n  return (\n    <QueryClientSharingContext.Provider value={!context && contextSharing}>\n      <Context.Provider value={client}>{children}</Context.Provider>\n    </QueryClientSharingContext.Provider>\n  )\n}\n", "'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n", "'use client'\nimport * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n", "export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n", "'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from './utils'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  UseErrorBoundary,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  useErrorBoundary: UseErrorBoundary<\n    TQueryFnData,\n    TError,\n    TQueryData,\n    TQueryKey\n  >\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    shouldThrowError(useErrorBoundary, [result.error, query])\n  )\n}\n", "import type { DefaultedQueryObserverOptions } from '@tanstack/query-core'\nimport type { QueryObserver } from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\nimport type { QueryObserverResult } from '@tanstack/query-core'\nimport type { QueryKey } from '@tanstack/query-core'\n\nexport const ensureStaleTime = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => defaultedOptions?.suspense && willFetch(result, isRestoring)\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer\n    .fetchOptimistic(defaultedOptions)\n    .then(({ data }) => {\n      defaultedOptions.onSuccess?.(data as TData)\n      defaultedOptions.onSettled?.(data, null)\n    })\n    .catch((error) => {\n      errorResetBoundary.clearReset()\n      defaultedOptions.onError?.(error)\n      defaultedOptions.onSettled?.(undefined, error)\n    })\n", "'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n", "'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n", "'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n", "'use client'\nimport { InfiniteQueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  QueryFunction,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type { UseInfiniteQueryOptions, UseInfiniteQueryResult } from './types'\n\n// HOOK\n\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey' | 'queryFn'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1:\n    | TQueryKey\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg3?: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError> {\n  const options = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n  ) as UseInfiniteQueryResult<TData, TError>\n}\n", "import ErrorStackParser from \"error-stack-parser\";\nimport { cleanStack } from \"./clean-stack\";\nimport { isRefineStack } from \"./is-refine-stack\";\nimport { getPackageNameFromFilename } from \"./get-package-name-from-filename\";\nimport { TraceType } from \"@refinedev/devtools-shared\";\n\nexport function getTrace() {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return [];\n    } else {\n        try {\n            const error = new Error();\n            const stack = ErrorStackParser.parse(error);\n            const clean = cleanStack(stack);\n            const traces = clean\n                .map(\n                    (frame) =>\n                        ({\n                            file: frame.fileName,\n                            line: frame.lineNumber,\n                            column: frame.columnNumber,\n                            function: frame.functionName,\n                            isRefine: isRefineStack(frame.fileName),\n                            packageName: getPackageNameFromFilename(\n                                frame.fileName,\n                            ),\n                        } as TraceType),\n                )\n                .filter((trace) => trace.function);\n            return traces.slice(1);\n        } catch (error) {\n            return [];\n        }\n    }\n}\n", "import type { StackFrame } from \"error-stack-parser\";\n\nconst unrelatedFunctionName = \"renderWithHooks\";\n\nexport const cleanStack = (stack: StackFrame[]) => {\n    const firstUnrelatedIndex = stack.findIndex(\n        (frame) => frame.functionName === unrelatedFunctionName,\n    );\n\n    if (firstUnrelatedIndex !== -1) {\n        return stack.slice(0, firstUnrelatedIndex);\n    }\n\n    return stack;\n};\n", "export const REFINE_PACKAGE_FILEPATH_REGEXP =\n    __DEV_CONDITION__ !== \"development\"\n        ? /node_modules\\/refinedev\\/(?<name>.*?)\\//\n        : /\\/refine\\/packages\\/(?<name>.*?)\\//;\n", "import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const isRefineStack = (filename?: string) => {\n    if (!filename) return false;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    return !!match;\n};\n", "import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const getPackageNameFromFilename = (filename?: string) => {\n    if (!filename) return;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    const name = match?.groups?.name;\n\n    if (!name) return;\n\n    return `@refinedev/${name}`;\n};\n", "import {\n    DevtoolsEvent,\n    DevtoolsEventPayloads,\n    RefineHook,\n    scopes,\n} from \"@refinedev/devtools-shared\";\n\nexport type Activity =\n    DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport const getResourcePath = (\n    hookName: RefineHook,\n    legacyKey: boolean,\n): string | null => {\n    if (scopes[hookName] === \"auth\") {\n        return null;\n    }\n    if (hookName === \"useCan\") {\n        if (legacyKey) {\n            return \"key[1].resource\";\n        } else {\n            return \"key[1]\";\n        }\n    }\n    if (scopes[hookName] === \"audit-log\") {\n        if (hookName === \"useLog\") {\n            return \"variables.resource\";\n        }\n        return \"key[1]\";\n    }\n    if (scopes[hookName] === \"data\") {\n        if (hookName === \"useCustom\" || hookName === \"useCustomMutation\") {\n            return null;\n        }\n        switch (hookName) {\n            case \"useList\":\n            case \"useInfiniteList\":\n            case \"useOne\":\n            case \"useMany\":\n                if (legacyKey) {\n                    return \"key[1]\";\n                } else {\n                    return \"key[2]\";\n                }\n            case \"useCreate\":\n            case \"useCreateMany\":\n            case \"useDelete\":\n            case \"useDeleteMany\":\n            case \"useUpdate\":\n            case \"useUpdateMany\":\n                return \"variables.resource\";\n        }\n    }\n    return null;\n};\n", "import { RefineHook, TraceType } from \"@refinedev/devtools-shared\";\nimport { getTrace } from \"./get-trace\";\nimport { getResourcePath } from \"./get-resource-path\";\n\nexport type XRayResponse = {\n    hookName: string;\n    trace: TraceType[];\n    resourcePath: string | null;\n    legacyKey: boolean;\n};\n\nexport function getXRay(hookName: string, legacyKey: boolean): XRayResponse {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return {\n            hookName: \"\",\n            trace: [],\n            resourcePath: null,\n            legacyKey: false,\n        };\n    } else {\n        const trace = getTrace().slice(1);\n\n        const resourcePath = getResourcePath(hookName as RefineHook, legacyKey);\n\n        return {\n            hookName,\n            trace,\n            resourcePath,\n            legacyKey,\n        };\n    }\n}\n", "import { DevToolsContext } from \"@refinedev/devtools-shared\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport React, { useContext } from \"react\";\nimport { createQueryListener, createMutationListener } from \"./listeners\";\n\nexport const useQuerySubscription =\n    __DEV_CONDITION__ !== \"development\"\n        ? () => ({})\n        : (queryClient: QueryClient) => {\n              const { ws } = useContext(DevToolsContext);\n              const queryCacheSubscription = React.useRef<() => void>();\n              const mutationCacheSubscription = React.useRef<() => void>();\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const queryCache = queryClient.getQueryCache();\n\n                  const queryListener = createQueryListener(ws);\n\n                  queryCache.getAll().forEach(queryListener);\n\n                  queryCacheSubscription.current = queryCache.subscribe(\n                      ({ query, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          queryListener(query),\n                  );\n\n                  return () => {\n                      queryCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const mutationCache = queryClient.getMutationCache();\n\n                  const mutationListener = createMutationListener(ws);\n\n                  mutationCache.getAll().forEach(mutationListener);\n\n                  mutationCacheSubscription.current = mutationCache.subscribe(\n                      ({ mutation, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          mutationListener(mutation),\n                  );\n\n                  return () => {\n                      mutationCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              return {};\n          };\n", "import { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport { Mutation, Query } from \"@tanstack/react-query\";\n\nimport { createIdentifier } from \"./create-identifier\";\nimport { XRayResponse } from \"./get-xray\";\n\nexport const createMutationListener =\n    (ws: WebSocket) => (mutation?: Mutation) => {\n        if (!mutation?.meta?.trace) return;\n\n        const meta: XRayResponse = mutation?.meta as any;\n\n        new Promise<void>((resolve) => {\n            send(ws, DevtoolsEvent.ACTIVITY, {\n                type: \"mutation\",\n                identifier: createIdentifier(\n                    mutation?.options.mutationKey,\n                    mutation?.meta?.trace as any,\n                ),\n                key: mutation?.options.mutationKey as any,\n                status: mutation?.state.status,\n                state: mutation?.state,\n                variables: mutation?.state?.variables,\n                ...meta,\n            });\n            resolve();\n        });\n\n        // console.table({\n        //     type: \"mutation\",\n        //     key: mutation?.options.mutationKey,\n        //     id: mutation?.mutationId,\n        //     status: mutation?.state.status,\n        //     trace: mutation?.meta?.trace,\n        //     state: mutation?.state,\n        //     variables: mutation?.state?.variables,\n        // });\n    };\n\nexport const createQueryListener = (ws: WebSocket) => (query: Query) => {\n    if (!query?.meta?.trace) return;\n\n    const meta: XRayResponse = query?.meta as any;\n\n    new Promise<void>((resolve) => {\n        send(ws, DevtoolsEvent.ACTIVITY, {\n            type: \"query\",\n            identifier: createIdentifier(\n                query.queryKey,\n                query.meta?.trace as any,\n            ),\n            key: query.queryKey as any,\n            status: query.state.status,\n            state: query.state,\n            ...meta,\n        });\n        resolve();\n    });\n\n    // console.table({\n    //     type: \"query\",\n    //     key: query.queryKey,\n    //     status: query.state.status,\n    //     trace: query.meta?.trace,\n    //     state: query.state,\n    // });\n};\n", "import { TraceType } from \"@refinedev/devtools-shared\";\nimport { MutationKey, QueryKey } from \"@tanstack/react-query\";\n\nexport const createIdentifier = (\n    key?: QueryKey | MutationKey,\n    trace?: TraceType[],\n) => {\n    const simpleTrace = trace?.map(\n        (t) =>\n            `${t.file}:${t.line}:${t.column}#${t.function}-${t.packageName}-${\n                t.isRefine ? 1 : 0\n            }`,\n    );\n    const str = JSON.stringify([...(key ?? []), ...(simpleTrace ?? [])]);\n\n    return str;\n};\n"],
  "mappings": "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",
  "names": ["React", "x", "y", "useState", "useEffect", "useSyncExternalStore", "error", "useSyncExternalStore$1", "p", "i", "v", "i", "concatty", "i", "slicy", "Empty", "undefined", "x", "doEval", "stringToPath", "getBaseIntrinsic", "i", "hasPropertyDescriptors", "define", "applyBind", "O", "i", "xs", "isError", "ys", "isPlainObject", "f", "m", "x", "l", "$o", "i", "compactQueue", "arrayToObject", "merge", "encode", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "isNonNullishPrimitive", "v", "stringify", "value", "normalizeStringifyOptions", "i", "i", "normalizeParseOptions", "CsvConfigConsts", "ExportToCsv", "i", "_i", "to", "m", "p", "f", "o", "r", "J", "i", "e", "t", "_", "n", "l", "p", "g", "m", "y", "s", "a", "u", "h", "v", "d", "c", "E", "z", "P", "q", "W", "b", "I", "w", "R", "C", "S", "T", "O", "x", "import_react", "Subscribable", "constructor", "listeners", "Set", "subscribe", "bind", "listener", "identity", "add", "onSubscribe", "delete", "onUnsubscribe", "hasListeners", "size", "isServer", "window", "noop", "undefined", "functionalUpdate", "updater", "input", "isValidTimeout", "value", "Infinity", "timeUntilStale", "updatedAt", "staleTime", "Math", "max", "Date", "now", "parseQueryArgs", "arg1", "arg2", "arg3", "isQueryKey", "queryKey", "queryFn", "parseMutationArgs", "mutationKey", "mutationFn", "parseFilterArgs", "matchQuery", "filters", "query", "type", "exact", "fetchStatus", "predicate", "queryKey", "stale", "isQueryKey", "queryHash", "hashQueryKeyByOptions", "options", "partialMatchKey", "isActive", "isStale", "state", "matchMutation", "mutation", "fetching", "mutationKey", "hashQueryKey", "status", "hashFn", "queryKeyHashFn", "JSON", "stringify", "_", "val", "isPlainObject", "Object", "keys", "sort", "reduce", "result", "key", "a", "b", "partialDeepEqual", "some", "replaceEqualDeep", "array", "isPlainArray", "aSize", "length", "bItems", "bSize", "copy", "equalItems", "i", "shallowEqualObjects", "value", "Array", "isArray", "o", "hasObjectPrototype", "ctor", "constructor", "prot", "prototype", "hasOwnProperty", "toString", "call", "sleep", "timeout", "Promise", "resolve", "setTimeout", "scheduleMicrotask", "callback", "then", "getAbortController", "AbortController", "replaceData", "prevData", "data", "options", "isDataEqual", "structuralSharing", "replaceEqualDeep", "FocusManager", "Subscribable", "constructor", "setup", "onFocus", "isServer", "window", "addEventListener", "listener", "removeEventListener", "onSubscribe", "cleanup", "setEventListener", "onUnsubscribe", "hasListeners", "undefined", "focused", "setFocused", "changed", "listeners", "forEach", "isFocused", "document", "includes", "visibilityState", "focusManager", "onlineEvents", "OnlineManager", "Subscribable", "constructor", "setup", "onOnline", "isServer", "window", "addEventListener", "listener", "forEach", "event", "removeEventListener", "onSubscribe", "cleanup", "setEventListener", "onUnsubscribe", "hasListeners", "undefined", "online", "setOnline", "changed", "listeners", "isOnline", "navigator", "onLine", "onlineManager", "defaultRetryDelay", "failureCount", "Math", "min", "canFetch", "networkMode", "onlineManager", "isOnline", "CancelledError", "constructor", "options", "revert", "silent", "isCancelledError", "value", "createRetryer", "config", "isRetryCancelled", "isResolved", "continueFn", "promiseResolve", "promiseReject", "promise", "Promise", "outerResolve", "outerReject", "cancel", "cancelOptions", "reject", "abort", "cancelRetry", "continueRetry", "shouldPause", "focusManager", "isFocused", "resolve", "onSuccess", "onError", "pause", "continueResolve", "canContinue", "onPause", "then", "undefined", "onContinue", "run", "promiseOrValue", "fn", "error", "catch", "retry", "retryDelay", "delay", "shouldRetry", "onFail", "sleep", "continue", "didContinue", "defaultLogger", "console", "createNotifyManager", "queue", "transactions", "notifyFn", "callback", "batchNotifyFn", "batch", "result", "flush", "schedule", "push", "scheduleMicrotask", "batchCalls", "args", "originalQueue", "length", "forEach", "setNotifyFunction", "fn", "setBatchNotifyFunction", "notifyManager", "Removable", "destroy", "clearGcTimeout", "scheduleGc", "isValidTimeout", "cacheTime", "gcTimeout", "setTimeout", "optionalRemove", "updateCacheTime", "newCacheTime", "Math", "max", "isServer", "Infinity", "clearTimeout", "undefined", "Query", "Removable", "constructor", "config", "abortSignalConsumed", "defaultOptions", "setOptions", "options", "observers", "cache", "logger", "defaultLogger", "queryKey", "queryHash", "initialState", "state", "getDefaultState", "scheduleGc", "meta", "updateCacheTime", "cacheTime", "optionalRemove", "length", "fetchStatus", "remove", "setData", "newData", "data", "replaceData", "dispatch", "type", "dataUpdatedAt", "updatedAt", "manual", "setState", "setStateOptions", "cancel", "promise", "retryer", "then", "noop", "catch", "Promise", "resolve", "destroy", "silent", "reset", "isActive", "some", "observer", "enabled", "isDisabled", "getObserversCount", "isStale", "isInvalidated", "getCurrentResult", "isStaleByTime", "staleTime", "timeUntilStale", "onFocus", "find", "x", "shouldFetchOnWindowFocus", "refetch", "cancelRefetch", "continue", "onOnline", "shouldFetchOnReconnect", "addObserver", "includes", "push", "clearGcTimeout", "notify", "query", "removeObserver", "filter", "revert", "cancelRetry", "invalidate", "fetch", "fetchOptions", "continueRetry", "queryFn", "process", "Array", "isArray", "error", "abortController", "getAbortController", "queryFnContext", "pageParam", "undefined", "addSignalProperty", "object", "Object", "defineProperty", "enumerable", "get", "signal", "fetchFn", "reject", "context", "behavior", "onFetch", "revertState", "fetchMeta", "onError", "isCancelledError", "onSettled", "isFetchingOptimistic", "createRetryer", "fn", "abort", "bind", "onSuccess", "Error", "onFail", "failureCount", "onPause", "onContinue", "retry", "retryDelay", "networkMode", "action", "reducer", "fetchFailureCount", "fetchFailureReason", "canFetch", "status", "dataUpdateCount", "Date", "now", "errorUpdateCount", "errorUpdatedAt", "notifyManager", "batch", "forEach", "onQueryUpdate", "initialData", "hasData", "initialDataUpdatedAt", "QueryCache", "Subscribable", "constructor", "config", "queries", "queriesMap", "build", "client", "options", "state", "queryKey", "queryHash", "hashQueryKeyByOptions", "query", "get", "Query", "cache", "logger", "getLogger", "defaultQueryOptions", "defaultOptions", "getQueryDefaults", "add", "push", "notify", "type", "remove", "queryInMap", "destroy", "filter", "x", "clear", "notifyManager", "batch", "forEach", "getAll", "find", "arg1", "arg2", "filters", "parseFilterArgs", "exact", "matchQuery", "findAll", "Object", "keys", "length", "event", "listeners", "listener", "onFocus", "onOnline", "Mutation", "Removable", "constructor", "config", "defaultOptions", "mutationId", "mutationCache", "logger", "defaultLogger", "observers", "state", "getDefaultState", "setOptions", "options", "scheduleGc", "updateCacheTime", "cacheTime", "meta", "setState", "dispatch", "type", "addObserver", "observer", "includes", "push", "clearGcTimeout", "notify", "mutation", "removeObserver", "filter", "x", "optionalRemove", "length", "status", "remove", "continue", "retryer", "execute", "executeMutation", "createRetryer", "fn", "mutationFn", "Promise", "reject", "variables", "onFail", "failureCount", "error", "onPause", "onContinue", "retry", "retryDelay", "networkMode", "promise", "restored", "onMutate", "context", "data", "onSuccess", "onSettled", "onError", "process", "undefined", "action", "reducer", "failureReason", "isPaused", "canFetch", "notifyManager", "batch", "forEach", "onMutationUpdate", "MutationCache", "Subscribable", "constructor", "config", "mutations", "mutationId", "build", "client", "options", "state", "mutation", "Mutation", "mutationCache", "logger", "getLogger", "defaultMutationOptions", "defaultOptions", "mutationKey", "getMutationDefaults", "undefined", "add", "push", "notify", "type", "remove", "filter", "x", "clear", "notifyManager", "batch", "forEach", "getAll", "find", "filters", "exact", "matchMutation", "findAll", "event", "listeners", "listener", "resumePausedMutations", "resuming", "Promise", "resolve", "then", "pausedMutations", "isPaused", "reduce", "promise", "continue", "catch", "noop", "infiniteQueryBehavior", "onFetch", "context", "fetchFn", "refetchPage", "fetchOptions", "meta", "fetchMore", "pageParam", "isFetchingNextPage", "direction", "isFetchingPreviousPage", "oldPages", "state", "data", "pages", "oldPageParams", "pageParams", "newPageParams", "cancelled", "addSignalProperty", "object", "Object", "defineProperty", "enumerable", "get", "signal", "aborted", "addEventListener", "queryFn", "options", "Promise", "reject", "queryHash", "buildNewPages", "param", "page", "previous", "fetchPage", "manual", "length", "resolve", "queryFnContext", "queryKey", "queryFnResult", "promise", "then", "getNextPageParam", "getPreviousPageParam", "shouldFetchFirstPage", "i", "shouldFetchNextPage", "finalPromise", "hasNextPage", "Array", "isArray", "nextPageParam", "hasPreviousPage", "previousPageParam", "QueryClient", "constructor", "config", "queryCache", "QueryCache", "mutationCache", "MutationCache", "logger", "defaultLogger", "defaultOptions", "queryDefaults", "mutationDefaults", "mountCount", "error", "mount", "unsubscribeFocus", "focusManager", "subscribe", "isFocused", "resumePausedMutations", "onFocus", "unsubscribeOnline", "onlineManager", "isOnline", "onOnline", "unmount", "undefined", "isFetching", "arg1", "arg2", "filters", "parseFilterArgs", "fetchStatus", "findAll", "length", "isMutating", "fetching", "getQueryData", "queryKey", "find", "state", "data", "ensureQueryData", "arg3", "parsedOptions", "parseQueryArgs", "cachedData", "Promise", "resolve", "fetchQuery", "getQueriesData", "queryKeyOrFilters", "getQueryCache", "map", "setQueryData", "updater", "options", "query", "prevData", "functionalUpdate", "defaultedOptions", "defaultQueryOptions", "build", "setData", "manual", "setQueriesData", "notifyManager", "batch", "getQueryState", "removeQueries", "forEach", "remove", "resetQueries", "refetchFilters", "type", "reset", "refetchQueries", "cancelQueries", "cancelOptions", "revert", "promises", "cancel", "all", "then", "noop", "catch", "invalidateQueries", "invalidate", "refetchType", "filter", "isDisabled", "fetch", "cancelRefetch", "meta", "refetchPage", "promise", "throwOnError", "retry", "isStaleByTime", "staleTime", "prefetchQuery", "fetchInfiniteQuery", "behavior", "infiniteQueryBehavior", "prefetchInfiniteQuery", "getMutationCache", "getLogger", "getDefaultOptions", "setDefaultOptions", "setQueryDefaults", "result", "x", "hashQueryKey", "push", "getQueryDefaults", "firstMatchingDefaults", "partialMatchKey", "process", "matchingDefaults", "JSON", "stringify", "setMutationDefaults", "mutationKey", "getMutationDefaults", "_defaulted", "queries", "queryHash", "hashQueryKeyByOptions", "refetchOnReconnect", "networkMode", "useErrorBoundary", "suspense", "defaultMutationOptions", "mutations", "clear", "QueryObserver", "Subscribable", "constructor", "client", "options", "trackedProps", "Set", "selectError", "bindMethods", "setOptions", "remove", "bind", "refetch", "onSubscribe", "listeners", "size", "currentQuery", "addObserver", "shouldFetchOnMount", "executeFetch", "updateTimers", "onUnsubscribe", "hasListeners", "destroy", "shouldFetchOnReconnect", "shouldFetchOn", "refetchOnReconnect", "shouldFetchOnWindowFocus", "refetchOnWindowFocus", "clearStaleTimeout", "clearRefetchInterval", "removeObserver", "notifyOptions", "prevOptions", "prevQuery", "defaultQueryOptions", "isDataEqual", "getLogger", "error", "shallowEqualObjects", "getQueryCache", "notify", "type", "query", "observer", "enabled", "Error", "queryKey", "updateQuery", "mounted", "shouldFetchOptionally", "updateResult", "staleTime", "updateStaleTimeout", "nextRefetchInterval", "computeRefetchInterval", "currentRefetchInterval", "updateRefetchInterval", "getOptimisticResult", "build", "result", "createResult", "shouldAssignObserverCurrentProperties", "currentResult", "currentResultOptions", "currentResultState", "state", "getCurrentResult", "trackResult", "trackedResult", "Object", "keys", "forEach", "key", "defineProperty", "configurable", "enumerable", "get", "add", "getCurrentQuery", "refetchPage", "fetch", "meta", "fetchOptimistic", "defaultedOptions", "isFetchingOptimistic", "then", "fetchOptions", "cancelRefetch", "promise", "throwOnError", "catch", "noop", "isServer", "isStale", "isValidTimeout", "time", "timeUntilStale", "dataUpdatedAt", "timeout", "staleTimeoutId", "setTimeout", "refetchInterval", "data", "nextInterval", "refetchIntervalId", "setInterval", "refetchIntervalInBackground", "focusManager", "isFocused", "clearTimeout", "undefined", "clearInterval", "prevResult", "prevResultState", "prevResultOptions", "queryChange", "queryInitialState", "currentQueryInitialState", "prevQueryResult", "previousQueryResult", "errorUpdatedAt", "fetchStatus", "status", "isPreviousData", "isPlaceholderData", "_optimisticResults", "fetchOnMount", "fetchOptionally", "canFetch", "networkMode", "keepPreviousData", "isSuccess", "select", "selectFn", "selectResult", "replaceData", "process", "placeholderData", "Date", "now", "isFetching", "isLoading", "isError", "isInitialLoading", "failureCount", "fetchFailureCount", "failureReason", "fetchFailureReason", "errorUpdateCount", "isFetched", "dataUpdateCount", "isFetchedAfterMount", "isRefetching", "isLoadingError", "isPaused", "isRefetchError", "nextResult", "defaultNotifyOptions", "cache", "shouldNotifyListeners", "notifyOnChangeProps", "notifyOnChangePropsValue", "includedProps", "useErrorBoundary", "some", "typedKey", "changed", "has", "onQueryUpdate", "action", "onSuccess", "manual", "isCancelledError", "onError", "notifyManager", "batch", "onSettled", "listener", "shouldLoadOnMount", "retryOnMount", "refetchOnMount", "field", "value", "suspense", "isStaleByTime", "optimisticResult", "InfiniteQueryObserver", "QueryObserver", "constructor", "client", "options", "bindMethods", "fetchNextPage", "bind", "fetchPreviousPage", "setOptions", "notifyOptions", "behavior", "infiniteQueryBehavior", "getOptimisticResult", "pageParam", "fetch", "meta", "fetchMore", "direction", "createResult", "query", "state", "result", "isFetching", "isRefetching", "isFetchingNextPage", "fetchMeta", "isFetchingPreviousPage", "hasNextPage", "data", "pages", "hasPreviousPage", "MutationObserver", "Subscribable", "constructor", "client", "options", "setOptions", "bindMethods", "updateResult", "mutate", "bind", "reset", "prevOptions", "defaultMutationOptions", "shallowEqualObjects", "getMutationCache", "notify", "type", "mutation", "currentMutation", "observer", "onUnsubscribe", "hasListeners", "removeObserver", "onMutationUpdate", "action", "notifyOptions", "listeners", "onSuccess", "onError", "getCurrentResult", "currentResult", "undefined", "variables", "mutateOptions", "build", "addObserver", "execute", "state", "getDefaultState", "result", "isLoading", "status", "isSuccess", "isError", "isIdle", "notifyManager", "batch", "data", "context", "onSettled", "error", "forEach", "listener", "unstable_batchedUpdates", "notifyManager", "setBatchNotifyFunction", "unstable_batchedUpdates", "useSyncExternalStore$1", "context", "contextSharing", "client", "IsRestoringProvider", "clearReset", "isReset", "reset", "shouldThrowError", "_useErrorBoundary", "params", "useClearResetErrorBoundary", "errorResetBoundary", "query", "ensureStaleTime", "defaultedOptions", "suspense", "staleTime", "willFetch", "result", "isRestoring", "isLoading", "isFetching", "shouldSuspend", "fetchOptimistic", "observer", "errorResetBoundary", "then", "data", "onSuccess", "onSettled", "catch", "error", "clearReset", "onError", "undefined", "ensurePreventErrorBoundaryRetry", "useSyncExternalStore", "observer", "listeners", "noop", "unrelatedFunctionName", "cleanStack", "stack", "firstUnrelatedIndex", "frame", "REFINE_PACKAGE_FILEPATH_REGEXP", "isRefineStack", "filename", "getPackageNameFromFilename", "_a", "match", "name", "getTrace", "error", "ErrorStackParser", "trace", "getResourcePath", "hookName", "legacyKey", "scopes", "getXRay", "resourcePath", "createIdentifier", "key", "simpleTrace", "createMutationListener", "ws", "mutation", "meta", "resolve", "_b", "send", "DevtoolsEvent", "createQueryListener", "query", "useQuerySubscription", "queryClient", "useContext", "DevToolsContext", "queryCacheSubscription", "React", "mutationCacheSubscription", "queryCache", "queryListener", "type", "mutationCache", "mutationListener", "import_react", "import_pluralize", "import_react", "import_qs", "import_react", "import_qs", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_warn_once", "import_react", "import_warn_once", "import_react", "import_react", "import_react", "import_react", "import_qs", "import_warn_once", "import_react", "import_react", "import_react", "import_react", "import_warn_once", "import_react", "userFriendlySecond", "__name", "miliseconds", "importCSVMapper", "data", "mapData", "item", "headers", "body", "entry", "fromPairs", "zip", "index", "array", "userFriendlyResourceName", "resource", "type", "humanizeResource", "humanizeString", "pluralize", "handleUseParams", "params", "pickNotDeprecated", "args", "arg", "arrayFindIndex", "slice", "sliceItem", "sliceIndex", "convertToLegacy", "segments", "newSegments", "newParams", "BaseKeyBuilder", "legacy", "ParamsKeyBuilder", "paramsValue", "DataIdRequiringKeyBuilder", "idValue", "DataIdsRequiringKeyBuilder", "idsValue", "el", "DataResourceKeyBuilder", "actionType", "DataKeyBuilder", "resourceName", "mutationName", "AuthKeyBuilder", "AccessResourceKeyBuilder", "AccessKeyBuilder", "AuditActionKeyBuilder", "AuditKeyBuilder", "KeyBuilder", "name", "keys", "queryKeys", "dataProviderName", "meta", "metaData", "providerName", "config", "ids", "id", "queryKeysReplacement", "preferLegacyKeys", "hasPermission", "permissions", "action", "i", "isParameter", "segment", "splitToSegments", "path", "isSegmentCountsSame", "route", "resourceRoute", "routeSegments", "resourceRouteSegments", "removeLeadingTrailingSlashes", "checkBySegments", "stdRoute", "stdResourceRoute", "getDefaultActionPath", "parentPrefix", "cleanParentPrefix", "getParentResource", "resources", "_a", "_b", "parentName", "getParentPrefixForResource", "parents", "parent", "v", "getActionRoutesFromResource", "actions", "actionList", "pickMatchedRoute", "routes", "sanitizedRoutes", "segmentsCount", "eligibleRoutes", "nonParametrizedRoutes", "matchResourceFromRoute", "allFound", "actionRoute", "mostEligible", "routeGenerator", "resourcesFromProps", "createTreeView", "tree", "resourcesRouteObject", "resourcesNameObject", "child", "text", "DefaultLayout", "children", "React", "defaultRefineOptions", "RefineContext", "RefineContextProvider", "hasDashboard", "mutationMode", "warnWhenUnsavedChanges", "syncWithLocation", "undoableTimeout", "DashboardPage", "Title", "Layout", "Header", "Sider", "Footer", "OffLayoutArea", "LoginPage", "catchAll", "liveMode", "onLiveEvent", "options", "handleRefineOptions", "disableTelemetry", "reactQueryClientConfig", "reactQueryDevtoolConfig", "_c", "_d", "_e", "_f", "_g", "_h", "optionsWithDefaults", "disableTelemetryWithDefault", "reactQueryWithDefaults", "redirectPage", "redirectFromProps", "redirectOptions", "sequentialPromises", "promises", "onEachResolve", "onEachReject", "results", "promise", "result", "error", "pickResource", "identifier", "resourceByRoute", "r", "pickDataProvider", "handleMultiple", "res", "getNextPageParam", "lastPage", "pagination", "cursor", "current", "pageSize", "totalPages", "getPreviousPageParam", "legacyResourceTransform", "_resources", "pickRouteParams", "s", "prepareRouteParams", "routeParams", "acc", "key", "value", "composeRoute", "designatedRoute", "resourceMeta", "parsed", "preparedRouteParams", "match", "fromParams", "LegacyAuthContext", "LegacyAuthContextProvider", "isProvided", "authOperations", "replace", "useNavigation", "loginFunc", "registerFunc", "logoutFunc", "checkAuthFunc", "AuthBindingsContext", "AuthBindingsContextProvider", "authBindings", "handleLogin", "handleRegister", "handleLogout", "handleCheck", "handleForgotPassword", "handleUpdatePassword", "useLegacyAuthContext", "useAuthBindingsContext", "useActiveAuthProvider", "legacyAuthProvider", "authProvider", "handlePaginationParams", "hasPagination", "configPagination", "hasPaginationString", "mode", "useMediaQuery", "query", "matches", "setMatches", "useState", "useEffect", "media", "listener", "safeTranslate", "translate", "defaultMessage", "translated", "fallback", "generateDefaultDocumentTitle", "actionPrefixMatcher", "resourceNameFallback", "resourceNameWithFallback", "defaultTitle", "suffix", "autoGeneratedTitle", "useMutationMode", "useContext", "UnsavedWarnContext", "UnsavedWarnContextProvider", "warnWhen", "setWarnWhen", "useWarnAboutChange", "useSyncWithLocation", "useTitle", "useRefineContext", "useUserFriendlyName", "textTransformers", "humanizeName", "isNested", "obj", "isArray", "flattenObjectKeys", "prefix", "currentPrefix", "propertyPathToArray", "propertyPath", "parseTableParams", "url", "sorter", "sorters", "filters", "qs", "parseTableParamsFromQuery", "stringifyTableParams", "rest", "compareFilters", "left", "right", "compareSorters", "unionFilters", "permanentFilter", "newFilters", "prevFilters", "f", "warnOnce", "unionWith", "crudFilter", "unionSorters", "permanentSorter", "newSorters", "crudSorter", "setInitialFilters", "defaultFilter", "differenceWith", "setInitialSorters", "defaultSorter", "getDefaultSortOrder", "columnName", "sortItem", "getDefaultFilter", "operatorType", "filter", "operator", "field", "file2Base64", "file", "resolve", "reject", "reader", "resultHandler", "useKeys", "useNewQueryKeys", "usePermissions", "v3LegacyAuthProviderCompatible", "legacyGetPermission", "getPermissions", "queryResponse", "useQuery", "getXRay", "legacyQueryResponse", "useGetIdentity", "queryOptions", "legacyGetUserIdentity", "getIdentity", "useInvalidateAuthStore", "queryClient", "useQueryClient", "useLogout", "mutationOptions", "invalidateAuthStore", "routerType", "useRouterType", "go", "useGo", "push", "open", "close", "useNotification", "legacyLogoutFromContext", "logoutFromContext", "mutation", "useMutation", "variables", "success", "redirectTo", "redirectPath", "redirect", "buildNotification", "v3LegacyAuthProviderCompatibleMutation", "useLogin", "useParsed", "useLocation", "useRouterContext", "search", "legacyLoginFromContext", "loginFromContext", "to", "redirectPathFromAuth", "useRegister", "legacyRegisterFromContext", "registerFromContext", "useForgotPassword", "v3LegacyAuthProviderCompatibleForgotPasswordFromContext", "forgotPasswordFromContext", "useUpdatePassword", "legacyUpdatePasswordFromContext", "updatePasswordFromContext", "useIsAuthenticated", "checkAuth", "check", "useAuthenticated", "useOnError", "legacyCheckErrorFromContext", "onErrorFromContext", "legacyLogout", "logout", "shouldLogout", "useCheckError", "useIsExistAuthentication", "legacyIsProvided", "useLoadingOvertime", "isLoading", "intervalProp", "onIntervalProp", "elapsedTime", "setElapsedTime", "overtime", "interval", "onInterval", "intervalFn", "prevElapsedTime", "useList", "resourceFromProp", "successNotification", "errorNotification", "liveParams", "overtimeOptions", "useResource", "dataProvider", "useDataProvider", "useTranslate", "checkError", "handleNotification", "useHandleNotification", "getMeta", "useMeta", "pickedDataProvider", "preferredMeta", "prefferedFilters", "prefferedSorters", "prefferedHasPagination", "prefferedPagination", "isServerPagination", "combinedMeta", "notificationValues", "isEnabled", "getList", "useResourceSubscription", "queryKey", "pageParam", "signal", "rawData", "notificationConfig", "err", "useOne", "getOne", "useMany", "getMany", "UndoableQueueContext", "initialState", "undoableQueueReducer", "state", "notificationItem", "isEqual", "UndoableQueueContextProvider", "notifications", "notificationDispatch", "useReducer", "notificationData", "notification", "UndoableQueue", "useUpdate", "select", "mutationModeContext", "undoableTimeoutContext", "publish", "usePublish", "log", "useLog", "useCancelNotification", "invalidateStore", "useInvalidate", "values", "onCancel", "mutationModePropOrContext", "undoableTimeoutPropOrContext", "doMutation", "cancelMutation", "optimisticUpdateMap", "_", "__", "resourceKeys", "previousQueries", "previous", "record", "_data", "_error", "invalidates", "dataProviderNameFromProp", "context", "resourceSingular", "previousData", "queryData", "_fields", "_operation", "_variables", "useCreate", "successNotificationFromProp", "errorNotificationFromProp", "useDelete", "useCreateMany", "selectedDataProvider", "val", "response", "resourcePlural", "useUpdateMany", "mutationFn", "useDeleteMany", "useApiUrl", "getApiUrl", "useCustom", "method", "custom", "useCustomMutation", "defaultDataProvider", "DataContext", "DataContextProvider", "dataProviders", "useCallback", "useInfiniteList", "useInfiniteQuery", "paginationProperties", "total", "LiveContext", "LiveContextProvider", "liveProvider", "useMemoized", "ref", "useRef", "useDeepMemo", "fn", "dependencies", "memoizedDependencies", "useMemo", "ResourceContext", "ResourceContextProvider", "providedResources", "RouterPickerContext", "RouterPickerProvider", "defaultBindings", "RouterBindingsContext", "createContext", "RouterBindingsProvider", "router", "useParse", "bindings", "parse", "oldProps", "force", "pickedResource", "resourceWithRoute", "useResourceWithRoute", "useParams", "legacyParams", "resourceKeyToCheck", "legacyResource", "legacyId", "legacyAction", "legacyResourceName", "legacyIdentifier", "pickedFromProps", "picked", "invalidationFilters", "invalidationOptions", "dp", "channel", "types", "enabled", "liveModeFromProp", "dataProviderNameFromProps", "liveDataContext", "liveModeFromContext", "onLiveEventContextCallback", "invalidate", "subscription", "callback", "event", "useLiveMode", "useSubscription", "liveContext", "NotificationContext", "NotificationContextProvider", "fallbackNotification", "TranslationContext", "TranslationContextProvider", "i18nProvider", "useSetLocale", "lang", "useGetLocale", "useExport", "resourceFromProps", "maxItemCount", "exportOptions", "onError", "setIsLoading", "filename", "preparingData", "ExportToCsv", "useForm", "actionFromProps", "idFromProps", "onMutationSuccess", "onMutationError", "queryMeta", "mutationMeta", "mutationModeProp", "createMutationOptions", "updateMutationOptions", "autoSave", "idFromRoute", "actionFromRoute", "inferredIdentifier", "defaultId", "idFromPropsOrRoute", "setId", "isCreate", "isEdit", "isClone", "designatedRedirectAction", "queryResult", "isFetchingQuery", "mutationResultCreate", "mutateCreate", "isLoadingCreate", "mutationResultUpdate", "mutateUpdate", "isLoadingUpdate", "autoSaveMutation", "handleSubmitWithRedirect", "useRedirectionAfterSubmission", "onFinishCreate", "onSuccess", "responseId", "onFinishAutoSaveMutation", "onFinishAutoSave", "debounce", "allValues", "idFromFunction", "show", "edit", "list", "create", "useGetToPath", "resourceFromRoute", "selectedResource", "resourceSelect", "getToPath", "goFromRouter", "handleResourceErrors", "newTo", "useBack", "useHistory", "history", "back", "handleUrl", "createUrl", "resourceItem", "createActionRoute", "editUrl", "encodedId", "editActionRoute", "cloneUrl", "cloneActionRoute", "showUrl", "showActionRoute", "listUrl", "listActionRoute", "useShow", "showId", "setShowId", "useImport", "paparseOptions", "batchSize", "onFinish", "onProgress", "processedAmount", "setProcessedAmount", "totalAmount", "setTotalAmount", "createMany", "mutationResult", "handleCleanup", "handleFinish", "createdValues", "handleChange", "valueFns", "currentAmount", "chunks", "chunk", "chunkedFns", "chunkedValues", "currentBatchLength", "useModal", "defaultVisible", "visible", "setVisible", "useToPath", "useLink", "defaultProvider", "LegacyRouterContext", "RouterContext", "LegacyRouterContextProvider", "Prompt", "Link", "routerContextValues", "AccessControlContext", "AccessControlContextProvider", "can", "sanitizeResource", "icon", "clone", "restResource", "_metaIcon", "restMeta", "_optionsIcon", "restOptions", "useCan", "_resource", "paramsRest", "sanitizedResource", "useCanWithoutCache", "canFromContext", "useSelect", "props", "setSearch", "setOptions", "selectedOptions", "setSelectedOptions", "sort", "optionLabel", "optionValue", "debounceValue", "defaultValueQueryOptionsFromProps", "fetchSize", "defaultValue", "onSearchFromProp", "defaultValues", "defaultValueQueryOnSuccess", "get", "defaultValueQueryOptions", "defaultValueQueryResult", "defaultQueryOnSuccess", "onSearch", "combinedOptions", "uniqBy", "defaultPermanentFilter", "defaultPermanentSorter", "useTable", "initialCurrent", "initialPageSize", "initialSorter", "defaultSetFilterBehavior", "initialFilter", "filtersFromProp", "sortersFromProp", "syncWithLocationProp", "syncWithLocationContext", "pathname", "parsedParams", "isServerSideFilteringEnabled", "isServerSideSortingEnabled", "isPaginationEnabled", "prefferedCurrent", "prefferedPageSize", "parsedCurrent", "parsedPageSize", "parsedSorter", "parsedFilters", "preferredInitialFilters", "preferredPermanentFilters", "preferredInitialSorters", "preferredPermanentSorters", "prefferedFilterBehavior", "defaultCurrent", "defaultPageSize", "setSorters", "setFilters", "setCurrent", "setPageSize", "createLinkForSyncWithLocation", "currentQueryParams", "stringifyParams", "queryParams", "setFiltersAsMerge", "setFiltersAsReplace", "setFiltersWithSetter", "setter", "prev", "setFiltersFn", "setterOrFilters", "behavior", "setSortWithUnion", "newSorter", "AuditLogContext", "AuditLogContextProvider", "update", "logMutationOptions", "renameMutationOptions", "auditLogContext", "identityData", "refetch", "logPermissions", "authorData", "rename", "useLogList", "author", "useBreadcrumb", "metaFromProps", "breadcrumbs", "addBreadcrumb", "parentResource", "grandParentName", "listActionOfResource", "hrefRaw", "href", "actionLabel", "createResourceKey", "currentParentResource", "createTree", "root", "currentParent", "currentTree", "flatten", "items", "itemKey", "getCleanPath", "useMenu", "hideOnMissingParameter", "legacyPath", "getFriendlyName", "cleanRoute", "selectedKey", "defaultOpenKeys", "prepareItem", "composed", "treeItems", "treeMenuItems", "prepare", "preparedNodes", "newItem", "metaFromProp", "_filters", "_sorters", "_current", "_pageSize", "additionalParams", "ErrorComponent", "errorMessage", "setErrorMessage", "username", "setUsername", "password", "setPassword", "login", "e", "providers", "registerLink", "forgotPasswordLink", "rememberMe", "contentProps", "wrapperProps", "renderContent", "formProps", "title", "hideForm", "LegacyLink", "ActiveLink", "email", "setEmail", "remember", "setRemember", "renderLink", "link", "renderProviders", "provider", "content", "RegisterPage", "loginLink", "register", "ForgotPasswordPage", "forgotPassword", "UpdatePasswordPage", "updatePassword", "newPassword", "setNewPassword", "confirmPassword", "setConfirmPassword", "AuthPage", "ReadyPage", "cards", "WelcomePage", "isTablet", "isMobile", "getGridTemplateColumns", "getHeaderFontSize", "getSubHeaderFontSize", "card", "Card", "description", "iconUrl", "isHover", "setIsHover", "REFINE_VERSION", "useTelemetryData", "auth", "routerContext", "dataContext", "notificationContext", "accessControlContext", "refineOptions", "auditLog", "live", "i18n", "accessControl", "projectId", "encode", "payload", "stringifiedPayload", "throughImage", "src", "img", "throughFetch", "transport", "Telemetry", "sent", "encoded", "checkRouterPropMisuse", "otherProps", "useRouterMisuseWarning", "warned", "Refine", "legacyRouterProvider", "routerProvider", "notificationProvider", "accessControlProvider", "auditLogProvider", "QueryClient", "useQuerySubscription", "notificationProviderContextValues", "RouterComponent", "QueryClientProvider", "RouteChangeHandler", "timeoutId", "setTimeoutId", "cancelNotification", "newTimeoutId", "LayoutWrapper", "LayoutFromProps", "SiderFromProps", "HeaderFromProps", "TitleFromProps", "FooterFromProps", "OffLayoutAreaFromProps", "UnsavedPrompt", "warnWhenListener", "Authenticated", "redirectOnFail", "appendCurrentPathToQuery", "fallbackContent", "loadingContent", "activeAuthProvider", "hasAuthProvider", "isLegacyAuth", "isLegacyRouter", "legacyLocation", "isFetching", "isSuccess", "isAuthenticatedStatus", "authenticatedRedirect", "isAuthenticated", "appliedRedirect", "toQuery", "RedirectLegacy", "Redirect", "location", "CanAccess", "actionFromProp", "paramsFromProp", "onUnauthorized", "CSSRules", "GitHubBanner", "styleTag", "rule", "GlowSmall", "GlowBig", "Text", "style", "AutoSaveIndicator", "status", "Message", "loading", "idle"]
}
