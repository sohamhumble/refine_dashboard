{"version":3,"sources":["../src/index.tsx","../src/hooks/form/useForm.ts","../src/hooks/form/useModalForm/useModalForm.ts","../src/hooks/modal/useModal/index.tsx","../src/hooks/form/useDrawerForm/useDrawerForm.ts","../src/hooks/form/useStepsForm/useStepsForm.ts","../src/hooks/table/useTable/useTable.ts","../src/definitions/table/index.ts","../src/hooks/table/useTable/paginationLink.tsx","../src/hooks/table/useEditableTable/useEditableTable.ts","../src/hooks/fields/useSelect/index.ts","../src/hooks/fields/useCheckboxGroup/index.ts","../src/hooks/fields/useRadioGroup/index.ts","../src/hooks/import/index.tsx","../src/hooks/list/useSimpleList/useSimpleList.ts","../src/hooks/useFileUploadState/index.ts","../src/hooks/useSiderVisible/index.ts","../src/contexts/themedLayoutContext/index.tsx","../src/hooks/useThemedLayoutContext/index.ts","../src/providers/notificationProvider/index.tsx","../src/components/undoableNotification/index.tsx","../src/components/layout/index.tsx","../src/components/layout/sider/index.tsx","../src/components/layout/sider/styles.ts","../src/components/layout/header/index.tsx","../src/components/layout/title/index.tsx","../src/components/themedLayout/index.tsx","../src/components/themedLayout/sider/index.tsx","../src/components/themedLayout/sider/styles.ts","../src/components/themedLayout/header/index.tsx","../src/components/themedLayout/title/index.tsx","../src/components/themedLayoutV2/index.tsx","../src/components/themedLayoutV2/sider/index.tsx","../src/components/themedLayoutV2/sider/styles.ts","../src/components/themedLayoutV2/header/index.tsx","../src/components/themedLayoutV2/title/index.tsx","../src/components/buttons/create/index.tsx","../src/components/buttons/edit/index.tsx","../src/components/buttons/delete/index.tsx","../src/components/buttons/refresh/index.tsx","../src/components/buttons/show/index.tsx","../src/components/buttons/list/index.tsx","../src/components/buttons/export/index.tsx","../src/components/buttons/save/index.tsx","../src/components/buttons/clone/index.tsx","../src/components/buttons/import/index.tsx","../src/components/crud/list/index.tsx","../src/components/crud/create/index.tsx","../src/components/crud/edit/index.tsx","../src/components/crud/show/index.tsx","../src/components/fields/text/index.tsx","../src/components/fields/tag/index.tsx","../src/components/fields/email/index.tsx","../src/components/fields/image/index.tsx","../src/components/fields/boolean/index.tsx","../src/components/fields/date/index.tsx","../src/components/fields/file/index.tsx","../src/components/fields/url/index.tsx","../src/components/fields/number/index.tsx","../src/components/fields/markdown/index.tsx","../src/components/table/components/filterDropdown/index.tsx","../src/components/pages/error/index.tsx","../src/components/pages/login/index.tsx","../src/components/pages/login/styles.ts","../src/components/pages/ready/index.tsx","../src/components/pages/welcome/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/styles.ts","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/breadcrumb/index.tsx","../src/components/pageHeader/index.tsx","../src/components/autoSaveIndicator/index.tsx","../src/definitions/upload/index.ts","../src/definitions/themes/index.ts"],"sourcesContent":["export * from \"./hooks\";\nexport * from \"./providers\";\nexport * from \"./components\";\nexport * from \"./contexts\";\n\nexport {\n    getDefaultSortOrder,\n    getDefaultFilter,\n    mapAntdSorterToCrudSorting,\n    mapAntdFilterToCrudFilter,\n} from \"./definitions/table\";\nexport { getValueFromEvent } from \"./definitions/upload\";\n\nexport * from \"./definitions/themes\";\n","import React from \"react\";\nimport { FormInstance, FormProps, Form, ButtonProps } from \"antd\";\nimport { useForm as useFormSF } from \"sunflower-antd\";\nimport {\n    AutoSaveProps,\n    flattenObjectKeys,\n    propertyPathToArray,\n} from \"@refinedev/core\";\n\nimport {\n    HttpError,\n    BaseRecord,\n    useForm as useFormCore,\n    UseFormReturnType as UseFormReturnTypeCore,\n    useWarnAboutChange,\n    UseFormProps as UseFormPropsCore,\n    CreateResponse,\n    UpdateResponse,\n    pickNotDeprecated,\n    useTranslate,\n    useRefineContext,\n} from \"@refinedev/core\";\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    submitOnEnter?: boolean;\n    /**\n     * Shows notification when unsaved changes exist\n     */\n    warnWhenUnsavedChanges?: boolean;\n    /**\n     * Disables server-side validation\n     * @default false\n     * @see {@link https://refine.dev/docs/advanced-tutorials/forms/server-side-form-validation/}\n     */\n    disableServerSideValidation?: boolean;\n} & AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnTypeCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    form: FormInstance<TVariables>;\n    formProps: FormProps<TVariables>;\n    saveButtonProps: ButtonProps & {\n        onClick: () => void;\n    };\n    onFinish: (\n        values?: TVariables,\n    ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n};\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n *\n */\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    action,\n    resource,\n    onMutationSuccess: onMutationSuccessProp,\n    onMutationError: onMutationErrorProp,\n    autoSave,\n    submitOnEnter = false,\n    warnWhenUnsavedChanges: warnWhenUnsavedChangesProp,\n    redirect,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    queryMeta,\n    mutationMeta,\n    liveMode,\n    liveParams,\n    mutationMode,\n    dataProviderName,\n    onLiveEvent,\n    invalidates,\n    undoableTimeout,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    id: idFromProps,\n    overtimeOptions,\n    optimisticUpdateMap,\n    disableServerSideValidation: disableServerSideValidationProp = false,\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const { options } = useRefineContext();\n    const disableServerSideValidation =\n        options?.disableServerSideValidation || disableServerSideValidationProp;\n\n    const translate = useTranslate();\n\n    const [formAnt] = Form.useForm();\n    const formSF = useFormSF<TResponse, TVariables>({\n        form: formAnt,\n    });\n    const { form } = formSF;\n\n    const useFormCoreResult = useFormCore<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        onMutationSuccess: onMutationSuccessProp\n            ? onMutationSuccessProp\n            : undefined,\n        onMutationError: async (error, _variables, _context) => {\n            if (disableServerSideValidation) {\n                onMutationErrorProp?.(error, _variables, _context);\n                return;\n            }\n\n            // antd form expects error object to be in a specific format.\n            let parsedErrors: {\n                name: string | number | (string | number)[];\n                errors?: string[] | undefined;\n            }[] = [];\n\n            // reset antd errors before setting new errors\n            const fieldsValue = form.getFieldsValue() as unknown as object;\n\n            const fields = Object.keys(flattenObjectKeys(fieldsValue));\n\n            parsedErrors = fields.map((field) => {\n                return {\n                    name: propertyPathToArray(field),\n                    errors: undefined,\n                };\n            });\n\n            form.setFields(parsedErrors);\n\n            const errors = error?.errors;\n            // parse errors to antd form errors\n            for (const key in errors) {\n                const fieldError = errors[key];\n\n                let newError: string[] = [];\n\n                if (Array.isArray(fieldError)) {\n                    newError = fieldError;\n                }\n\n                if (typeof fieldError === \"string\") {\n                    newError = [fieldError];\n                }\n\n                if (typeof fieldError === \"boolean\" && fieldError) {\n                    newError = [\"Field is not valid.\"];\n                }\n\n                if (typeof fieldError === \"object\" && \"key\" in fieldError) {\n                    const translatedMessage = translate(\n                        fieldError.key,\n                        fieldError.message,\n                    );\n\n                    newError = [translatedMessage];\n                }\n\n                parsedErrors.push({\n                    name: propertyPathToArray(key),\n                    errors: newError,\n                });\n            }\n\n            form.setFields([...parsedErrors]);\n\n            onMutationErrorProp?.(error, _variables, _context);\n        },\n        redirect,\n        action,\n        resource,\n        successNotification,\n        errorNotification,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        queryMeta,\n        mutationMeta,\n        liveMode,\n        liveParams,\n        mutationMode,\n        dataProviderName,\n        onLiveEvent,\n        invalidates,\n        undoableTimeout,\n        queryOptions,\n        createMutationOptions,\n        updateMutationOptions,\n        id: idFromProps,\n        overtimeOptions,\n        optimisticUpdateMap,\n        autoSave,\n    });\n\n    const { formLoading, onFinish, queryResult, id, onFinishAutoSave } =\n        useFormCoreResult;\n\n    const {\n        warnWhenUnsavedChanges: warnWhenUnsavedChangesRefine,\n        setWarnWhen,\n    } = useWarnAboutChange();\n    const warnWhenUnsavedChanges =\n        warnWhenUnsavedChangesProp ?? warnWhenUnsavedChangesRefine;\n\n    React.useEffect(() => {\n        form.resetFields();\n    }, [queryResult?.data?.data, id]);\n\n    const onKeyUp = (event: React.KeyboardEvent<HTMLFormElement>) => {\n        if (submitOnEnter && event.key === \"Enter\") {\n            form.submit();\n        }\n    };\n\n    const onValuesChange = (changeValues: object, allValues: any) => {\n        if (changeValues && warnWhenUnsavedChanges) {\n            setWarnWhen(true);\n        }\n\n        if (autoSave?.enabled) {\n            setWarnWhen(false);\n\n            const onFinishFromProps =\n                autoSave?.onFinish ?? ((values) => values);\n\n            return onFinishAutoSave(onFinishFromProps(allValues));\n        }\n\n        return changeValues;\n    };\n\n    const saveButtonProps = {\n        disabled: formLoading,\n        onClick: () => {\n            form.submit();\n        },\n    };\n\n    return {\n        form: formSF.form,\n        formProps: {\n            ...formSF.formProps,\n            onFinish: (values: TVariables) =>\n                onFinish(values).catch((error) => error),\n            onKeyUp,\n            onValuesChange,\n            initialValues: queryResult?.data?.data,\n        },\n        saveButtonProps,\n        ...useFormCoreResult,\n        onFinish: async (values?: TVariables) => {\n            return await onFinish(values ?? formSF.form.getFieldsValue(true));\n        },\n    };\n};\n","import React, { useCallback } from \"react\";\nimport { FormInstance, FormProps, ModalProps } from \"antd\";\n\nimport {\n    useTranslate,\n    useWarnAboutChange,\n    HttpError,\n    UseFormProps as UseFormPropsCore,\n    BaseRecord,\n    LiveModeProps,\n    BaseKey,\n    useUserFriendlyName,\n    useResource,\n    FormWithSyncWithLocationParams,\n    useParsed,\n    useGo,\n    useInvalidate,\n} from \"@refinedev/core\";\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\nimport { useModal } from \"@hooks/modal\";\n\nexport type useModalFormFromSFReturnType<TResponse, TVariables> = {\n    open: boolean;\n    form: FormInstance<TVariables>;\n    show: (id?: BaseKey) => void;\n    close: () => void;\n    modalProps: ModalProps;\n    formProps: FormProps<TVariables>;\n    formLoading: boolean;\n    defaultFormValuesLoading: boolean;\n    formValues: {};\n    initialValues: {};\n    formResult: undefined;\n    submit: (values?: TVariables) => Promise<TResponse>;\n    /** @deprecated Please use `open` instead. */\n    visible: boolean;\n};\n\ntype useModalFormConfig = {\n    action: \"show\" | \"edit\" | \"create\" | \"clone\";\n};\n\nexport type UseModalFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = Omit<\n    UseFormReturnType<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >,\n    \"saveButtonProps\" | \"deleteButtonProps\"\n> &\n    useModalFormFromSFReturnType<TResponse, TVariables>;\n\nexport type UseModalFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > &\n    useModalFormConfig &\n    LiveModeProps &\n    FormWithSyncWithLocationParams & {\n        defaultVisible?: boolean;\n        autoSubmitClose?: boolean;\n        autoResetForm?: boolean;\n    };\n/**\n * `useModalForm` hook allows you to manage a form within a modal. It returns Ant Design {@link https://ant.design/components/form/ Form} and {@link https://ant.design/components/modal/ Modal} components props.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useModalForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\nexport const useModalForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    syncWithLocation,\n    defaultVisible = false,\n    autoSubmitClose = true,\n    autoResetForm = true,\n    autoSave,\n    invalidates,\n    ...rest\n}: UseModalFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n>): UseModalFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const [initiallySynced, setInitiallySynced] = React.useState(false);\n    const invalidate = useInvalidate();\n\n    const {\n        resource,\n        action: actionFromParams,\n        identifier,\n    } = useResource(rest.resource);\n\n    const parsed = useParsed();\n    const go = useGo();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const action = rest.action ?? actionFromParams ?? \"\";\n\n    const syncingId = !(\n        typeof syncWithLocation === \"object\" &&\n        syncWithLocation?.syncId === false\n    );\n\n    const syncWithLocationKey =\n        typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n            ? syncWithLocation.key\n            : resource && action && syncWithLocation\n            ? `modal-${identifier}-${action}`\n            : undefined;\n\n    const useFormProps = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        meta: {\n            ...(syncWithLocationKey\n                ? { [syncWithLocationKey]: undefined }\n                : {}),\n            ...rest.meta,\n        },\n        autoSave,\n        invalidates,\n        ...rest,\n    });\n\n    const { form, formProps, id, setId, formLoading, onFinish, autoSaveProps } =\n        useFormProps;\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const { show, close, modalProps } = useModal({\n        modalProps: {\n            open: defaultVisible,\n        },\n    });\n\n    const visible = modalProps.open || false;\n    const sunflowerUseModal: useModalFormFromSFReturnType<\n        TResponse,\n        TVariables\n    > = {\n        modalProps,\n        form,\n        formLoading,\n        formProps,\n        formResult: undefined,\n        formValues: form.getFieldsValue,\n        defaultFormValuesLoading: false,\n        initialValues: {},\n        submit: onFinish as any,\n        close,\n        open: modalProps.open || false,\n        show,\n        visible,\n    };\n\n    React.useEffect(() => {\n        if (initiallySynced === false && syncWithLocationKey) {\n            const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n\n            if (typeof openStatus === \"boolean\") {\n                if (openStatus) {\n                    show();\n                }\n            } else if (typeof openStatus === \"string\") {\n                if (openStatus === \"true\") {\n                    show();\n                }\n            }\n\n            if (syncingId) {\n                const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n                if (idFromParams) {\n                    setId?.(idFromParams);\n                }\n            }\n\n            setInitiallySynced(true);\n        }\n    }, [syncWithLocationKey, parsed, syncingId, setId]);\n\n    React.useEffect(() => {\n        if (initiallySynced === true) {\n            if (visible && syncWithLocationKey) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: {\n                            ...parsed?.params?.[syncWithLocationKey],\n                            open: true,\n                            ...(syncingId && id && { id }),\n                        },\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            } else if (syncWithLocationKey && !visible) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: undefined,\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            }\n        }\n    }, [id, visible, show, syncWithLocationKey, syncingId]);\n\n    const saveButtonPropsSF = {\n        disabled: formLoading,\n        loading: formLoading,\n        onClick: () => {\n            form.submit();\n        },\n    };\n\n    const handleClose = useCallback(() => {\n        if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n            invalidate({\n                id,\n                invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                dataProviderName: rest.dataProviderName,\n                resource: identifier,\n            });\n        }\n\n        if (warnWhen) {\n            const warnWhenConfirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (warnWhenConfirm) {\n                setWarnWhen(false);\n            } else {\n                return;\n            }\n        }\n\n        setId?.(undefined);\n        sunflowerUseModal.close();\n    }, [warnWhen, autoSaveProps.status]);\n\n    const handleShow = useCallback(\n        (showId?: BaseKey) => {\n            if (typeof showId !== \"undefined\") {\n                setId?.(showId);\n            }\n            const needsIdToOpen = action === \"edit\" || action === \"clone\";\n            const hasId =\n                typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n            if (needsIdToOpen ? hasId : true) {\n                sunflowerUseModal.show();\n            }\n        },\n        [id],\n    );\n\n    const { visible: _visible, ...otherModalProps } = modalProps;\n    const newModalProps = { open: _visible, ...otherModalProps };\n\n    return {\n        ...useFormProps,\n        ...sunflowerUseModal,\n        show: handleShow,\n        close: handleClose,\n        open: visible,\n        formProps: {\n            ...formProps,\n            ...useFormProps.formProps,\n            onValuesChange: formProps?.onValuesChange,\n            onKeyUp: formProps?.onKeyUp,\n            onFinish: async (values) => {\n                await onFinish(values);\n\n                if (autoSubmitClose) {\n                    close();\n                }\n\n                if (autoResetForm) {\n                    form.resetFields();\n                }\n            },\n        },\n        modalProps: {\n            ...newModalProps,\n            width: \"1000px\",\n            okButtonProps: saveButtonPropsSF,\n            title: translate(\n                `${identifier}.titles.${rest.action}`,\n                `${getUserFriendlyName(\n                    `${rest.action} ${\n                        resource?.meta?.label ??\n                        resource?.options?.label ??\n                        resource?.label ??\n                        identifier\n                    }`,\n                    \"singular\",\n                )}`,\n            ),\n            okText: translate(\"buttons.save\", \"Save\"),\n            cancelText: translate(\"buttons.cancel\", \"Cancel\"),\n            onCancel: handleClose,\n            forceRender: true,\n        },\n        formLoading,\n    };\n};\n","import { ModalProps } from \"antd\";\nimport {\n    useModal as useCoreModal,\n    useModalReturnType as useCoreModelReturnType,\n} from \"@refinedev/core\";\n\nexport type useModalReturnType = {\n    modalProps: ModalProps;\n} & Omit<useCoreModelReturnType, \"visible\">;\n\nexport type useModalProps = {\n    /**\n     * Default props for Ant Design {@link https://ant.design/components/modal/ `<Modal>`} component.\n     */\n    modalProps?: ModalProps;\n};\n\n/**\n * By using `useModal` you get props for your records from API in accordance with Ant Design {@link https://ant.design/components/modal/ `<Modal>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/ui/useModal} for more details.\n */\nexport const useModal = ({\n    modalProps = {},\n}: useModalProps = {}): useModalReturnType => {\n    const { show, close, visible } = useCoreModal({\n        defaultVisible: modalProps.open,\n    });\n\n    return {\n        modalProps: {\n            ...modalProps,\n            onCancel: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                modalProps.onCancel?.(e);\n                close();\n            },\n            open: visible,\n            visible,\n        },\n        show,\n        close,\n    };\n};\n","import React, { useCallback } from \"react\";\nimport { UseFormConfig } from \"sunflower-antd\";\nimport { FormInstance, FormProps, DrawerProps, ButtonProps } from \"antd\";\nimport {\n    useTranslate,\n    useWarnAboutChange,\n    UseFormProps as UseFormPropsCore,\n    HttpError,\n    LiveModeProps,\n    BaseRecord,\n    FormWithSyncWithLocationParams,\n    BaseKey,\n    useResource,\n    useParsed,\n    useGo,\n    useModal,\n    useInvalidate,\n} from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\nimport { DeleteButtonProps } from \"../../../components\";\n\nexport interface UseDrawerFormConfig extends UseFormConfig {\n    action: \"show\" | \"edit\" | \"create\" | \"clone\";\n}\n\nexport type UseDrawerFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > &\n    UseDrawerFormConfig &\n    LiveModeProps &\n    FormWithSyncWithLocationParams & {\n        defaultVisible?: boolean;\n        autoSubmitClose?: boolean;\n        autoResetForm?: boolean;\n    };\n\nexport type UseDrawerFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    formProps: FormProps<TVariables> & {\n        form: FormInstance<TVariables>;\n    };\n    show: (id?: BaseKey) => void;\n    close: () => void;\n    drawerProps: DrawerProps;\n    saveButtonProps: ButtonProps;\n    deleteButtonProps: DeleteButtonProps;\n    formLoading: boolean;\n};\n\n/**\n * `useDrawerForm` hook allows you to manage a form within a drawer. It returns Ant Design {@link https://ant.design/components/form/ Form} and {@link https://ant.design/components/drawer/ Drawer} components props.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useDrawerForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\n\nexport const useDrawerForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    syncWithLocation,\n    defaultVisible = false,\n    autoSubmitClose = true,\n    autoResetForm = true,\n    autoSave,\n    invalidates,\n    ...rest\n}: UseDrawerFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n>): UseDrawerFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const [initiallySynced, setInitiallySynced] = React.useState(false);\n\n    const { visible, show, close } = useModal({\n        defaultVisible,\n    });\n\n    const {\n        resource,\n        action: actionFromParams,\n        identifier,\n    } = useResource(rest.resource);\n\n    const parsed = useParsed();\n    const go = useGo();\n\n    const action = rest.action ?? actionFromParams ?? \"\";\n\n    const syncingId = !(\n        typeof syncWithLocation === \"object\" &&\n        syncWithLocation?.syncId === false\n    );\n\n    const syncWithLocationKey =\n        typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n            ? syncWithLocation.key\n            : resource && action && syncWithLocation\n            ? `drawer-${resource?.identifier ?? resource?.name}-${action}`\n            : undefined;\n\n    const useFormProps = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        meta: {\n            ...(syncWithLocationKey\n                ? { [syncWithLocationKey]: undefined }\n                : {}),\n            ...rest.meta,\n        },\n        autoSave,\n        invalidates,\n        ...rest,\n    });\n\n    const { form, formProps, formLoading, id, setId, onFinish, autoSaveProps } =\n        useFormProps;\n\n    React.useEffect(() => {\n        if (initiallySynced === false && syncWithLocationKey) {\n            const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n            if (typeof openStatus === \"boolean\") {\n                openStatus ? show() : close();\n            } else if (typeof openStatus === \"string\") {\n                if (openStatus === \"true\") {\n                    show();\n                }\n            }\n\n            if (syncingId) {\n                const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n                if (idFromParams) {\n                    setId?.(idFromParams);\n                }\n            }\n\n            setInitiallySynced(true);\n        }\n    }, [syncWithLocationKey, parsed, syncingId, setId, initiallySynced]);\n\n    React.useEffect(() => {\n        if (initiallySynced === true) {\n            if (visible && syncWithLocationKey) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: {\n                            ...parsed?.params?.[syncWithLocationKey],\n                            open: true,\n                            ...(syncingId && id && { id }),\n                        },\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            } else if (syncWithLocationKey && !visible) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: undefined,\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            }\n        }\n    }, [\n        id,\n        visible,\n        show,\n        close,\n        syncWithLocationKey,\n        syncingId,\n        initiallySynced,\n    ]);\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const saveButtonProps = {\n        disabled: formLoading,\n        onClick: () => {\n            form.submit();\n        },\n        loading: formLoading,\n    };\n\n    const deleteButtonProps = {\n        recordItemId: id,\n        onSuccess: () => {\n            setId?.(undefined);\n            close();\n        },\n    };\n\n    const handleClose = useCallback(() => {\n        if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n            invalidate({\n                id,\n                invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                dataProviderName: rest.dataProviderName,\n                resource: identifier,\n            });\n        }\n\n        if (warnWhen) {\n            const warnWhenConfirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (warnWhenConfirm) {\n                setWarnWhen(false);\n            } else {\n                return;\n            }\n        }\n\n        close();\n        setId?.(undefined);\n    }, [warnWhen]);\n\n    const handleShow = useCallback(\n        (showId?: BaseKey) => {\n            if (typeof showId !== \"undefined\") {\n                setId?.(showId);\n            }\n            const needsIdToOpen = action === \"edit\" || action === \"clone\";\n            const hasId =\n                typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n            if (needsIdToOpen ? hasId : true) {\n                show();\n            }\n        },\n        [id],\n    );\n\n    return {\n        ...useFormProps,\n        show: handleShow,\n        close: handleClose,\n        formProps: {\n            form,\n            ...useFormProps.formProps,\n            onValuesChange: formProps?.onValuesChange,\n            onKeyUp: formProps?.onKeyUp,\n            onFinish: async (values) => {\n                await onFinish(values);\n\n                if (autoSubmitClose) {\n                    close();\n                }\n\n                if (autoResetForm) {\n                    form.resetFields();\n                }\n            },\n        },\n        drawerProps: {\n            width: \"500px\",\n            onClose: handleClose,\n            open: visible,\n            forceRender: true,\n        },\n        saveButtonProps,\n        deleteButtonProps,\n        formLoading,\n    };\n};\n","import {\n    useStepsForm as useStepsFormSF,\n    UseStepsFormConfig,\n} from \"sunflower-antd\";\nimport { FormInstance, FormProps } from \"antd\";\n\nimport {\n    HttpError,\n    UseFormProps as UseFormPropsCore,\n    BaseRecord,\n} from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\n\nexport type UseStepsFormFromSFReturnType<TResponse, TVariables> = {\n    current: number;\n    gotoStep: (step: number) => Promise<TVariables> | true;\n    stepsProps: {\n        current: number;\n        onChange: (currentStep: number) => void;\n    };\n    formProps: FormProps<TVariables>;\n    formLoading: boolean;\n    defaultFormValuesLoading: boolean;\n    formValues: {};\n    initialValues: {};\n    formResult: undefined;\n    form: FormInstance<TVariables>;\n    submit: (values?: TVariables) => Promise<TResponse>;\n};\n\nexport type UseStepsFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseStepsFormFromSFReturnType<TResponse, TVariables>;\n\nexport type UseStepsFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > &\n    UseStepsFormConfig;\n\n/**\n * `useStepsForm` hook allows you to split your form under an Ant Design based {@link https://ant.design/components/steps/ Steps} component and provides you with a few useful functionalities that will help you manage your form.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useStepsForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\nexport const useStepsForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>(\n    props: UseStepsFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > = {},\n): UseStepsFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const useFormProps = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        ...props,\n    });\n    const { form, formProps } = useFormProps;\n\n    const stepsPropsSunflower = useStepsFormSF<TResponse, TVariables>({\n        isBackValidate: false,\n        form: form,\n        submit: (values: any) => {\n            formProps?.onFinish?.(values);\n        },\n        ...props,\n    });\n\n    return {\n        ...useFormProps,\n        ...stepsPropsSunflower,\n        formLoading: useFormProps.formLoading,\n        formProps: {\n            ...stepsPropsSunflower.formProps,\n            ...useFormProps.formProps,\n            onValuesChange: formProps?.onValuesChange,\n            onKeyUp: formProps?.onKeyUp,\n        },\n        saveButtonProps: {\n            ...useFormProps.saveButtonProps,\n            onClick: () => stepsPropsSunflower.submit(),\n        },\n    };\n};\n","import React, { Children, createElement, Fragment } from \"react\";\nimport { Grid, FormProps, Form, TablePaginationConfig, TableProps } from \"antd\";\nimport { useForm as useFormSF } from \"sunflower-antd\";\n\nimport { SorterResult } from \"antd/lib/table/interface\";\n\nimport {\n    useLiveMode,\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableCoreReturnType,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\n\nimport {\n    mapAntdSorterToCrudSorting,\n    mapAntdFilterToCrudFilter,\n} from \"@definitions/table\";\nimport { PaginationLink } from \"./paginationLink\";\n\nexport type useTableProps<TQueryFnData, TError, TSearchVariables, TData> =\n    useTablePropsCore<TQueryFnData, TError, TData> & {\n        onSearch?: (\n            data: TSearchVariables,\n        ) => CrudFilters | Promise<CrudFilters>;\n    };\n\nexport type useTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableCoreReturnType<TData, TError> & {\n    searchFormProps: FormProps<TSearchVariables>;\n    tableProps: TableProps<TData>;\n};\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/table/useTable/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useTable = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    onSearch,\n    initialCurrent,\n    initialPageSize,\n    hasPagination = true,\n    pagination,\n    initialSorter,\n    permanentSorter,\n    initialFilter,\n    permanentFilter,\n    defaultSetFilterBehavior,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation,\n    resource,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: useTableProps<\n    TQueryFnData,\n    TError,\n    TSearchVariables,\n    TData\n> = {}): useTableReturnType<TData, TError, TSearchVariables> => {\n    const {\n        tableQueryResult,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        filters,\n        setFilters,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        createLinkForSyncWithLocation,\n        pageCount,\n        overtime,\n    } = useTableCore<TQueryFnData, TError, TData>({\n        permanentSorter,\n        permanentFilter,\n        initialCurrent,\n        initialPageSize,\n        pagination,\n        hasPagination,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        initialSorter,\n        initialFilter,\n        syncWithLocation,\n        resource,\n        defaultSetFilterBehavior,\n        successNotification,\n        errorNotification,\n        queryOptions,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n    const breakpoint = Grid.useBreakpoint();\n    const [form] = Form.useForm<TSearchVariables>();\n    const formSF = useFormSF<any, TSearchVariables>({\n        form: form,\n    });\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const preferredInitialFilters = pickNotDeprecated(\n        filtersFromProp?.initial,\n        initialFilter,\n    );\n\n    const { data, isFetched, isLoading } = tableQueryResult;\n\n    const onChange = (\n        paginationState: TablePaginationConfig,\n        tableFilters: Record<\n            string,\n            (string | number | boolean) | (string | number | boolean)[] | null\n        >,\n        sorter: SorterResult<any> | SorterResult<any>[],\n    ) => {\n        if (tableFilters && Object.keys(tableFilters).length > 0) {\n            // Map Antd:Filter -> refine:CrudFilter\n            const crudFilters = mapAntdFilterToCrudFilter(\n                tableFilters,\n                filters,\n                preferredInitialFilters,\n            );\n            setFilters(crudFilters);\n        }\n\n        if (sorter && Object.keys(sorter).length > 0) {\n            // Map Antd:Sorter -> refine:CrudSorting\n            const crudSorting = mapAntdSorterToCrudSorting(sorter);\n            setSorters(crudSorting);\n        }\n\n        if (isPaginationEnabled) {\n            setCurrent?.(paginationState.current || 1);\n            setPageSize?.(paginationState.pageSize || 10);\n        }\n    };\n\n    const onFinish = async (value: TSearchVariables) => {\n        if (onSearch) {\n            const searchFilters = await onSearch(value);\n            setFilters(searchFilters);\n\n            if (isPaginationEnabled) {\n                setCurrent?.(1);\n            }\n        }\n    };\n\n    const antdPagination = (): false | TablePaginationConfig => {\n        if (isPaginationEnabled) {\n            return {\n                itemRender: (page, type, element) => {\n                    const link = createLinkForSyncWithLocation({\n                        pagination: {\n                            pageSize,\n                            current: page,\n                        },\n                        sorters,\n                        filters,\n                    });\n\n                    if (type === \"page\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: `${page}`,\n                        });\n                    }\n                    if (type === \"next\" || type === \"prev\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: element,\n                        });\n                    }\n\n                    if (type === \"jump-next\" || type === \"jump-prev\") {\n                        const elementChildren = (element as React.ReactElement)\n                            ?.props?.children;\n\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element:\n                                Children.count(elementChildren) > 1\n                                    ? createElement(\n                                          Fragment,\n                                          {},\n                                          elementChildren,\n                                      )\n                                    : elementChildren,\n                        });\n                    }\n\n                    return element;\n                },\n                pageSize,\n                current,\n                simple: !breakpoint.sm,\n                position: !breakpoint.sm ? [\"bottomCenter\"] : [\"bottomRight\"],\n                total: data?.total,\n            };\n        }\n\n        return false;\n    };\n\n    return {\n        searchFormProps: {\n            ...formSF.formProps,\n            onFinish,\n        },\n        tableProps: {\n            dataSource: data?.data,\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            onChange,\n            pagination: antdPagination(),\n            scroll: { x: true },\n        },\n        tableQueryResult,\n        sorters,\n        sorter,\n        filters,\n        setSorters,\n        setSorter,\n        setFilters,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        createLinkForSyncWithLocation,\n        overtime,\n    };\n};\n","import {\n    CrudFilters,\n    CrudOperators,\n    CrudSorting,\n    CrudFilter,\n    getDefaultFilter as getDefaultFilterCore,\n    getDefaultSortOrder as getDefaultSortOrderCore,\n    ConditionalFilter,\n    LogicalFilter,\n} from \"@refinedev/core\";\nimport { SortOrder, SorterResult } from \"antd/lib/table/interface\";\n\nexport const getDefaultSortOrder = (\n    columnName: string,\n    sorter?: CrudSorting,\n): SortOrder | undefined => {\n    const sort = getDefaultSortOrderCore(columnName, sorter);\n\n    if (sort) {\n        return `${sort}end`;\n    }\n\n    return undefined;\n};\n\n/**\n * @deprecated getDefaultFilter moved to `@refinedev/core`. Use from `@refinedev/core`\n */\nexport const getDefaultFilter = (\n    columnName: string,\n    filters?: CrudFilters,\n    operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n    return getDefaultFilterCore(columnName, filters, operatorType);\n};\n\nexport const mapAntdSorterToCrudSorting = (\n    sorter: SorterResult<any> | SorterResult<any>[],\n): CrudSorting => {\n    const crudSorting: CrudSorting = [];\n    if (Array.isArray(sorter)) {\n        sorter\n            .sort((a, b) => {\n                return ((a.column?.sorter as { multiple?: number }).multiple ??\n                    0) <\n                    ((b.column?.sorter as { multiple?: number }).multiple ?? 0)\n                    ? -1\n                    : 0;\n            })\n            .map((item) => {\n                if (item.field && item.order) {\n                    const field = Array.isArray(item.field)\n                        ? item.field.join(\".\")\n                        : `${item.field}`;\n\n                    crudSorting.push({\n                        field: `${item.columnKey ?? field}`,\n                        order: item.order.replace(\"end\", \"\") as \"asc\" | \"desc\",\n                    });\n                }\n            });\n    } else {\n        if (sorter.field && sorter.order) {\n            const field = Array.isArray(sorter.field)\n                ? sorter.field.join(\".\")\n                : `${sorter.field}`;\n\n            crudSorting.push({\n                field: `${sorter.columnKey ?? field}`,\n                order: sorter.order.replace(\"end\", \"\") as \"asc\" | \"desc\",\n            });\n        }\n    }\n\n    return crudSorting;\n};\n\nexport const mapAntdFilterToCrudFilter = (\n    tableFilters: Record<\n        string,\n        (string | number | boolean) | (string | number | boolean)[] | null\n    >,\n    prevFilters: CrudFilters,\n    initialFilters?: CrudFilters,\n): CrudFilters => {\n    const crudFilters: CrudFilters = [];\n    const mapInitialFilter: Record<string, CrudFilter> = (\n        initialFilters ?? []\n    ).reduce((acc, item) => {\n        const field =\n            (item as ConditionalFilter).key || (item as LogicalFilter).field;\n        return { ...acc, [field]: item };\n    }, {});\n\n    Object.keys(tableFilters).map((field) => {\n        const value = tableFilters[field];\n        const operator =\n            prevFilters\n                .filter((i) => i.operator !== \"or\")\n                .find((p: any) => p.field === field)?.operator ||\n            mapInitialFilter[field]?.operator;\n\n        if (operator !== \"or\" && operator !== \"and\") {\n            crudFilters.push({\n                field,\n                operator: operator ?? (Array.isArray(value) ? \"in\" : \"eq\"),\n                value,\n            });\n        }\n    });\n\n    return crudFilters;\n};\n","import { useLink, useRouterContext, useRouterType } from \"@refinedev/core\";\nimport React, { ReactNode } from \"react\";\n\ninterface PaginationLinkProps {\n    to: string;\n    element: ReactNode;\n}\n\nexport const PaginationLink = ({ to, element }: PaginationLinkProps) => {\n    const { Link: LegacyLink } = useRouterContext();\n    const routerType = useRouterType();\n    const Link = useLink();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink\n            to={to}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                e.preventDefault();\n            }}\n        >\n            {element}\n        </ActiveLink>\n    );\n};\n","import { useTable } from \"@hooks\";\nimport { BaseKey, BaseRecord, HttpError, UseFormProps } from \"@refinedev/core\";\nimport { ButtonProps } from \"antd\";\n\nimport { useTableProps, useTableReturnType } from \"../useTable\";\nimport { UseFormReturnType, useForm } from \"../../form/useForm\";\n\nexport type useEditableTableReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n> = useTableReturnType<TData, TError, TSearchVariables> &\n    UseFormReturnType<TQueryFnData, TError, TVariables> & {\n        saveButtonProps: ButtonProps & {\n            onClick: () => void;\n        };\n        cancelButtonProps: ButtonProps & {\n            onClick: () => void;\n        };\n        editButtonProps: (id: BaseKey) => ButtonProps & {\n            onClick: () => void;\n        };\n        isEditing: (id: BaseKey) => boolean;\n    };\n\ntype useEditableTableProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n> = Omit<\n    useTableProps<TQueryFnData, TError, TSearchVariables, TData>,\n    \"successNotification\" | \"errorNotification\"\n> &\n    UseFormProps<TQueryFnData, TError, TVariables> & {\n        /**\n         * When true, row will be closed after successful submit.\n         */\n        autoSubmitClose?: boolean;\n    };\n\n/**\n * `useEditeableTable` allows you to implement edit feature on the table with ease,\n * on top of all the features that {@link https://refine.dev/docs/api-reference/core/hooks/useTable/ `useTable`} provides.\n * `useEditableTable` return properties that can be used on Ant Design's {@link https://ant.design/components/table/ `<Table>`}\n * and {@link https://ant.design/components/form/ `<Form>`} components.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/table/useTable/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\nexport const useEditableTable = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    autoSubmitClose = true,\n    ...props\n}: useEditableTableProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TSearchVariables,\n    TData\n> = {}): useEditableTableReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TSearchVariables,\n    TData\n> => {\n    const table = useTable<TQueryFnData, TError, TSearchVariables, TData>({\n        ...props,\n        successNotification: undefined,\n        errorNotification: undefined,\n    });\n    const edit = useForm<TQueryFnData, TError, TVariables>({\n        ...props,\n        action: \"edit\",\n        redirect: false,\n    });\n\n    const { id: editId, setId, saveButtonProps } = edit;\n\n    const cancelButtonProps = {\n        onClick: () => {\n            setId(undefined);\n        },\n    };\n\n    const editButtonProps = (id: BaseKey) => {\n        return {\n            onClick: () => setId(id),\n        };\n    };\n\n    const isEditing = (id: BaseKey) => id === editId;\n\n    return {\n        ...table,\n        ...edit,\n        formProps: {\n            ...edit.formProps,\n            onFinish: async (values) => {\n                const result = await edit.onFinish(values);\n                if (autoSubmitClose) {\n                    setId(undefined);\n                }\n                return result;\n            },\n        },\n        saveButtonProps,\n        cancelButtonProps,\n        editButtonProps,\n        isEditing,\n    };\n};\n","import { SelectProps } from \"antd/lib/select\";\nimport { QueryObserverResult } from \"@tanstack/react-query\";\n\nimport {\n    useSelect as useSelectCore,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    HttpError,\n    UseSelectProps,\n    BaseOption,\n} from \"@refinedev/core\";\n\nexport type UseSelectReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    selectProps: SelectProps<TOption>;\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n};\n\n/**\n * `useSelect` hook allows you to manage an Ant Design {@link https://ant.design/components/select/ Select} component when records in a resource needs to be used as select options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useSelect/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TOption> => {\n    const { queryResult, defaultValueQueryResult, onSearch, options } =\n        useSelectCore<TQueryFnData, TError, TData, TOption>(props);\n\n    return {\n        selectProps: {\n            options,\n            onSearch,\n            loading: defaultValueQueryResult.isFetching,\n            showSearch: true,\n            filterOption: false,\n        },\n        queryResult,\n        defaultValueQueryResult,\n    };\n};\n","import { QueryObserverResult } from \"@tanstack/react-query\";\nimport type { Checkbox } from \"antd\";\n\nimport {\n    BaseRecord,\n    GetListResponse,\n    HttpError,\n    UseSelectProps,\n    useSelect,\n    BaseKey,\n    pickNotDeprecated,\n    BaseOption,\n} from \"@refinedev/core\";\n\nexport type UseCheckboxGroupReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    checkboxGroupProps: Omit<\n        React.ComponentProps<typeof Checkbox.Group>,\n        \"options\"\n    > & {\n        options: TOption[];\n    };\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n};\n\ntype UseCheckboxGroupProps<TQueryFnData, TError, TData> = Omit<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"defaultValue\"\n> & {\n    /**\n     * Sets the default value\n     */\n    defaultValue?: BaseKey[];\n};\n\n/**\n * `useCheckboxGroup` hook allows you to manage an Ant Design {@link https://ant.design/components/checkbox/#components-checkbox-demo-group Checkbox.Group} component when records in a resource needs to be used as checkbox options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useCheckboxGroup/} for more details\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCheckboxGroup = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>({\n    resource,\n    sort,\n    sorters,\n    filters,\n    optionLabel,\n    optionValue,\n    queryOptions,\n    fetchSize,\n    pagination,\n    liveMode,\n    defaultValue,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: UseCheckboxGroupProps<\n    TQueryFnData,\n    TError,\n    TData\n>): UseCheckboxGroupReturnType<TData, TOption> => {\n    const { queryResult, options } = useSelect<\n        TQueryFnData,\n        TError,\n        TData,\n        TOption\n    >({\n        resource,\n        sort,\n        sorters,\n        filters,\n        optionLabel,\n        optionValue,\n        queryOptions,\n        fetchSize,\n        pagination,\n        liveMode,\n        defaultValue,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n    return {\n        checkboxGroupProps: {\n            options,\n            defaultValue,\n        },\n        queryResult,\n    };\n};\n","import { QueryObserverResult } from \"@tanstack/react-query\";\nimport type { Radio } from \"antd\";\n\nimport {\n    BaseKey,\n    BaseOption,\n    BaseRecord,\n    GetListResponse,\n    HttpError,\n    pickNotDeprecated,\n    useSelect,\n    UseSelectProps,\n} from \"@refinedev/core\";\n\nexport type UseRadioGroupReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    radioGroupProps: Omit<\n        React.ComponentProps<typeof Radio.Group>,\n        \"options\"\n    > & {\n        options: TOption[];\n    };\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n};\n\ntype UseRadioGroupProps<TQueryFnData, TError, TData> = Omit<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"defaultValue\"\n> & {\n    /**\n     * Sets the default value\n     */\n    defaultValue?: BaseKey;\n};\n\n/**\n * `useRadioGroup` hook allows you to manage an Ant Design {@link https://ant.design/components/radio/#components-radio-demo-radiogroup-with-name Radio.Group} component when records in a resource needs to be used as radio options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useRadioGroup/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useRadioGroup = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>({\n    resource,\n    sort,\n    sorters,\n    filters,\n    optionLabel,\n    optionValue,\n    queryOptions,\n    fetchSize,\n    pagination,\n    liveMode,\n    defaultValue,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: UseRadioGroupProps<TQueryFnData, TError, TData>): UseRadioGroupReturnType<\n    TData,\n    TOption\n> => {\n    const { queryResult, options } = useSelect<\n        TQueryFnData,\n        TError,\n        TData,\n        TOption\n    >({\n        resource,\n        sort,\n        sorters,\n        filters,\n        optionLabel,\n        optionValue,\n        queryOptions,\n        fetchSize,\n        pagination,\n        liveMode,\n        defaultValue,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n\n    return {\n        radioGroupProps: {\n            options,\n            defaultValue,\n        },\n        queryResult,\n    };\n};\n","import React from \"react\";\nimport { ButtonProps, notification, UploadProps, Progress } from \"antd\";\nimport {\n    useTranslate,\n    useResource,\n    BaseRecord,\n    HttpError,\n    useImport as useImportCore,\n    UseImportReturnType,\n    ImportOptions,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n    TItem = any,\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = any,\n>({\n    resource: resourceFromProp,\n    resourceName,\n    mapData = (item) => item as unknown as TVariables,\n    paparseOptions,\n    batchSize = Number.MAX_SAFE_INTEGER,\n    onFinish,\n    meta,\n    metaData,\n    dataProviderName,\n    onProgress: onProgressFromProp,\n}: ImportOptions<TItem, TVariables, TData> = {}): Omit<\n    UseImportReturnType<TData, TVariables, TError>,\n    \"handleChange\" | \"inputProps\"\n> & {\n    uploadProps: UploadProps;\n    buttonProps: ButtonProps;\n} => {\n    const t = useTranslate();\n\n    const { resource } = useResource(resourceFromProp ?? resourceName);\n\n    const { mutationResult, isLoading, handleChange } = useImportCore<\n        TItem,\n        TData,\n        TError,\n        TVariables\n    >({\n        resource: resource?.identifier ?? resource?.name,\n        mapData,\n        paparseOptions,\n        batchSize,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n        onFinish,\n        onProgress:\n            onProgressFromProp ??\n            (({ totalAmount, processedAmount }) => {\n                if (totalAmount > 0 && processedAmount > 0) {\n                    const description = (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"-7px\",\n                            }}\n                        >\n                            <Progress\n                                type=\"circle\"\n                                percent={Math.floor(\n                                    (processedAmount / totalAmount) * 100,\n                                )}\n                                size={50}\n                                strokeColor=\"#1890ff\"\n                                status=\"normal\"\n                            />\n                            <span style={{ marginLeft: 8, width: \"100%\" }}>\n                                {t(\n                                    \"notifications.importProgress\",\n                                    {\n                                        processed: processedAmount,\n                                        total: totalAmount,\n                                    },\n                                    `Importing: ${processedAmount}/${totalAmount}`,\n                                )}\n                            </span>\n                        </div>\n                    );\n\n                    notification.open({\n                        description,\n                        message: null,\n                        key: `${resource}-import`,\n                        duration: 0,\n                    });\n\n                    if (processedAmount >= totalAmount) {\n                    }\n\n                    if (processedAmount === totalAmount) {\n                        setTimeout(() => {\n                            notification.destroy(`${resource}-import`);\n                        }, 4500);\n                    }\n                }\n            }),\n    });\n\n    return {\n        uploadProps: {\n            onChange: handleChange,\n            beforeUpload: () => false,\n            showUploadList: false,\n            accept: \".csv\",\n        },\n        buttonProps: {\n            type: \"default\",\n            loading: isLoading,\n        },\n        mutationResult,\n        isLoading,\n    };\n};\n","import { Children, createElement, Fragment } from \"react\";\nimport { ListProps, FormProps, Form, Grid } from \"antd\";\n\nimport {\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { useLiveMode } from \"@refinedev/core\";\nimport { PaginationLink } from \"@hooks/table/useTable/paginationLink\";\nimport { PaginationConfig } from \"antd/lib/pagination\";\n\nexport type useSimpleListProps<TQueryFnData, TError, TSearchVariables, TData> =\n    useTablePropsCore<TQueryFnData, TError, TData> & {\n        onSearch?: (\n            data: TSearchVariables,\n        ) => CrudFilters | Promise<CrudFilters>;\n    };\n\nexport type useSimpleListReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n> = Omit<useTableReturnType<TData>, \"tableQueryResult\"> & {\n    listProps: ListProps<TData>;\n    queryResult: useTableReturnType[\"tableQueryResult\"];\n    searchFormProps: FormProps<TSearchVariables>;\n};\n\n/**\n * By using `useSimpleList` you get props for your records from API in accordance with Ant Design {@link https://ant.design/components/list/ `<List>`} component.\n * All features such as pagination, sorting come out of the box.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/list/useSimpleList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Antd form values\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSimpleList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource,\n    initialCurrent,\n    initialPageSize,\n    pagination,\n    hasPagination = true,\n    initialSorter,\n    permanentSorter,\n    initialFilter,\n    permanentFilter,\n    defaultSetFilterBehavior,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    onSearch,\n    queryOptions,\n    syncWithLocation,\n    successNotification,\n    errorNotification,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: useSimpleListProps<\n    TQueryFnData,\n    TError,\n    TSearchVariables,\n    TData\n> = {}): useSimpleListReturnType<TData, TSearchVariables> => {\n    const {\n        sorters,\n        sorter,\n        filters,\n        current,\n        pageSize,\n        pageCount,\n        setFilters,\n        setCurrent,\n        setPageSize,\n        setSorter,\n        setSorters,\n        createLinkForSyncWithLocation,\n        tableQueryResult: queryResult,\n        overtime,\n    } = useTableCore({\n        resource,\n        initialSorter,\n        permanentSorter,\n        initialFilter,\n        permanentFilter,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        defaultSetFilterBehavior,\n        initialCurrent,\n        initialPageSize,\n        queryOptions,\n        successNotification,\n        errorNotification,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        syncWithLocation,\n        dataProviderName,\n        pagination,\n        hasPagination,\n    });\n\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const breakpoint = Grid.useBreakpoint();\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const [form] = Form.useForm<TSearchVariables>();\n\n    const { data, isFetched, isLoading } = queryResult;\n\n    const onChange = (page: number, pageSize?: number): void => {\n        if (isPaginationEnabled) {\n            setCurrent(page);\n            setPageSize(pageSize || 10);\n        }\n    };\n\n    const onFinish = async (values: TSearchVariables) => {\n        if (onSearch) {\n            const searchFilters = await onSearch(values);\n            if (isPaginationEnabled) {\n                setCurrent?.(1);\n            }\n            return setFilters(searchFilters);\n        }\n    };\n\n    const antdPagination = (): false | PaginationConfig => {\n        if (isPaginationEnabled) {\n            return {\n                itemRender: (page, type, element) => {\n                    const link = createLinkForSyncWithLocation({\n                        pagination: {\n                            pageSize,\n                            current: page,\n                        },\n                        sorters,\n                        filters,\n                    });\n\n                    if (type === \"page\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: `${page}`,\n                        });\n                    }\n                    if (type === \"next\" || type === \"prev\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: element,\n                        });\n                    }\n\n                    if (type === \"jump-next\" || type === \"jump-prev\") {\n                        const elementChildren = (element as React.ReactElement)\n                            ?.props?.children;\n\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element:\n                                Children.count(elementChildren) > 1\n                                    ? createElement(\n                                          Fragment,\n                                          {},\n                                          elementChildren,\n                                      )\n                                    : elementChildren,\n                        });\n                    }\n\n                    return element;\n                },\n                pageSize,\n                current,\n                simple: !breakpoint.sm,\n                total: data?.total,\n                onChange,\n            };\n        }\n\n        return false;\n    };\n\n    return {\n        searchFormProps: {\n            form,\n            onFinish,\n        },\n        listProps: {\n            dataSource: data?.data,\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            pagination: antdPagination(),\n        },\n        queryResult,\n        filters,\n        setFilters,\n        sorter,\n        setSorter,\n        sorters,\n        setSorters,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        createLinkForSyncWithLocation,\n        overtime,\n    };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\n\nexport type UseFileUploadStateType = () => {\n    isLoading: boolean;\n    onChange: (info: UploadChangeParam) => void;\n};\n\nexport const useFileUploadState: UseFileUploadStateType = () => {\n    const [isLoading, setIsloading] = useState(false);\n\n    const onChange = useCallback((info: UploadChangeParam) => {\n        const fileListLoadings = mapStatusToLoading(info.fileList);\n\n        if (fileListLoadings.includes(true)) {\n            setIsloading(true);\n        } else {\n            setIsloading(false);\n        }\n    }, []);\n\n    return useMemo(() => ({ isLoading, onChange }), [isLoading]);\n};\n\nconst mapStatusToLoading = (files: UploadChangeParam[\"fileList\"]) => {\n    return files.map((file) => {\n        switch (file.status) {\n            case \"uploading\":\n                return true;\n            default:\n                return false;\n        }\n    });\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: siderCollapsed,\n        setDrawerSiderVisible: setSiderCollapsed,\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\nimport { IThemedLayoutContext } from \"@contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import { NotificationProvider } from \"@refinedev/core\";\nimport { App, notification as staticNotification } from \"antd\";\nimport React from \"react\";\n\nimport { UndoableNotification } from \"@components/undoableNotification\";\n\n/**\n * @deprecated `notificationProvider` is deprecated due to not being compatible with theme changes in Ant Design. Please use `useNotificationProvider` export as your notification provider.\n * @see https://refine.dev/docs/api-reference/antd/theming/#usenotificationprovider-compatible-with-theme\n */\n\nexport const notificationProvider: NotificationProvider = {\n    open: ({\n        key,\n        message,\n        description,\n        type,\n        cancelMutation,\n        undoableTimeout,\n    }) => {\n        if (type === \"progress\") {\n            staticNotification.open({\n                key,\n                description: (\n                    <UndoableNotification\n                        notificationKey={key}\n                        message={message}\n                        cancelMutation={() => {\n                            cancelMutation?.();\n                            staticNotification.destroy(key ?? \"\");\n                        }}\n                        undoableTimeout={undoableTimeout}\n                    />\n                ),\n                message: null,\n                duration: 0,\n                closeIcon: <></>,\n            });\n        } else {\n            staticNotification.open({\n                key,\n                description: message,\n                message: description ?? null,\n                type,\n            });\n        }\n    },\n    close: (key) => staticNotification.destroy(key),\n};\n\nexport const useNotificationProvider = (): NotificationProvider => {\n    const { notification: notificationFromContext } = App.useApp();\n    const notification =\n        \"open\" in notificationFromContext\n            ? notificationFromContext\n            : staticNotification;\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            key,\n            message,\n            description,\n            type,\n            cancelMutation,\n            undoableTimeout,\n        }) => {\n            if (type === \"progress\") {\n                notification.open({\n                    key,\n                    description: (\n                        <UndoableNotification\n                            notificationKey={key}\n                            message={message}\n                            cancelMutation={() => {\n                                cancelMutation?.();\n                                notification.destroy(key ?? \"\");\n                            }}\n                            undoableTimeout={undoableTimeout}\n                        />\n                    ),\n                    message: null,\n                    duration: 0,\n                    closeIcon: <></>,\n                });\n            } else {\n                notification.open({\n                    key,\n                    description: message,\n                    message: description ?? null,\n                    type,\n                });\n            }\n        },\n        close: (key) => notification.destroy(key),\n    };\n\n    return notificationProvider;\n};\n","import React from \"react\";\nimport { Button, Progress } from \"antd\";\nimport { OpenNotificationParams } from \"@refinedev/core\";\nimport { UndoOutlined } from \"@ant-design/icons\";\n\nexport type UndoableNotificationProps = {\n    notificationKey: OpenNotificationParams[\"key\"];\n    message: OpenNotificationParams[\"message\"];\n    cancelMutation: OpenNotificationParams[\"cancelMutation\"];\n    undoableTimeout: OpenNotificationParams[\"undoableTimeout\"];\n};\n\nexport const UndoableNotification: React.FC<UndoableNotificationProps> = ({\n    message,\n    cancelMutation,\n    undoableTimeout,\n}) => (\n    <div\n        style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginTop: \"-7px\",\n        }}\n    >\n        <Progress\n            type=\"circle\"\n            percent={(undoableTimeout ?? 0) * 20}\n            format={(time) => time && time / 20}\n            size={50}\n            strokeColor=\"#1890ff\"\n            status=\"normal\"\n        />\n        <span style={{ marginLeft: 8, width: \"100%\" }}>{message}</span>\n        <Button\n            style={{ flexShrink: 0 }}\n            onClick={cancelMutation}\n            disabled={undoableTimeout === 0}\n            icon={<UndoOutlined />}\n        ></Button>\n    </div>\n);\n","import React from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\nimport { RefineLayoutLayoutProps } from \"./types\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/antd/components/antd-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    children,\n    Header,\n    Sider,\n    Title,\n    Footer,\n    OffLayoutArea,\n}) => {\n    const breakpoint = Grid.useBreakpoint();\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n    const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n    return (\n        <AntdLayout style={{ minHeight: \"100vh\" }}>\n            <SiderToRender Title={Title} />\n            <AntdLayout>\n                <HeaderToRender />\n                <AntdLayout.Content>\n                    <div\n                        style={{\n                            minHeight: 360,\n                            padding: isSmall ? 24 : 12,\n                        }}\n                    >\n                        {children}\n                    </div>\n                    {OffLayoutArea && <OffLayoutArea />}\n                </AntdLayout.Content>\n                {Footer && <Footer />}\n            </AntdLayout>\n        </AntdLayout>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu, Grid, ConfigProvider, Drawer, Button } from \"antd\";\nimport {\n    DashboardOutlined,\n    LogoutOutlined,\n    UnorderedListOutlined,\n    BarsOutlined,\n} from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useLogout,\n    useTitle,\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nconst { SubMenu } = Menu;\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n    const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const isExistAuthentication = useIsExistAuthentication();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const TitleFromContext = useTitle();\n    const translate = useTranslate();\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const breakpoint = Grid.useBreakpoint();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const isMobile =\n        typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                key,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <SubMenu\n                            key={item.key}\n                            icon={icon ?? <UnorderedListOutlined />}\n                            title={label}\n                        >\n                            {renderTreeView(children, selectedKey)}\n                        </SubMenu>\n                    </CanAccess>\n                );\n            }\n            const isSelected = key === selectedKey;\n            const isRoute = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n                    undefined && children.length === 0\n            );\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Menu.Item\n                        key={item.key}\n                        style={{\n                            fontWeight: isSelected ? \"bold\" : \"normal\",\n                        }}\n                        icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n                    >\n                        <Link to={route ?? \"\"}>{label}</Link>\n                        {!collapsed && isSelected && (\n                            <div className=\"ant-menu-tree-arrow\" />\n                        )}\n                    </Menu.Item>\n                </CanAccess>\n            );\n        });\n    };\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Menu.Item\n            key=\"logout\"\n            onClick={handleLogout}\n            icon={<LogoutOutlined />}\n        >\n            {translate(\"buttons.logout\", \"Logout\")}\n        </Menu.Item>\n    );\n\n    const dashboard = hasDashboard ? (\n        <Menu.Item\n            key=\"dashboard\"\n            style={{\n                fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n            }}\n            icon={<DashboardOutlined />}\n        >\n            <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n            {!collapsed && selectedKey === \"/\" && (\n                <div className=\"ant-menu-tree-arrow\" />\n            )}\n        </Menu.Item>\n    ) : null;\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                items,\n                logout,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const renderMenu = () => {\n        return (\n            <>\n                <Menu\n                    theme=\"dark\"\n                    selectedKeys={selectedKey ? [selectedKey] : []}\n                    defaultOpenKeys={defaultOpenKeys}\n                    mode=\"inline\"\n                    onClick={() => {\n                        setDrawerOpen(false);\n                        if (!breakpoint.lg) {\n                            setCollapsed(true);\n                        }\n                    }}\n                >\n                    {renderSider()}\n                </Menu>\n            </>\n        );\n    };\n\n    const renderDrawerSider = () => {\n        return (\n            <>\n                <Drawer\n                    open={drawerOpen}\n                    onClose={() => setDrawerOpen(false)}\n                    placement=\"left\"\n                    closable={false}\n                    width={200}\n                    bodyStyle={{\n                        padding: 0,\n                    }}\n                    maskClosable={true}\n                >\n                    <Layout>\n                        <Layout.Sider\n                            style={{ height: \"100vh\", overflow: \"hidden\" }}\n                        >\n                            <RenderToTitle collapsed={false} />\n                            {renderMenu()}\n                        </Layout.Sider>\n                    </Layout>\n                </Drawer>\n                <Button\n                    style={drawerButtonStyles}\n                    size=\"large\"\n                    onClick={() => setDrawerOpen(true)}\n                    icon={<BarsOutlined />}\n                ></Button>\n            </>\n        );\n    };\n\n    const renderContent = () => {\n        if (isMobile) {\n            return renderDrawerSider();\n        }\n\n        return (\n            <Layout.Sider\n                collapsible\n                collapsed={collapsed}\n                onCollapse={(collapsed: boolean): void =>\n                    setCollapsed(collapsed)\n                }\n                collapsedWidth={80}\n                breakpoint=\"lg\"\n            >\n                <RenderToTitle collapsed={collapsed} />\n                {renderMenu()}\n            </Layout.Sider>\n        );\n    };\n\n    return (\n        <ConfigProvider\n            theme={{\n                components: {\n                    Menu: {\n                        colorItemBg: \"transparent\",\n                        colorItemText: \"#fff\",\n                        colorItemTextSelected: \"#fff\",\n                        colorItemBgSelected: \"transparent\",\n                        colorItemTextHover: \"#fff\",\n                    },\n                },\n            }}\n        >\n            {renderContent()}\n        </ConfigProvider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    position: \"fixed\",\n    top: 64,\n    zIndex: 999,\n};\n","import { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\";\nimport { Avatar, Layout as AntdLayout, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport { RefineLayoutHeaderProps } from \"../types\";\nconst { Text } = Typography;\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <AntdLayout.Header\n            style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                padding: \"0px 24px\",\n                height: \"64px\",\n            }}\n        >\n            <Space style={{ marginLeft: \"8px\" }}>\n                {user?.name && (\n                    <Text style={{ color: \"white\" }} strong>\n                        {user.name}\n                    </Text>\n                )}\n                {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\n            </Space>\n        </AntdLayout.Header>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    TitleProps,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink to=\"/\">\n            {collapsed ? (\n                <div\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        style={{\n                            margin: \"0 auto\",\n                            padding: \"12px 0\",\n                            maxHeight: \"65.5px\",\n                        }}\n                    />\n                </div>\n            ) : (\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                    alt=\"Refine\"\n                    style={{\n                        width: \"200px\",\n                        padding: \"12px 24px\",\n                    }}\n                />\n            )}\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    children,\n    Header,\n    Sider,\n    Title,\n    Footer,\n    OffLayoutArea,\n}) => {\n    const breakpoint = Grid.useBreakpoint();\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n    const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n    return (\n        <AntdLayout style={{ minHeight: \"100vh\" }}>\n            <SiderToRender Title={Title} />\n            <AntdLayout>\n                <HeaderToRender />\n                <AntdLayout.Content>\n                    <div\n                        style={{\n                            minHeight: 360,\n                            padding: isSmall ? 24 : 12,\n                        }}\n                    >\n                        {children}\n                    </div>\n                    {OffLayoutArea && <OffLayoutArea />}\n                </AntdLayout.Content>\n                {Footer && <Footer />}\n            </AntdLayout>\n        </AntdLayout>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\nimport {\n    DashboardOutlined,\n    LogoutOutlined,\n    UnorderedListOutlined,\n    BarsOutlined,\n    LeftOutlined,\n    RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useLogout,\n    useTitle,\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport { RefineThemedLayoutSiderProps } from \"../types\";\nimport { ThemedTitle } from \"@components\";\n\nconst { SubMenu } = Menu;\nconst { useToken } = theme;\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const { token } = useToken();\n\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n    const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const isExistAuthentication = useIsExistAuthentication();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const TitleFromContext = useTitle();\n    const translate = useTranslate();\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const breakpoint = Grid.useBreakpoint();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const isMobile =\n        typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitle;\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                key,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <SubMenu\n                            key={item.key}\n                            icon={icon ?? <UnorderedListOutlined />}\n                            title={label}\n                        >\n                            {renderTreeView(children, selectedKey)}\n                        </SubMenu>\n                    </CanAccess>\n                );\n            }\n            const isSelected = key === selectedKey;\n            const isRoute = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n                    undefined && children.length === 0\n            );\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Menu.Item\n                        key={item.key}\n                        icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n                    >\n                        <Link to={route ?? \"\"}>{label}</Link>\n                        {!collapsed && isSelected && (\n                            <div className=\"ant-menu-tree-arrow\" />\n                        )}\n                    </Menu.Item>\n                </CanAccess>\n            );\n        });\n    };\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Menu.Item\n            key=\"logout\"\n            onClick={() => handleLogout()}\n            icon={<LogoutOutlined />}\n        >\n            {translate(\"buttons.logout\", \"Logout\")}\n        </Menu.Item>\n    );\n\n    const dashboard = hasDashboard ? (\n        <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n            <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n            {!collapsed && selectedKey === \"/\" && (\n                <div className=\"ant-menu-tree-arrow\" />\n            )}\n        </Menu.Item>\n    ) : null;\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                items,\n                logout,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const renderMenu = () => {\n        return (\n            <>\n                <Menu\n                    selectedKeys={selectedKey ? [selectedKey] : []}\n                    defaultOpenKeys={defaultOpenKeys}\n                    mode=\"inline\"\n                    style={{\n                        marginTop: \"8px\",\n                        border: \"none\",\n                    }}\n                    onClick={() => {\n                        setDrawerOpen(false);\n                        if (!breakpoint.lg) {\n                            setCollapsed(true);\n                        }\n                    }}\n                >\n                    {renderSider()}\n                </Menu>\n            </>\n        );\n    };\n\n    const renderDrawerSider = () => {\n        return (\n            <>\n                <Drawer\n                    open={drawerOpen}\n                    onClose={() => setDrawerOpen(false)}\n                    placement=\"left\"\n                    closable={false}\n                    width={200}\n                    bodyStyle={{\n                        padding: 0,\n                    }}\n                    maskClosable={true}\n                >\n                    <Layout>\n                        <Layout.Sider\n                            style={{\n                                height: \"100vh\",\n                                overflow: \"hidden\",\n                                backgroundColor: token.colorBgContainer,\n                                borderRight: `1px solid ${token.colorBgElevated}`,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"200px\",\n                                    padding: \"0 16px\",\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\",\n                                    height: \"64px\",\n                                    backgroundColor: token.colorBgElevated,\n                                }}\n                            >\n                                <RenderToTitle collapsed={false} />\n                            </div>\n                            {renderMenu()}\n                        </Layout.Sider>\n                    </Layout>\n                </Drawer>\n                <Button\n                    style={drawerButtonStyles}\n                    size=\"large\"\n                    onClick={() => setDrawerOpen(true)}\n                    icon={<BarsOutlined />}\n                ></Button>\n            </>\n        );\n    };\n\n    if (isMobile) {\n        return renderDrawerSider();\n    }\n\n    return (\n        <Layout.Sider\n            style={{\n                backgroundColor: token.colorBgContainer,\n                borderRight: `1px solid ${token.colorBgElevated}`,\n            }}\n            collapsible\n            collapsed={collapsed}\n            onCollapse={(collapsed) => setCollapsed(collapsed)}\n            collapsedWidth={80}\n            breakpoint=\"lg\"\n            trigger={\n                <Button\n                    type=\"text\"\n                    style={{\n                        borderRadius: 0,\n                        height: \"100%\",\n                        width: \"100%\",\n                        backgroundColor: token.colorBgElevated,\n                    }}\n                >\n                    {collapsed ? (\n                        <RightOutlined\n                            style={{\n                                color: token.colorPrimary,\n                            }}\n                        />\n                    ) : (\n                        <LeftOutlined\n                            style={{\n                                color: token.colorPrimary,\n                            }}\n                        />\n                    )}\n                </Button>\n            }\n        >\n            <div\n                style={{\n                    width: collapsed ? \"80px\" : \"200px\",\n                    padding: collapsed ? \"0\" : \"0 16px\",\n                    display: \"flex\",\n                    justifyContent: collapsed ? \"center\" : \"flex-start\",\n                    alignItems: \"center\",\n                    height: \"64px\",\n                    backgroundColor: token.colorBgElevated,\n                    fontSize: \"14px\",\n                }}\n            >\n                <RenderToTitle collapsed={collapsed} />\n            </div>\n            {renderMenu()}\n        </Layout.Sider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    position: \"fixed\",\n    top: 64,\n    zIndex: 999,\n};\n","import React from \"react\";\nimport { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\";\nimport { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\";\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\n\nconst { Text } = Typography;\nconst { useToken } = theme;\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = () => {\n    const { token } = useToken();\n\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    if (!shouldRenderHeader) {\n        return null;\n    }\n\n    return (\n        <AntdLayout.Header\n            style={{\n                backgroundColor: token.colorBgElevated,\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                padding: \"0px 24px\",\n                height: \"64px\",\n            }}\n        >\n            <Space>\n                <Space size=\"middle\">\n                    {user?.name && <Text strong>{user.name}</Text>}\n                    {user?.avatar && (\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    )}\n                </Space>\n            </Space>\n        </AntdLayout.Header>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Typography, theme, Space } from \"antd\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst { useToken } = theme;\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const { token } = useToken();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink\n            to=\"/\"\n            style={{\n                display: \"inline-block\",\n                textDecoration: \"none\",\n            }}\n        >\n            <Space\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    fontSize: \"inherit\",\n                    ...wrapperStyles,\n                }}\n            >\n                <div\n                    style={{\n                        height: \"24px\",\n                        width: \"24px\",\n                        color: token.colorPrimary,\n                    }}\n                >\n                    {icon}\n                </div>\n\n                {!collapsed && (\n                    <Typography.Title\n                        style={{\n                            fontSize: \"inherit\",\n                            marginBottom: 0,\n                            fontWeight: 700,\n                        }}\n                    >\n                        {text}\n                    </Typography.Title>\n                )}\n            </Space>\n        </ActiveLink>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutV2Props } from \"./types\";\nimport { ThemedLayoutContextProvider } from \"@contexts\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    children,\n    Header,\n    Sider,\n    Title,\n    Footer,\n    OffLayoutArea,\n    initialSiderCollapsed,\n}) => {\n    const breakpoint = Grid.useBreakpoint();\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n    const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n    const hasSider = !!SiderToRender({ Title });\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <AntdLayout style={{ minHeight: \"100vh\" }} hasSider={hasSider}>\n                <SiderToRender Title={Title} />\n                <AntdLayout>\n                    <HeaderToRender />\n                    <AntdLayout.Content>\n                        <div\n                            style={{\n                                minHeight: 360,\n                                padding: isSmall ? 24 : 12,\n                            }}\n                        >\n                            {children}\n                        </div>\n                        {OffLayoutArea && <OffLayoutArea />}\n                    </AntdLayout.Content>\n                    {Footer && <Footer />}\n                </AntdLayout>\n            </AntdLayout>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React from \"react\";\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\nimport {\n    DashboardOutlined,\n    LogoutOutlined,\n    UnorderedListOutlined,\n    BarsOutlined,\n    LeftOutlined,\n    RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useLogout,\n    useTitle,\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\nimport { ThemedTitleV2 } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst { SubMenu } = Menu;\nconst { useToken } = theme;\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    fixed,\n    activeItemDisabled = false,\n}) => {\n    const { token } = useToken();\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    const isExistAuthentication = useIsExistAuthentication();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const TitleFromContext = useTitle();\n    const translate = useTranslate();\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const breakpoint = Grid.useBreakpoint();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const isMobile =\n        typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitleV2;\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                key,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <SubMenu\n                            key={item.key}\n                            icon={icon ?? <UnorderedListOutlined />}\n                            title={label}\n                        >\n                            {renderTreeView(children, selectedKey)}\n                        </SubMenu>\n                    </CanAccess>\n                );\n            }\n            const isSelected = key === selectedKey;\n            const isRoute = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n                    undefined && children.length === 0\n            );\n\n            const linkStyle: React.CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Menu.Item\n                        key={item.key}\n                        icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n                        style={linkStyle}\n                    >\n                        <Link to={route ?? \"\"} style={linkStyle}>\n                            {label}\n                        </Link>\n                        {!siderCollapsed && isSelected && (\n                            <div className=\"ant-menu-tree-arrow\" />\n                        )}\n                    </Menu.Item>\n                </CanAccess>\n            );\n        });\n    };\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Menu.Item\n            key=\"logout\"\n            onClick={() => handleLogout()}\n            icon={<LogoutOutlined />}\n        >\n            {translate(\"buttons.logout\", \"Logout\")}\n        </Menu.Item>\n    );\n\n    const dashboard = hasDashboard ? (\n        <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n            <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n            {!siderCollapsed && selectedKey === \"/\" && (\n                <div className=\"ant-menu-tree-arrow\" />\n            )}\n        </Menu.Item>\n    ) : null;\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                items,\n                logout,\n                collapsed: siderCollapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const renderMenu = () => {\n        return (\n            <Menu\n                selectedKeys={selectedKey ? [selectedKey] : []}\n                defaultOpenKeys={defaultOpenKeys}\n                mode=\"inline\"\n                style={{\n                    paddingTop: \"8px\",\n                    border: \"none\",\n                    overflow: \"auto\",\n                    height: \"calc(100% - 72px)\",\n                }}\n                onClick={() => {\n                    setMobileSiderOpen(false);\n                }}\n            >\n                {renderSider()}\n            </Menu>\n        );\n    };\n\n    const renderDrawerSider = () => {\n        return (\n            <>\n                <Drawer\n                    open={mobileSiderOpen}\n                    onClose={() => setMobileSiderOpen(false)}\n                    placement=\"left\"\n                    closable={false}\n                    width={200}\n                    bodyStyle={{\n                        padding: 0,\n                    }}\n                    maskClosable={true}\n                >\n                    <Layout>\n                        <Layout.Sider\n                            style={{\n                                height: \"100vh\",\n                                backgroundColor: token.colorBgContainer,\n                                borderRight: `1px solid ${token.colorBgElevated}`,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"200px\",\n                                    padding: \"0 16px\",\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\",\n                                    height: \"64px\",\n                                    backgroundColor: token.colorBgElevated,\n                                }}\n                            >\n                                <RenderToTitle collapsed={false} />\n                            </div>\n                            {renderMenu()}\n                        </Layout.Sider>\n                    </Layout>\n                </Drawer>\n                <Button\n                    style={drawerButtonStyles}\n                    size=\"large\"\n                    onClick={() => setMobileSiderOpen(true)}\n                    icon={<BarsOutlined />}\n                ></Button>\n            </>\n        );\n    };\n\n    if (isMobile) {\n        return renderDrawerSider();\n    }\n\n    const siderStyles: React.CSSProperties = {\n        backgroundColor: token.colorBgContainer,\n        borderRight: `1px solid ${token.colorBgElevated}`,\n    };\n\n    if (fixed) {\n        siderStyles.position = \"fixed\";\n        siderStyles.top = 0;\n        siderStyles.height = \"100vh\";\n        siderStyles.zIndex = 999;\n    }\n\n    return (\n        <>\n            {fixed && (\n                <div\n                    style={{\n                        width: siderCollapsed ? \"80px\" : \"200px\",\n                        transition: \"all 0.2s\",\n                    }}\n                />\n            )}\n            <Layout.Sider\n                style={siderStyles}\n                collapsible\n                collapsed={siderCollapsed}\n                onCollapse={(collapsed, type) => {\n                    if (type === \"clickTrigger\") {\n                        setSiderCollapsed(collapsed);\n                    }\n                }}\n                collapsedWidth={80}\n                breakpoint=\"lg\"\n                trigger={\n                    <Button\n                        type=\"text\"\n                        style={{\n                            borderRadius: 0,\n                            height: \"100%\",\n                            width: \"100%\",\n                            backgroundColor: token.colorBgElevated,\n                        }}\n                    >\n                        {siderCollapsed ? (\n                            <RightOutlined\n                                style={{\n                                    color: token.colorPrimary,\n                                }}\n                            />\n                        ) : (\n                            <LeftOutlined\n                                style={{\n                                    color: token.colorPrimary,\n                                }}\n                            />\n                        )}\n                    </Button>\n                }\n            >\n                <div\n                    style={{\n                        width: siderCollapsed ? \"80px\" : \"200px\",\n                        padding: siderCollapsed ? \"0\" : \"0 16px\",\n                        display: \"flex\",\n                        justifyContent: siderCollapsed\n                            ? \"center\"\n                            : \"flex-start\",\n                        alignItems: \"center\",\n                        height: \"64px\",\n                        backgroundColor: token.colorBgElevated,\n                        fontSize: \"14px\",\n                    }}\n                >\n                    <RenderToTitle collapsed={siderCollapsed} />\n                </div>\n                {renderMenu()}\n            </Layout.Sider>\n        </>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    position: \"fixed\",\n    top: 64,\n    zIndex: 999,\n};\n","import React from \"react\";\nimport { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\";\nimport {\n    pickNotDeprecated,\n    useActiveAuthProvider,\n    useGetIdentity,\n} from \"@refinedev/core\";\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\n\nconst { Text } = Typography;\nconst { useToken } = theme;\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const { token } = useToken();\n\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    if (!shouldRenderHeader) {\n        return null;\n    }\n\n    const headerStyles: React.CSSProperties = {\n        backgroundColor: token.colorBgElevated,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: \"0px 24px\",\n        height: \"64px\",\n    };\n\n    if (pickNotDeprecated(sticky, isSticky)) {\n        headerStyles.position = \"sticky\";\n        headerStyles.top = 0;\n        headerStyles.zIndex = 1;\n    }\n\n    return (\n        <AntdLayout.Header style={headerStyles}>\n            <Space>\n                <Space size=\"middle\">\n                    {user?.name && <Text strong>{user.name}</Text>}\n                    {user?.avatar && (\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    )}\n                </Space>\n            </Space>\n        </AntdLayout.Header>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Typography, theme, Space } from \"antd\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst { useToken } = theme;\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const { token } = useToken();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink\n            to=\"/\"\n            style={{\n                display: \"inline-block\",\n                textDecoration: \"none\",\n            }}\n        >\n            <Space\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    fontSize: \"inherit\",\n                    ...wrapperStyles,\n                }}\n            >\n                <div\n                    style={{\n                        height: \"24px\",\n                        width: \"24px\",\n                        color: token.colorPrimary,\n                    }}\n                >\n                    {icon}\n                </div>\n\n                {!collapsed && (\n                    <Typography.Title\n                        style={{\n                            fontSize: \"inherit\",\n                            marginBottom: 0,\n                            fontWeight: 700,\n                        }}\n                    >\n                        {text}\n                    </Typography.Title>\n                )}\n            </Space>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<PlusSquareOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.CreateButton}\n                className={RefineButtonClassNames.CreateButton}\n                type=\"primary\"\n                {...rest}\n            >\n                {!hideText &&\n                    (children ?? translate(\"buttons.create\", \"Create\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<EditOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.EditButton}\n                className={RefineButtonClassNames.EditButton}\n                {...rest}\n            >\n                {!hideText && (children ?? translate(\"buttons.edit\", \"Edit\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button, Popconfirm } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/button/ `<Popconfirm>`} components.\n * When you try to delete something, a pop-up shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    metaData,\n    meta,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    invalidates,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Popconfirm\n            key=\"delete\"\n            okText={confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n            cancelText={\n                confirmCancelText ?? translate(\"buttons.cancel\", \"Cancel\")\n            }\n            okType=\"danger\"\n            title={\n                confirmTitle ?? translate(\"buttons.confirm\", \"Are you sure?\")\n            }\n            okButtonProps={{ disabled: isLoading }}\n            onConfirm={(): void => {\n                if ((recordItemId ?? id) && identifier) {\n                    setWarnWhen(false);\n                    mutate(\n                        {\n                            id: recordItemId ?? id ?? \"\",\n                            resource: identifier,\n                            mutationMode,\n                            successNotification,\n                            errorNotification,\n                            meta: pickNotDeprecated(meta, metaData),\n                            metaData: pickNotDeprecated(meta, metaData),\n                            dataProviderName,\n                            invalidates,\n                        },\n                        {\n                            onSuccess: (value) => {\n                                onSuccess && onSuccess(value);\n                            },\n                        },\n                    );\n                }\n            }}\n            disabled={\n                typeof rest?.disabled !== \"undefined\"\n                    ? rest.disabled\n                    : data?.can === false\n            }\n        >\n            <Button\n                danger\n                loading={(recordItemId ?? id) === variables?.id && isLoading}\n                icon={<DeleteOutlined />}\n                title={disabledTitle()}\n                disabled={data?.can === false}\n                data-testid={RefineButtonTestIds.DeleteButton}\n                className={RefineButtonClassNames.DeleteButton}\n                {...rest}\n            >\n                {!hideText &&\n                    (children ?? translate(\"buttons.delete\", \"Delete\"))}\n            </Button>\n        </Popconfirm>\n    );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { RedoOutlined } from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    return (\n        <Button\n            onClick={(e) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            icon={<RedoOutlined spin={isInvalidating} />}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            {!hideText && (children ?? translate(\"buttons.refresh\", \"Refresh\"))}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<EyeOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.ShowButton}\n                className={RefineButtonClassNames.ShowButton}\n                {...rest}\n            >\n                {!hideText && (children ?? translate(\"buttons.show\", \"Show\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { BarsOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<BarsOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.ListButton}\n                className={RefineButtonClassNames.ListButton}\n                {...rest}\n            >\n                {!hideText &&\n                    (children ??\n                        translate(\n                            `${\n                                identifier ??\n                                resourceNameFromProps ??\n                                propResourceNameOrRouteName\n                            }.titles.list`,\n                            getUserFriendlyName(\n                                resource?.meta?.label ??\n                                    resource?.label ??\n                                    identifier ??\n                                    pickNotDeprecated(\n                                        resourceNameFromProps,\n                                        propResourceNameOrRouteName,\n                                    ),\n                                \"plural\",\n                            ),\n                        ))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { ExportOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` is an Ant Design {@link https://ant.design/components/button/ `<Button>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Button\n            type=\"default\"\n            icon={<ExportOutlined />}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            {!hideText && (children ?? translate(\"buttons.export\", \"Export\"))}\n        </Button>\n    );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { SaveOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Button\n            type=\"primary\"\n            icon={<SaveOutlined />}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            {!hideText && (children ?? translate(\"buttons.save\", \"Save\"))}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonTestIds,\n    RefineButtonClassNames,\n} from \"@refinedev/ui-types\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/clone-button} for more details.\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    resource: resourceNameFromProps,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<PlusSquareOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.CloneButton}\n                className={RefineButtonClassNames.CloneButton}\n                {...rest}\n            >\n                {!hideText && (children ?? translate(\"buttons.clone\", \"Clone\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Button, Upload } from \"antd\";\nimport { ImportOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport `useImport`} hook and is meant to be used as it's upload button.\n * It uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/upload/ `<Upload>`} components.\n * It wraps a `<Button>` component with an `<Upload>` component and accepts properties for `<Button>` and `<Upload>` components separately.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    uploadProps,\n    buttonProps,\n    hideText = false,\n    children,\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Upload {...uploadProps}>\n            <Button\n                icon={<ImportOutlined />}\n                data-testid={RefineButtonTestIds.ImportButton}\n                className={RefineButtonClassNames.ImportButton}\n                {...buttonProps}\n            >\n                {!hideText &&\n                    (children ?? translate(\"buttons.import\", \"Import\"))}\n            </Button>\n        </Upload>\n    );\n};\n","import React from \"react\";\nimport { Space } from \"antd\";\nimport {\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport {\n    Breadcrumb,\n    CreateButton,\n    CreateButtonProps,\n    PageHeader,\n} from \"@components\";\nimport { ListProps } from \"../types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n    canCreate,\n    title,\n    children,\n    createButtonProps: createButtonPropsFromProps,\n    resource: resourceFromProps,\n    wrapperProps,\n    contentProps,\n    headerProps,\n    breadcrumb: breadcrumbFromProps,\n    headerButtonProps,\n    headerButtons,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? {\n                  size: \"middle\",\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              }\n            : undefined;\n\n    const defaultExtra = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.list`,\n                        getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"plural\",\n                        ),\n                    )\n                }\n                extra={\n                    headerButtons ? (\n                        <Space wrap {...headerButtonProps}>\n                            {typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultExtra,\n                                      createButtonProps,\n                                  })\n                                : headerButtons}\n                        </Space>\n                    ) : (\n                        defaultExtra\n                    )\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                {...(headerProps ?? {})}\n            >\n                <div {...(contentProps ?? {})}>{children}</div>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Card, Space, Spin } from \"antd\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n    useBack,\n} from \"@refinedev/core\";\n\nimport {\n    Breadcrumb,\n    SaveButton,\n    PageHeader,\n    SaveButtonProps,\n} from \"@components\";\nimport { CreateProps } from \"../types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n    title,\n    saveButtonProps: saveButtonPropsFromProps,\n    children,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n        htmlType: \"submit\",\n    };\n\n    const defaultFooterButtons = (\n        <>\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                backIcon={goBackFromProps}\n                onBack={\n                    action !== \"list\" || typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.create`,\n                        `Create ${getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"singular\",\n                        )}`,\n                    )\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                extra={\n                    <Space wrap {...(headerButtonProps ?? {})}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: null,\n                                  })\n                                : headerButtons\n                            : null}\n                    </Space>\n                }\n                {...(headerProps ?? {})}\n            >\n                <Spin spinning={isLoading}>\n                    <Card\n                        bordered={false}\n                        actions={[\n                            <Space\n                                key=\"action-buttons\"\n                                style={{ float: \"right\", marginRight: 24 }}\n                                {...(footerButtonProps ?? {})}\n                            >\n                                {footerButtons\n                                    ? typeof footerButtons === \"function\"\n                                        ? footerButtons({\n                                              defaultButtons:\n                                                  defaultFooterButtons,\n                                              saveButtonProps: saveButtonProps,\n                                          })\n                                        : footerButtons\n                                    : defaultFooterButtons}\n                            </Space>,\n                        ]}\n                        {...(contentProps ?? {})}\n                    >\n                        {children}\n                    </Card>\n                </Spin>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\n\nimport { Card, Space, Spin } from \"antd\";\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n    useGo,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    SaveButton,\n    Breadcrumb,\n    PageHeader,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n    title,\n    saveButtonProps: saveButtonPropsFromProps,\n    mutationMode: mutationModeProp,\n    recordItemId,\n    children,\n    deleteButtonProps: deleteButtonPropsFromProps,\n    canDelete,\n    resource: resourceFromProps,\n    isLoading = false,\n    dataProviderName,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n    autoSaveProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              }\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                backIcon={goBackFromProps}\n                onBack={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.edit`,\n                        `Edit ${getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"singular\",\n                        )}`,\n                    )\n                }\n                extra={\n                    <Space wrap {...(headerButtonProps ?? {})}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Space>\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                {...(headerProps ?? {})}\n            >\n                <Spin spinning={isLoading}>\n                    <Card\n                        bordered={false}\n                        actions={[\n                            <Space\n                                key=\"footer-buttons\"\n                                wrap\n                                style={{\n                                    float: \"right\",\n                                    marginRight: 24,\n                                }}\n                                {...(footerButtonProps ?? {})}\n                            >\n                                {footerButtons\n                                    ? typeof footerButtons === \"function\"\n                                        ? footerButtons({\n                                              defaultButtons:\n                                                  defaultFooterButtons,\n                                              deleteButtonProps,\n                                              saveButtonProps,\n                                          })\n                                        : footerButtons\n                                    : defaultFooterButtons}\n                            </Space>,\n                        ]}\n                        {...(contentProps ?? {})}\n                    >\n                        {children}\n                    </Card>\n                </Spin>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Card, Space, Spin } from \"antd\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useResource,\n    useToPath,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\n\nimport {\n    EditButton,\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    Breadcrumb,\n    PageHeader,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n    title,\n    canEdit,\n    canDelete,\n    isLoading = false,\n    children,\n    resource: resourceFromProps,\n    recordItemId,\n    dataProviderName,\n    breadcrumb: breadcrumbFromProps,\n    contentProps,\n    headerProps,\n    wrapperProps,\n    headerButtons,\n    footerButtons,\n    footerButtonProps,\n    headerButtonProps,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              type: \"primary\",\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {hasList && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && <EditButton {...editButtonProps} />}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                backIcon={goBackFromProps}\n                onBack={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.show`,\n                        `Show ${getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"singular\",\n                        )}`,\n                    )\n                }\n                extra={\n                    <Space\n                        key=\"extra-buttons\"\n                        wrap\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      deleteButtonProps,\n                                      editButtonProps,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Space>\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                {...(headerProps ?? {})}\n            >\n                <Spin spinning={isLoading}>\n                    <Card\n                        bordered={false}\n                        actions={\n                            footerButtons\n                                ? [\n                                      <Space\n                                          key=\"footer-buttons\"\n                                          wrap\n                                          {...footerButtonProps}\n                                      >\n                                          {typeof footerButtons === \"function\"\n                                              ? footerButtons({\n                                                    defaultButtons: null,\n                                                })\n                                              : footerButtons}\n                                      </Space>,\n                                  ]\n                                : undefined\n                        }\n                        {...(contentProps ?? {})}\n                    >\n                        {children}\n                    </Card>\n                </Spin>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Ant Design's {@link https://ant.design/components/typography/#Typography.Text `<Typography.Text>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/text} for more details.\n */\nexport const TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return <Text {...rest}>{value}</Text>;\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Ant Design's {@link https://ant.design/components/tag/ `<Tag>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Tag {...rest}>{value?.toString()}</Tag>;\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Link } = Typography;\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://ant.design/components/typography/#FAQ `<Link>`} component\n * of {@link https://ant.design/components/typography `<Typography>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Link href={`mailto:${value}`} {...rest}>\n            {value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Image } from \"antd\";\n\nimport { ImageFieldProps } from \"../types\";\n\n/**\n * This field is used to display images and uses {@link https://ant.design/components/image/#header `<Image>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/image} for more details.\n */\nexport const ImageField: React.FC<ImageFieldProps> = ({\n    value,\n    imageTitle,\n    ...rest\n}) => {\n    return <Image {...rest} src={value} title={imageTitle} />;\n};\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://ant.design/components/tooltip/#header `<Tooltip>`} values from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon = <CheckOutlined />,\n    falseIcon = <CloseOutlined />,\n    ...rest\n}) => {\n    return (\n        <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            {value ? <span>{trueIcon}</span> : <span>{falseIcon}</span>}\n        </Tooltip>\n    );\n};\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Typography } from \"antd\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport { DateFieldProps } from \"../types\";\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    dayjs.extend(LocalizedFormat);\n\n    const defaultLocale = dayjs.locale();\n\n    const { Text } = Typography;\n\n    return (\n        <Text {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Text>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\nimport { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and uses {@link https://ant.design/components/typography `<Typography.Link>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Link } = Typography;\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link. It uses Ant Design's {@link https://ant.design/components/typography/ `<Typography.Link>`} component.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    ...rest\n}) => {\n    return (\n        <Link href={value} {...rest}>\n            {children ?? value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n\nimport { NumberFieldProps } from \"../types\";\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Text {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Text>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { RefineFieldMarkdownProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<RefineFieldMarkdownProps> = ({\n    value = \"\",\n}) => {\n    // There's an issue related with the type inconsistency of the `remark-gfm` and `remark-rehype` packages, we need to cast the `gfm` as any. (https://github.com/orgs/rehypejs/discussions/63)\n    return (\n        <ReactMarkdown\n            remarkPlugins={[gfm] as unknown as ReactMarkdown.PluggableList}\n        >\n            {value}\n        </ReactMarkdown>\n    );\n};\n","import React, { ReactNode, useState } from \"react\";\nimport { Button, Space } from \"antd\";\nimport type { FilterDropdownProps as AntdFilterDropdownProps } from \"antd/lib/table/interface\";\nimport dayjs from \"dayjs\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\n\nexport type FilterDropdownProps = AntdFilterDropdownProps & {\n    mapValue?: (selectedKeys: React.Key[]) => any;\n    children: ReactNode;\n};\n\n/**\n * `<FilterDropdown>` is a helper component for {@link https://ant.design/components/table/#components-table-demo-custom-filter-panel filter dropdowns in Ant Design `<Table>` components.}\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/filter-dropdown} for more details.\n */\nexport const FilterDropdown: React.FC<FilterDropdownProps> = (props) => {\n    const {\n        setSelectedKeys,\n        confirm,\n        clearFilters,\n        mapValue,\n        selectedKeys,\n        children,\n    } = props;\n\n    const [value, setValue] = useState<any[] | undefined>(selectedKeys);\n    const translate = useTranslate();\n\n    const clearFilter = () => {\n        if (clearFilters) {\n            setValue([]);\n            clearFilters();\n        }\n    };\n\n    const onFilter = () => {\n        const _mappedValue = mappedValue(value);\n\n        let keys;\n        if (typeof _mappedValue === \"number\") {\n            keys = `${_mappedValue}`;\n        } else if (dayjs.isDayjs(_mappedValue)) {\n            keys = [_mappedValue.toISOString()];\n        } else {\n            keys = _mappedValue;\n        }\n\n        setSelectedKeys(keys);\n\n        confirm?.();\n    };\n\n    const mappedValue = (value: any) => (mapValue ? mapValue(value) : value);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const onChange = (e: any) => {\n        if (typeof e === \"object\") {\n            if (Array.isArray(e)) {\n                const _mappedValue = mappedValue(e);\n\n                setValue(_mappedValue);\n                return setSelectedKeys(_mappedValue);\n            }\n\n            const changeEvent =\n                !e || !e.target || dayjs.isDayjs(e)\n                    ? { target: { value: e } }\n                    : e;\n\n            const { target }: React.ChangeEvent<HTMLInputElement> = changeEvent;\n            const _mappedValue = mappedValue(target.value);\n            setValue(_mappedValue);\n            return;\n        }\n\n        const _mappedValue = mappedValue(e);\n\n        setValue(_mappedValue);\n    };\n\n    const childrenWithProps = React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                onChange,\n                value: mappedValue(value),\n            });\n        }\n        return child;\n    });\n    return (\n        <div\n            style={{\n                padding: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-end\",\n            }}\n        >\n            <div style={{ marginBottom: 15 }}>{childrenWithProps}</div>\n            <Space>\n                <Button type=\"primary\" size=\"small\" onClick={() => onFilter()}>\n                    <FilterOutlined /> {translate(\"buttons.filter\", \"Filter\")}\n                </Button>\n                <Button danger size=\"small\" onClick={() => clearFilter()}>\n                    {translate(\"buttons.clear\", \"Clear\")}\n                </Button>\n            </Space>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { Button, Result, Typography, Space, Tooltip } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\n\nconst { Text } = Typography;\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource) {\n            if (action) {\n                setErrorMessage(\n                    translate(\n                        \"pages.error.info\",\n                        {\n                            action: action,\n                            resource: resource?.name,\n                        },\n                        `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                    ),\n                );\n            }\n        }\n    }, [resource, action]);\n\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            extra={\n                <Space direction=\"vertical\" size=\"large\">\n                    <Space>\n                        <Text>\n                            {translate(\n                                \"pages.error.404\",\n                                \"Sorry, the page you visited does not exist.\",\n                            )}\n                        </Text>\n                        {errorMessage && (\n                            <Tooltip title={errorMessage}>\n                                <InfoCircleOutlined data-testid=\"error-component-tooltip\" />\n                            </Tooltip>\n                        )}\n                    </Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => {\n                            if (routerType === \"legacy\") {\n                                push(\"/\");\n                            } else {\n                                go({ to: \"/\" });\n                            }\n                        }}\n                    >\n                        {translate(\"pages.error.backHome\", \"Back Home\")}\n                    </Button>\n                </Space>\n            }\n        />\n    );\n};\n","import React from \"react\";\nimport { LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n} from \"antd\";\nimport { useLogin, useTranslate } from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    imageContainer,\n} from \"./styles\";\n\nconst { Text, Title } = Typography;\nexport interface ILoginForm {\n    username: string;\n    password: string;\n    remember: boolean;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/antd/components/antd-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n    const [form] = Form.useForm<ILoginForm>();\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const CardTitle = (\n        <Title level={3} style={titleStyles}>\n            {translate(\"pages.login.title\", \"Sign in your account\")}\n        </Title>\n    );\n\n    return (\n        <Layout style={layoutStyles}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    height: \"100vh\",\n                }}\n            >\n                <Col xs={22}>\n                    <div style={containerStyles}>\n                        <div style={imageContainer}>\n                            <img\n                                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                                alt=\"Refine Logo\"\n                            />\n                        </div>\n                        <Card title={CardTitle} headStyle={{ borderBottom: 0 }}>\n                            <Form<ILoginForm>\n                                layout=\"vertical\"\n                                form={form}\n                                onFinish={(values) => {\n                                    login(values);\n                                }}\n                                requiredMark={false}\n                                initialValues={{\n                                    remember: false,\n                                }}\n                            >\n                                <Form.Item\n                                    name=\"username\"\n                                    label={translate(\n                                        \"pages.login.username\",\n                                        \"Username\",\n                                    )}\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input\n                                        size=\"large\"\n                                        placeholder={translate(\n                                            \"pages.login.username\",\n                                            \"Username\",\n                                        )}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    label={translate(\n                                        \"pages.login.password\",\n                                        \"Password\",\n                                    )}\n                                    rules={[{ required: true }]}\n                                    style={{ marginBottom: \"12px\" }}\n                                >\n                                    <Input\n                                        type=\"password\"\n                                        placeholder=\"●●●●●●●●\"\n                                        size=\"large\"\n                                    />\n                                </Form.Item>\n                                <div style={{ marginBottom: \"12px\" }}>\n                                    <Form.Item\n                                        name=\"remember\"\n                                        valuePropName=\"checked\"\n                                        noStyle\n                                    >\n                                        <Checkbox\n                                            style={{\n                                                fontSize: \"12px\",\n                                            }}\n                                        >\n                                            {translate(\n                                                \"pages.login.remember\",\n                                                \"Remember me\",\n                                            )}\n                                        </Checkbox>\n                                    </Form.Item>\n\n                                    <a\n                                        style={{\n                                            float: \"right\",\n                                            fontSize: \"12px\",\n                                        }}\n                                        href=\"#\"\n                                    >\n                                        {translate(\n                                            \"pages.login.forgotPassword\",\n                                            \"Forgot password?\",\n                                        )}\n                                    </a>\n                                </div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"large\"\n                                    htmlType=\"submit\"\n                                    loading={isLoading}\n                                    block\n                                >\n                                    {translate(\"pages.login.signin\", \"Sign in\")}\n                                </Button>\n                            </Form>\n                            <div style={{ marginTop: 8 }}>\n                                <Text style={{ fontSize: 12 }}>\n                                    {translate(\n                                        \"pages.login.noAccount\",\n                                        \"Don’t have an account?\",\n                                    )}{\" \"}\n                                    <a href=\"#\" style={{ fontWeight: \"bold\" }}>\n                                        {translate(\n                                            \"pages.login.signup\",\n                                            \"Sign up\",\n                                        )}\n                                    </a>\n                                </Text>\n                            </div>\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {\n    background: `radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)`,\n    backgroundSize: \"cover\",\n};\n\nexport const containerStyles: CSSProperties = {\n    maxWidth: \"408px\",\n    margin: \"auto\",\n};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    color: \"#626262\",\n    fontSize: \"30px\",\n    letterSpacing: \"-0.04em\",\n};\n\nexport const imageContainer: CSSProperties = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: \"28px\",\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport { Row, Col, Typography, Space, Button } from \"antd\";\nimport { ReadOutlined, FolderOutlined, TeamOutlined } from \"@ant-design/icons\";\n\nconst styles: { [key: string]: React.CSSProperties } = {\n    root: {\n        height: \"100vh\",\n        backgroundImage:\n            \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n        backgroundSize: \"cover\",\n        backgroundColor: \"#331049\",\n    },\n    title: {\n        color: \"white\",\n        fontWeight: 800,\n        fontSize: \"64px\",\n        marginBottom: \"8px\",\n    },\n    p1: {\n        color: \"white\",\n        marginBottom: 0,\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n    },\n    p2: {\n        color: \"white\",\n        fontSize: \"20px\",\n    },\n    code: {\n        backgroundColor: \"white\",\n        color: \"#331049\",\n    },\n};\n\nconst { Title } = Typography;\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    return (\n        <Row align=\"middle\" justify=\"center\" style={styles.root}>\n            <Col style={{ textAlign: \"center\" }}>\n                <img\n                    style={{ marginBottom: \"48px\" }}\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                    alt=\"Refine Logo\"\n                />\n                <Title style={styles.title}>Welcome on board</Title>\n                <p style={styles.p1}>Your configuration is completed.</p>\n                <p style={styles.p2}>\n                    Now you can get started by adding your resources to the{\" \"}\n                    <code style={styles.code}>{`resources`}</code> property of{\" \"}\n                    <code style={styles.code}>{`<Refine>`}</code>\n                </p>\n                <Space\n                    size=\"large\"\n                    wrap\n                    style={{ marginTop: \"70px\", justifyContent: \"center\" }}\n                >\n                    <a\n                        href=\"https://refine.dev\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <Button size=\"large\" icon={<ReadOutlined />}>\n                            Documentation\n                        </Button>\n                    </a>\n                    <a\n                        href=\"https://refine.dev/examples\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <Button size=\"large\" icon={<FolderOutlined />}>\n                            Examples\n                        </Button>\n                    </a>\n                    <a\n                        href=\"https://discord.gg/refine\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <Button size=\"large\" icon={<TeamOutlined />}>\n                            Community\n                        </Button>\n                    </a>\n                </Space>\n            </Col>\n        </Row>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React from \"react\";\nimport { CardProps, FormProps, LayoutProps } from \"antd\";\nimport { AuthPageProps } from \"@refinedev/core\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport type AuthProps = AuthPageProps<LayoutProps, CardProps, FormProps> & {\n    renderContent?: (\n        content: React.ReactNode,\n        title: React.ReactNode,\n    ) => React.ReactNode;\n    title?: React.ReactNode;\n};\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/antd-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    CardProps,\n    LayoutProps,\n    Divider,\n    FormProps,\n    theme,\n} from \"antd\";\nimport { useLogin, useTranslate, useRouterContext } from \"@refinedev/core\";\n\nimport {\n    bodyStyles,\n    containerStyles,\n    headStyles,\n    layoutStyles,\n    titleStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ntype LoginProps = LoginPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n    hideForm,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<LoginFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitleV2 collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.login.title\", \"Sign in to your account\")}\n        </Title>\n    );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                type=\"default\"\n                                block\n                                icon={provider.icon}\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    width: \"100%\",\n                                    marginBottom: \"8px\",\n                                }}\n                                onClick={() =>\n                                    login({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    {!hideForm && (\n                        <Divider>\n                            <Text\n                                style={{\n                                    color: token.colorTextLabel,\n                                }}\n                            >\n                                {translate(\"pages.login.divider\", \"or\")}\n                            </Text>\n                        </Divider>\n                    )}\n                </>\n            );\n        }\n        return null;\n    };\n\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            {renderProviders()}\n            {!hideForm && (\n                <Form<LoginFormTypes>\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={(values) => login(values)}\n                    requiredMark={false}\n                    initialValues={{\n                        remember: false,\n                    }}\n                    {...formProps}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        label={translate(\"pages.login.fields.email\", \"Email\")}\n                        rules={[\n                            { required: true },\n                            {\n                                type: \"email\",\n                                message: translate(\n                                    \"pages.login.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        ]}\n                    >\n                        <Input\n                            size=\"large\"\n                            placeholder={translate(\n                                \"pages.login.fields.email\",\n                                \"Email\",\n                            )}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        label={translate(\n                            \"pages.login.fields.password\",\n                            \"Password\",\n                        )}\n                        rules={[{ required: true }]}\n                    >\n                        <Input\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            placeholder=\"●●●●●●●●\"\n                            size=\"large\"\n                        />\n                    </Form.Item>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            marginBottom: \"24px\",\n                        }}\n                    >\n                        {rememberMe ?? (\n                            <Form.Item\n                                name=\"remember\"\n                                valuePropName=\"checked\"\n                                noStyle\n                            >\n                                <Checkbox\n                                    style={{\n                                        fontSize: \"12px\",\n                                    }}\n                                >\n                                    {translate(\n                                        \"pages.login.buttons.rememberMe\",\n                                        \"Remember me\",\n                                    )}\n                                </Checkbox>\n                            </Form.Item>\n                        )}\n                        {forgotPasswordLink ?? (\n                            <ActiveLink\n                                style={{\n                                    color: token.colorPrimaryTextHover,\n                                    fontSize: \"12px\",\n                                    marginLeft: \"auto\",\n                                }}\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </ActiveLink>\n                        )}\n                    </div>\n                    {!hideForm && (\n                        <Form.Item>\n                            <Button\n                                type=\"primary\"\n                                size=\"large\"\n                                htmlType=\"submit\"\n                                loading={isLoading}\n                                block\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </Button>\n                        </Form.Item>\n                    )}\n                </Form>\n            )}\n\n            {registerLink ?? (\n                <div\n                    style={{\n                        marginTop: hideForm ? 16 : 8,\n                    }}\n                >\n                    <Text style={{ fontSize: 12 }}>\n                        {translate(\n                            \"pages.login.buttons.noAccount\",\n                            \"Don’t have an account?\",\n                        )}{\" \"}\n                        <ActiveLink\n                            to=\"/register\"\n                            style={{\n                                fontWeight: \"bold\",\n                                color: token.colorPrimaryTextHover,\n                            }}\n                        >\n                            {translate(\"pages.login.signup\", \"Sign up\")}\n                        </ActiveLink>\n                    </Text>\n                </div>\n            )}\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align={hideForm ? \"top\" : \"middle\"}\n                style={{\n                    padding: \"16px 0\",\n                    minHeight: \"100dvh\",\n                    paddingTop: hideForm ? \"15dvh\" : \"16px\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {};\n\nexport const containerStyles: CSSProperties = {\n    maxWidth: \"400px\",\n    margin: \"auto\",\n    padding: \"32px\",\n    boxShadow:\n        \"0px 2px 4px rgba(0, 0, 0, 0.02), 0px 1px 6px -1px rgba(0, 0, 0, 0.02), 0px 1px 2px rgba(0, 0, 0, 0.03)\",\n};\n\nexport const headStyles: CSSProperties = {\n    borderBottom: 0,\n    padding: 0,\n};\n\nexport const bodyStyles: CSSProperties = { padding: 0, marginTop: \"32px\" };\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    marginBottom: 0,\n    fontSize: \"24px\",\n    lineHeight: \"32px\",\n    fontWeight: 700,\n    overflowWrap: \"break-word\",\n    hyphens: \"manual\",\n    textOverflow: \"unset\",\n    whiteSpace: \"pre-wrap\",\n};\n","import React from \"react\";\nimport {\n    RegisterPageProps,\n    RegisterFormTypes,\n    useRouterType,\n    useLink,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    LayoutProps,\n    CardProps,\n    FormProps,\n    Divider,\n    theme,\n} from \"antd\";\nimport { useTranslate, useRouterContext, useRegister } from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    headStyles,\n    bodyStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ntype RegisterProps = RegisterPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has register page form which is served on `/register` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n    hideForm,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<RegisterFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister<RegisterFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitleV2 collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.register.title\", \"Sign up for your account\")}\n        </Title>\n    );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                type=\"default\"\n                                block\n                                icon={provider.icon}\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    width: \"100%\",\n                                    marginBottom: \"8px\",\n                                }}\n                                onClick={() =>\n                                    register({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    {!hideForm && (\n                        <Divider>\n                            <Text\n                                style={{\n                                    color: token.colorTextLabel,\n                                }}\n                            >\n                                {translate(\"pages.login.divider\", \"or\")}\n                            </Text>\n                        </Divider>\n                    )}\n                </>\n            );\n        }\n        return null;\n    };\n\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            {renderProviders()}\n            {!hideForm && (\n                <Form<RegisterFormTypes>\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={(values) => register(values)}\n                    requiredMark={false}\n                    {...formProps}\n                >\n                    <Form.Item\n                        name=\"email\"\n                        label={translate(\"pages.register.email\", \"Email\")}\n                        rules={[\n                            { required: true },\n                            {\n                                type: \"email\",\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        ]}\n                    >\n                        <Input\n                            size=\"large\"\n                            placeholder={translate(\n                                \"pages.register.fields.email\",\n                                \"Email\",\n                            )}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        label={translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                        rules={[{ required: true }]}\n                    >\n                        <Input\n                            type=\"password\"\n                            placeholder=\"●●●●●●●●\"\n                            size=\"large\"\n                        />\n                    </Form.Item>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            marginBottom: \"24px\",\n                        }}\n                    >\n                        {loginLink ?? (\n                            <Text\n                                style={{\n                                    fontSize: 12,\n                                    marginLeft: \"auto\",\n                                }}\n                            >\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}{\" \"}\n                                <ActiveLink\n                                    style={{\n                                        fontWeight: \"bold\",\n                                        color: token.colorPrimaryTextHover,\n                                    }}\n                                    to=\"/login\"\n                                >\n                                    {translate(\"pages.login.signin\", \"Sign in\")}\n                                </ActiveLink>\n                            </Text>\n                        )}\n                    </div>\n                    <Form.Item\n                        style={{\n                            marginBottom: 0,\n                        }}\n                    >\n                        <Button\n                            type=\"primary\"\n                            size=\"large\"\n                            htmlType=\"submit\"\n                            loading={isLoading}\n                            block\n                        >\n                            {translate(\n                                \"pages.register.buttons.submit\",\n                                \"Sign up\",\n                            )}\n                        </Button>\n                    </Form.Item>\n                </Form>\n            )}\n            {hideForm && loginLink !== false && (\n                <div\n                    style={{\n                        marginTop: hideForm ? 16 : 8,\n                    }}\n                >\n                    <Text\n                        style={{\n                            fontSize: 12,\n                        }}\n                    >\n                        {translate(\n                            \"pages.login.buttons.haveAccount\",\n                            \"Have an account?\",\n                        )}{\" \"}\n                        <ActiveLink\n                            style={{\n                                fontWeight: \"bold\",\n                                color: token.colorPrimaryTextHover,\n                            }}\n                            to=\"/login\"\n                        >\n                            {translate(\"pages.login.signin\", \"Sign in\")}\n                        </ActiveLink>\n                    </Text>\n                </div>\n            )}\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align={hideForm ? \"top\" : \"middle\"}\n                style={{\n                    padding: \"16px 0\",\n                    minHeight: \"100dvh\",\n                    paddingTop: hideForm ? \"15dvh\" : \"16px\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import React from \"react\";\nimport {\n    ForgotPasswordPageProps,\n    ForgotPasswordFormTypes,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    LayoutProps,\n    CardProps,\n    FormProps,\n    theme,\n} from \"antd\";\nimport {\n    useTranslate,\n    useRouterContext,\n    useForgotPassword,\n} from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    headStyles,\n    bodyStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\ntype ResetPassworProps = ForgotPasswordPageProps<\n    LayoutProps,\n    CardProps,\n    FormProps\n>;\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\n/**\n * **refine** has forgot password page form which is served on `/forgot-password` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ResetPassworProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitleV2 collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n        </Title>\n    );\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            <Form<ForgotPasswordFormTypes>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => forgotPassword(values)}\n                requiredMark={false}\n                {...formProps}\n            >\n                <Form.Item\n                    name=\"email\"\n                    label={translate(\n                        \"pages.forgotPassword.fields.email\",\n                        \"Email\",\n                    )}\n                    rules={[\n                        { required: true },\n                        {\n                            type: \"email\",\n                            message: translate(\n                                \"pages.forgotPassword.errors.validEmail\",\n                                \"Invalid email address\",\n                            ),\n                        },\n                    ]}\n                >\n                    <Input\n                        type=\"email\"\n                        size=\"large\"\n                        placeholder={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    />\n                </Form.Item>\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                    }}\n                >\n                    {loginLink ?? (\n                        <Text\n                            style={{\n                                fontSize: 12,\n                                marginLeft: \"auto\",\n                            }}\n                        >\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account? \",\n                            )}{\" \"}\n                            <ActiveLink\n                                style={{\n                                    fontWeight: \"bold\",\n                                    color: token.colorPrimaryTextHover,\n                                }}\n                                to=\"/login\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </ActiveLink>\n                        </Text>\n                    )}\n                </div>\n                <Form.Item\n                    style={{\n                        marginTop: \"24px\",\n                        marginBottom: 0,\n                    }}\n                >\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                        block\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    padding: \"16px 0\",\n                    minHeight: \"100dvh\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import React from \"react\";\nimport {\n    UpdatePasswordPageProps,\n    UpdatePasswordFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    LayoutProps,\n    CardProps,\n    FormProps,\n    theme,\n} from \"antd\";\nimport { useTranslate, useUpdatePassword } from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    headStyles,\n    bodyStyles,\n} from \"../styles\";\nimport { ThemedTitleV2 } from \"@components\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    LayoutProps,\n    CardProps,\n    FormProps\n>;\n\n/**\n * **refine** has update password page form which is served on `/update-password` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<UpdatePasswordFormTypes>();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitleV2 collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n        </Title>\n    );\n\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            <Form<UpdatePasswordFormTypes>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => updatePassword(values)}\n                requiredMark={false}\n                {...formProps}\n            >\n                <Form.Item\n                    name=\"password\"\n                    label={translate(\n                        \"pages.updatePassword.fields.password\",\n                        \"New Password\",\n                    )}\n                    rules={[{ required: true }]}\n                    style={{ marginBottom: \"12px\" }}\n                >\n                    <Input\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"confirmPassword\"\n                    label={translate(\n                        \"pages.updatePassword.fields.confirmPassword\",\n                        \"Confirm New Password\",\n                    )}\n                    hasFeedback\n                    dependencies={[\"password\"]}\n                    rules={[\n                        {\n                            required: true,\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (\n                                    !value ||\n                                    getFieldValue(\"password\") === value\n                                ) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject(\n                                    new Error(\n                                        translate(\n                                            \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                            \"Passwords do not match\",\n                                        ),\n                                    ),\n                                );\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    style={{\n                        marginBottom: 0,\n                    }}\n                >\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                        block\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    padding: \"16px 0\",\n                    minHeight: \"100dvh\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import React from \"react\";\nimport {\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useResource,\n    matchResourceFromRoute,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport {\n    Breadcrumb as AntdBreadcrumb,\n    BreadcrumbProps as AntdBreadcrumbProps,\n} from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<AntdBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const routerType = useRouterType();\n    const { breadcrumbs } = useBreadcrumb({\n        meta,\n    });\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const { hasDashboard } = useRefineContext();\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const breadCrumbItems = breadcrumbs.map(({ label, icon, href }) => ({\n        key: `breadcrumb-item-${label}`,\n        title: (\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    gap: 4,\n                }}\n            >\n                {!hideIcons && icon}\n                {href ? (\n                    <ActiveLink to={href}>{label}</ActiveLink>\n                ) : (\n                    <span>{label}</span>\n                )}\n            </div>\n        ),\n    }));\n\n    const getBreadcrumbItems = () => {\n        if (showHome && (hasDashboard || rootRouteResource.found)) {\n            return [\n                {\n                    key: \"breadcrumb-item-home\",\n                    title: (\n                        <ActiveLink to=\"/\">\n                            {rootRouteResource?.resource?.meta?.icon ?? (\n                                <HomeOutlined />\n                            )}\n                        </ActiveLink>\n                    ),\n                },\n                ...breadCrumbItems,\n            ];\n        }\n\n        return breadCrumbItems;\n    };\n\n    return <AntdBreadcrumb items={getBreadcrumbItems()} {...breadcrumbProps} />;\n};\n","import React, { FC } from \"react\";\nimport {\n    PageHeader as AntdPageHeader,\n    PageHeaderProps as AntdPageHeaderProps,\n} from \"@ant-design/pro-layout\";\nimport { Button, Typography } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport type PageHeaderProps = AntdPageHeaderProps;\n\nexport const PageHeader: FC<AntdPageHeaderProps> = ({ children, ...props }) => {\n    const backIcon =\n        typeof props.backIcon === \"undefined\" ? (\n            <Button type=\"text\" icon={<ArrowLeftOutlined />} />\n        ) : (\n            props.backIcon\n        );\n\n    const title =\n        typeof props.title === \"string\" ? (\n            <Typography.Title\n                className={RefinePageHeaderClassNames.Title}\n                level={4}\n                style={{ marginBottom: 0 }}\n            >\n                {props.title}\n            </Typography.Title>\n        ) : (\n            props.title\n        );\n\n    const subtitle =\n        typeof props.title === \"string\" ? (\n            <Typography.Title\n                className={RefinePageHeaderClassNames.SubTitle}\n                level={5}\n                type=\"secondary\"\n                style={{ marginBottom: 0 }}\n            >\n                {props.subTitle}\n            </Typography.Title>\n        ) : (\n            props.subTitle\n        );\n\n    return (\n        <AntdPageHeader\n            {...props}\n            backIcon={backIcon}\n            title={title}\n            subTitle={subtitle}\n            style={{ padding: 0, ...props.style }}\n        >\n            {children}\n        </AntdPageHeader>\n    );\n};\n","import React from \"react\";\nimport {\n    AutoSaveIndicatorProps,\n    useTranslate,\n    AutoSaveIndicator as AutoSaveIndicatorCore,\n} from \"@refinedev/core\";\nimport { Typography, theme } from \"antd\";\nimport {\n    EllipsisOutlined,\n    SyncOutlined,\n    CheckCircleOutlined,\n    ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n    elements: {\n        success = (\n            <Message\n                key=\"autoSave.success\"\n                defaultMessage=\"saved\"\n                icon={<CheckCircleOutlined />}\n            />\n        ),\n        error = (\n            <Message\n                key=\"autoSave.error\"\n                defaultMessage=\"auto save failure\"\n                icon={<ExclamationCircleOutlined />}\n            />\n        ),\n        loading = (\n            <Message\n                key=\"autoSave.loading\"\n                defaultMessage=\"saving...\"\n                icon={<SyncOutlined />}\n            />\n        ),\n        idle = (\n            <Message\n                key=\"autoSave.idle\"\n                defaultMessage=\"waiting for changes\"\n                icon={<EllipsisOutlined />}\n            />\n        ),\n    } = {},\n}) => {\n    return (\n        <AutoSaveIndicatorCore\n            status={status}\n            elements={{\n                success,\n                error,\n                loading,\n                idle,\n            }}\n        />\n    );\n};\n\nconst Message = ({\n    key,\n    defaultMessage,\n    icon,\n}: {\n    key: string;\n    defaultMessage: string;\n    icon: React.ReactNode;\n}) => {\n    const translate = useTranslate();\n    const { useToken } = theme;\n    const { token } = useToken();\n\n    return (\n        <Typography.Text\n            style={{\n                marginRight: 5,\n                color: token.colorTextTertiary,\n                fontSize: \".8rem\",\n            }}\n        >\n            {translate(key, defaultMessage)}\n            <span style={{ marginLeft: \".2rem\" }}>{icon}</span>\n        </Typography.Text>\n    );\n};\n","import type { UploadFile, UploadChangeParam } from \"antd/lib/upload/interface\";\n\nexport const getValueFromEvent = (event: UploadChangeParam): UploadFile[] => {\n    const { fileList } = event;\n\n    return [...fileList];\n};\n\nexport function file2Base64(file: UploadFile): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        const resultHandler = () => {\n            if (reader.result) {\n                reader.removeEventListener(\"load\", resultHandler, false);\n\n                resolve(reader.result as string);\n            }\n        };\n\n        reader.addEventListener(\"load\", resultHandler, false);\n\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onerror = (error) => {\n            reader.removeEventListener(\"load\", resultHandler, false);\n            return reject(error);\n        };\n    });\n}\n","import { ThemeConfig } from \"antd\";\n\ntype ThemeNames =\n    | \"Blue\"\n    | \"Purple\"\n    | \"Magenta\"\n    | \"Red\"\n    | \"Orange\"\n    | \"Yellow\"\n    | \"Green\";\n\ntype RefineThemes = Record<ThemeNames, ThemeConfig>;\n\nexport const RefineThemes: RefineThemes = {\n    Blue: {\n        token: {\n            colorPrimary: \"#1677FF\",\n        },\n    },\n    Purple: {\n        token: {\n            colorPrimary: \"#722ED1\",\n        },\n    },\n    Magenta: {\n        token: {\n            colorPrimary: \"#EB2F96\",\n        },\n    },\n    Red: {\n        token: {\n            colorPrimary: \"#F5222D\",\n        },\n    },\n    Orange: {\n        token: {\n            colorPrimary: \"#FA541C\",\n        },\n    },\n    Yellow: {\n        token: {\n            colorPrimary: \"#FAAD14\",\n        },\n    },\n    Green: {\n        token: {\n            colorPrimary: \"#52C41A\",\n        },\n    },\n};\n"],"mappings":"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","names":["src_exports","__export","AuthPage","AutoSaveIndicator","BooleanField","Breadcrumb","CloneButton","Create","CreateButton","DateField","DeleteButton","Edit","EditButton","EmailField","ErrorComponent","ExportButton","FileField","FilterDropdown","Header","ImageField","ImportButton","Layout","List","ListButton","LoginPage","MarkdownField","NumberField","PageHeader","ReadyPage","RefineThemes","RefreshButton","SaveButton","Show","ShowButton","Sider","TagField","TextField","ThemedHeader","ThemedHeaderV2","ThemedLayout","ThemedLayoutContext","ThemedLayoutContextProvider","ThemedLayoutV2","ThemedSider","ThemedSiderV2","ThemedTitle","ThemedTitleV2","Title","UrlField","WelcomePage","getDefaultFilter","getDefaultSortOrder","getValueFromEvent","mapAntdFilterToCrudFilter","mapAntdSorterToCrudSorting","notificationProvider","useCheckboxGroup","useDrawerForm","useEditableTable","useFileUploadState","useForm","useImport","useModal","useModalForm","useNotificationProvider","useRadioGroup","useSelect","useSiderVisible","useSimpleList","useStepsForm","useTable","useThemedLayoutContext","__toCommonJS","import_react","import_antd","import_sunflower_antd","import_core","useForm","__name","action","resource","onMutationSuccessProp","onMutationErrorProp","autoSave","submitOnEnter","warnWhenUnsavedChangesProp","redirect","successNotification","errorNotification","meta","metaData","queryMeta","mutationMeta","liveMode","liveParams","mutationMode","dataProviderName","onLiveEvent","invalidates","undoableTimeout","queryOptions","createMutationOptions","updateMutationOptions","idFromProps","overtimeOptions","optimisticUpdateMap","disableServerSideValidationProp","_a","_b","options","disableServerSideValidation","translate","formAnt","formSF","useFormSF","form","useFormCoreResult","useFormCore","error","_variables","_context","parsedErrors","fieldsValue","field","errors","key","fieldError","newError","formLoading","onFinish","queryResult","id","onFinishAutoSave","warnWhenUnsavedChangesRefine","setWarnWhen","warnWhenUnsavedChanges","React","onKeyUp","event","onValuesChange","changeValues","allValues","onFinishFromProps","values","saveButtonProps","import_react","import_core","import_core","useModal","__name","modalProps","show","close","visible","useCoreModal","e","_a","useModalForm","__name","syncWithLocation","defaultVisible","autoSubmitClose","autoResetForm","autoSave","invalidates","rest","_a","_b","initiallySynced","setInitiallySynced","React","invalidate","resource","actionFromParams","identifier","parsed","go","getUserFriendlyName","action","syncingId","syncWithLocationKey","useFormProps","useForm","form","formProps","id","setId","formLoading","onFinish","autoSaveProps","translate","warnWhen","setWarnWhen","show","close","modalProps","useModal","visible","sunflowerUseModal","_c","_d","openStatus","idFromParams","saveButtonPropsSF","handleClose","handleShow","showId","_visible","otherModalProps","newModalProps","values","import_react","import_core","useDrawerForm","__name","syncWithLocation","defaultVisible","autoSubmitClose","autoResetForm","autoSave","invalidates","rest","invalidate","initiallySynced","setInitiallySynced","React","visible","show","close","resource","actionFromParams","identifier","parsed","go","action","syncingId","syncWithLocationKey","useFormProps","useForm","form","formProps","formLoading","id","setId","onFinish","autoSaveProps","_a","_b","_c","_d","openStatus","idFromParams","translate","warnWhen","setWarnWhen","saveButtonProps","deleteButtonProps","handleClose","handleShow","showId","values","import_sunflower_antd","useStepsForm","__name","props","useFormProps","useForm","form","formProps","stepsPropsSunflower","useStepsFormSF","values","_a","import_react","import_antd","import_sunflower_antd","import_core","import_core","getDefaultSortOrder","__name","columnName","sorter","sort","getDefaultSortOrderCore","getDefaultFilter","filters","operatorType","getDefaultFilterCore","mapAntdSorterToCrudSorting","crudSorting","a","b","_a","_b","item","field","mapAntdFilterToCrudFilter","tableFilters","prevFilters","initialFilters","crudFilters","mapInitialFilter","acc","value","operator","i","import_core","import_react","PaginationLink","__name","to","element","LegacyLink","routerType","Link","React","e","useTable","__name","onSearch","initialCurrent","initialPageSize","hasPagination","pagination","initialSorter","permanentSorter","initialFilter","permanentFilter","defaultSetFilterBehavior","filtersFromProp","sortersFromProp","syncWithLocation","resource","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","tableQueryResult","current","setCurrent","pageSize","setPageSize","filters","setFilters","sorters","setSorters","sorter","setSorter","createLinkForSyncWithLocation","pageCount","overtime","useTableCore","breakpoint","form","formSF","useFormSF","liveMode","hasPaginationString","isPaginationEnabled","preferredInitialFilters","data","isFetched","isLoading","onChange","paginationState","tableFilters","crudFilters","mapAntdFilterToCrudFilter","crudSorting","mapAntdSorterToCrudSorting","onFinish","value","searchFilters","antdPagination","page","type","element","_a","link","PaginationLink","elementChildren","useEditableTable","__name","autoSubmitClose","props","table","useTable","edit","useForm","editId","setId","saveButtonProps","cancelButtonProps","editButtonProps","id","isEditing","values","result","import_core","useSelect","__name","props","queryResult","defaultValueQueryResult","onSearch","options","useSelectCore","import_core","useCheckboxGroup","__name","resource","sort","sorters","filters","optionLabel","optionValue","queryOptions","fetchSize","pagination","liveMode","defaultValue","onLiveEvent","liveParams","meta","metaData","dataProviderName","queryResult","options","import_core","useRadioGroup","__name","resource","sort","sorters","filters","optionLabel","optionValue","queryOptions","fetchSize","pagination","liveMode","defaultValue","onLiveEvent","liveParams","meta","metaData","dataProviderName","queryResult","options","import_react","import_antd","import_core","useImport","__name","resourceFromProp","resourceName","mapData","item","paparseOptions","batchSize","onFinish","meta","metaData","dataProviderName","onProgressFromProp","t","resource","mutationResult","isLoading","handleChange","useImportCore","totalAmount","processedAmount","description","React","import_react","import_antd","import_core","useSimpleList","__name","resource","initialCurrent","initialPageSize","pagination","hasPagination","initialSorter","permanentSorter","initialFilter","permanentFilter","defaultSetFilterBehavior","filtersFromProp","sortersFromProp","onSearch","queryOptions","syncWithLocation","successNotification","errorNotification","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","sorters","sorter","filters","current","pageSize","pageCount","setFilters","setCurrent","setPageSize","setSorter","setSorters","createLinkForSyncWithLocation","queryResult","overtime","useTableCore","hasPaginationString","isPaginationEnabled","breakpoint","liveMode","form","data","isFetched","isLoading","onChange","page","onFinish","values","searchFilters","antdPagination","type","element","_a","link","PaginationLink","elementChildren","import_react","useFileUploadState","__name","isLoading","setIsloading","onChange","info","mapStatusToLoading","files","file","import_react","import_react","ThemedLayoutContext","React","ThemedLayoutContextProvider","__name","children","initialSiderCollapsed","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useSiderVisible","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","ThemedLayoutContext","import_react","useThemedLayoutContext","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","ThemedLayoutContext","import_antd","import_react","import_react","import_antd","import_icons","UndoableNotification","__name","message","cancelMutation","undoableTimeout","React","time","notificationProvider","key","message","description","type","cancelMutation","undoableTimeout","staticNotification","React","UndoableNotification","useNotificationProvider","__name","notificationFromContext","notification","import_react","import_antd","import_react","import_antd","import_icons","import_core","drawerButtonStyles","SubMenu","Sider","__name","TitleFromProps","render","meta","collapsed","setCollapsed","drawerOpen","setDrawerOpen","isExistAuthentication","routerType","NewLink","warnWhen","setWarnWhen","LegacyLink","Link","TitleFromContext","translate","menuItems","selectedKey","defaultOpenKeys","breakpoint","hasDashboard","authProvider","mutateLogout","isMobile","RenderToTitle","Title","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","isSelected","isRoute","handleLogout","logout","dashboard","items","renderSider","renderMenu","renderDrawerSider","drawerButtonStyles","import_core","import_antd","import_react","Text","Header","__name","authProvider","user","React","AntdLayout","Layout","__name","children","Header","Sider","Title","Footer","OffLayoutArea","breakpoint","SiderToRender","HeaderToRender","isSmall","React","AntdLayout","import_react","import_core","Title","__name","collapsed","routerType","Link","LegacyLink","React","import_react","import_antd","import_react","import_antd","import_icons","import_core","drawerButtonStyles","SubMenu","useToken","ThemedSider","__name","TitleFromProps","render","meta","token","collapsed","setCollapsed","drawerOpen","setDrawerOpen","isExistAuthentication","routerType","NewLink","warnWhen","setWarnWhen","LegacyLink","Link","TitleFromContext","translate","menuItems","selectedKey","defaultOpenKeys","breakpoint","hasDashboard","authProvider","mutateLogout","isMobile","RenderToTitle","ThemedTitle","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","isSelected","isRoute","handleLogout","logout","dashboard","items","renderSider","renderMenu","renderDrawerSider","drawerButtonStyles","import_react","import_antd","import_core","Text","useToken","ThemedHeader","__name","token","authProvider","user","React","AntdLayout","ThemedLayout","__name","children","Header","Sider","Title","Footer","OffLayoutArea","breakpoint","SiderToRender","ThemedSider","HeaderToRender","ThemedHeader","isSmall","React","AntdLayout","import_react","import_core","import_antd","useToken","defaultText","defaultIcon","React","ThemedTitle","__name","collapsed","icon","text","wrapperStyles","token","routerType","Link","LegacyLink","import_react","import_antd","import_react","import_antd","import_icons","import_core","drawerButtonStyles","SubMenu","useToken","ThemedSiderV2","__name","TitleFromProps","render","meta","fixed","activeItemDisabled","token","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","isExistAuthentication","routerType","NewLink","warnWhen","setWarnWhen","LegacyLink","Link","TitleFromContext","translate","menuItems","selectedKey","defaultOpenKeys","breakpoint","hasDashboard","authProvider","mutateLogout","isMobile","RenderToTitle","ThemedTitleV2","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","isSelected","isRoute","linkStyle","handleLogout","logout","dashboard","items","renderSider","renderMenu","renderDrawerSider","drawerButtonStyles","siderStyles","collapsed","type","import_react","import_antd","import_core","Text","useToken","ThemedHeaderV2","__name","isSticky","sticky","token","authProvider","user","headerStyles","React","AntdLayout","ThemedLayoutV2","__name","children","Header","Sider","Title","Footer","OffLayoutArea","initialSiderCollapsed","breakpoint","SiderToRender","ThemedSiderV2","HeaderToRender","ThemedHeaderV2","isSmall","hasSider","React","ThemedLayoutContextProvider","AntdLayout","import_react","import_core","import_antd","useToken","defaultText","defaultIcon","React","ThemedTitleV2","__name","collapsed","icon","text","wrapperStyles","token","routerType","Link","LegacyLink","import_react","import_antd","import_icons","import_core","import_ui_types","CreateButton","__name","resourceNameFromProps","propResourceNameOrRouteName","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateCreateUrl","resource","data","createButtonDisabledTitle","createUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","EditButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateEditUrl","id","resource","data","createButtonDisabledTitle","editUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","DeleteButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","metaData","meta","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","invalidates","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","id","resource","identifier","mutationModeContext","mutationMode","mutate","isLoading","variables","data","disabledTitle","setWarnWhen","React","value","import_react","import_antd","import_icons","import_core","import_ui_types","import_react_query","RefreshButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","dataProviderName","children","onClick","_meta","_metaData","rest","translate","queryClient","invalidates","resources","identifier","id","isInvalidating","handleInvalidate","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ShowButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateShowUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","createButtonDisabledTitle","showUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ListButton","__name","resourceNameFromProps","propResourceNameOrRouteName","hideText","accessControl","meta","children","onClick","rest","_a","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateListUrl","routerType","Link","LegacyLink","getUserFriendlyName","ActiveLink","translate","resource","identifier","data","createButtonDisabledTitle","listUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ExportButton","__name","hideText","children","rest","translate","React","import_react","import_antd","import_icons","import_core","import_ui_types","SaveButton","__name","hideText","children","rest","translate","React","import_react","import_antd","import_icons","import_core","import_ui_types","CloneButton","__name","propResourceNameOrRouteName","resourceNameFromProps","recordItemId","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateCloneUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","createButtonDisabledTitle","cloneUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ImportButton","__name","uploadProps","buttonProps","hideText","children","translate","React","import_react","import_antd","import_core","List","__name","canCreate","title","children","createButtonPropsFromProps","resourceFromProps","wrapperProps","contentProps","headerProps","breadcrumbFromProps","headerButtonProps","headerButtons","_a","_b","translate","globalBreadcrumb","routerType","getUserFriendlyName","resource","identifier","isCreateButtonVisible","breadcrumb","createButtonProps","defaultExtra","React","CreateButton","PageHeader","Breadcrumb","import_react","import_antd","import_core","Create","__name","title","saveButtonPropsFromProps","children","resourceFromProps","isLoading","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","translate","globalBreadcrumb","routerType","back","goBack","getUserFriendlyName","resource","action","identifier","breadcrumb","saveButtonProps","defaultFooterButtons","React","SaveButton","PageHeader","Breadcrumb","import_react","import_antd","import_core","Edit","__name","title","saveButtonPropsFromProps","mutationModeProp","recordItemId","children","deleteButtonPropsFromProps","canDelete","resourceFromProps","isLoading","dataProviderName","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","autoSaveProps","_a","_b","_c","translate","globalBreadcrumb","mutationModeContext","mutationMode","routerType","back","go","goBack","legacyGoList","getUserFriendlyName","resource","action","idFromParams","identifier","goListPath","id","breadcrumb","hasList","isDeleteButtonVisible","listButtonProps","refreshButtonProps","deleteButtonProps","saveButtonProps","defaultHeaderButtons","React","AutoSaveIndicator","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","PageHeader","Breadcrumb","import_react","import_antd","import_core","Show","__name","title","canEdit","canDelete","isLoading","children","resourceFromProps","recordItemId","dataProviderName","breadcrumbFromProps","contentProps","headerProps","wrapperProps","headerButtons","footerButtons","footerButtonProps","headerButtonProps","goBackFromProps","_a","_b","_c","translate","globalBreadcrumb","routerType","back","go","goBack","legacyGoList","getUserFriendlyName","resource","action","idFromParams","identifier","goListPath","id","breadcrumb","hasList","isDeleteButtonVisible","isEditButtonVisible","listButtonProps","editButtonProps","deleteButtonProps","refreshButtonProps","defaultHeaderButtons","React","ListButton","EditButton","DeleteButton","RefreshButton","PageHeader","Breadcrumb","import_react","import_antd","Text","TextField","__name","value","rest","React","import_react","import_antd","TagField","__name","value","rest","React","import_react","import_antd","Link","EmailField","__name","value","rest","React","import_react","import_antd","ImageField","__name","value","imageTitle","rest","React","import_react","import_antd","import_icons","BooleanField","__name","value","valueLabelTrue","valueLabelFalse","trueIcon","React","falseIcon","rest","import_react","import_dayjs","import_antd","import_localizedFormat","DateField","__name","value","locales","dateFormat","rest","dayjs","LocalizedFormat","defaultLocale","Text","React","import_react","FileField","__name","title","src","rest","React","UrlField","import_react","import_antd","Link","UrlField","__name","children","value","rest","React","import_react","import_antd","Text","toLocaleStringSupportsOptions","__name","NumberField","value","locale","options","rest","number","React","import_react","import_react_markdown","import_remark_gfm","MarkdownField","__name","value","React","ReactMarkdown","gfm","import_react","import_antd","import_dayjs","import_icons","import_core","FilterDropdown","__name","props","setSelectedKeys","confirm","clearFilters","mapValue","selectedKeys","children","value","setValue","translate","clearFilter","onFilter","_mappedValue","mappedValue","keys","dayjs","onChange","e","changeEvent","target","childrenWithProps","React","child","import_react","import_core","import_antd","import_icons","Text","ErrorComponent","__name","errorMessage","setErrorMessage","translate","push","go","routerType","resource","action","React","import_react","import_core","import_antd","layoutStyles","containerStyles","titleStyles","imageContainer","Text","Title","LoginPage","__name","form","translate","authProvider","login","isLoading","CardTitle","React","titleStyles","layoutStyles","containerStyles","imageContainer","values","React","import_antd","import_icons","styles","Title","ReadyPage","__name","import_react","import_core","WelcomePage","__name","React","WelcomePageFromCore","import_react","import_react","import_core","import_antd","layoutStyles","containerStyles","headStyles","bodyStyles","titleStyles","Text","Title","useToken","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","hideForm","token","form","translate","routerType","Link","LegacyLink","ActiveLink","authProvider","login","isLoading","PageTitle","React","ThemedTitleV2","CardTitle","titleStyles","renderProviders","provider","CardContent","headStyles","bodyStyles","containerStyles","values","layoutStyles","import_react","import_core","import_antd","Text","Title","useToken","RegisterPage","__name","providers","loginLink","wrapperProps","contentProps","renderContent","formProps","title","hideForm","token","form","translate","routerType","Link","LegacyLink","ActiveLink","authProvider","register","isLoading","PageTitle","React","ThemedTitleV2","CardTitle","titleStyles","renderProviders","provider","CardContent","headStyles","bodyStyles","containerStyles","values","layoutStyles","import_react","import_core","import_antd","Text","Title","useToken","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","token","form","translate","routerType","Link","LegacyLink","ActiveLink","forgotPassword","isLoading","PageTitle","React","ThemedTitleV2","CardTitle","titleStyles","CardContent","headStyles","bodyStyles","containerStyles","values","layoutStyles","import_react","import_core","import_antd","Title","useToken","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","token","form","translate","authProvider","updatePassword","isLoading","PageTitle","React","ThemedTitleV2","CardTitle","titleStyles","CardContent","headStyles","bodyStyles","containerStyles","values","getFieldValue","_","value","layoutStyles","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","import_react","import_core","import_antd","import_icons","Breadcrumb","__name","breadcrumbProps","showHome","hideIcons","meta","routerType","breadcrumbs","Link","LegacyLink","hasDashboard","resources","rootRouteResource","ActiveLink","breadCrumbItems","label","icon","href","React","AntdBreadcrumb","_a","_b","import_react","import_pro_layout","import_antd","import_icons","import_ui_types","PageHeader","__name","children","props","backIcon","React","title","subtitle","AntdPageHeader","import_react","import_core","import_antd","import_icons","AutoSaveIndicator","__name","status","success","React","Message","error","loading","idle","AutoSaveIndicatorCore","key","defaultMessage","icon","translate","useToken","token","getValueFromEvent","__name","event","fileList","RefineThemes"]}