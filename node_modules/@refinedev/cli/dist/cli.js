#!/usr/bin/env node
var br=Object.create;var ye=Object.defineProperty;var Tr=Object.getOwnPropertyDescriptor;var Or=Object.getOwnPropertyNames;var _r=Object.getPrototypeOf,Dr=Object.prototype.hasOwnProperty;var Ar=(e,t)=>{for(var r in t)ye(e,r,{get:t[r],enumerable:!0})},jr=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Or(t))!Dr.call(e,o)&&o!==r&&ye(e,o,{get:()=>t[o],enumerable:!(n=Tr(t,o))||n.enumerable});return e};var i=(e,t,r)=>(r=e!=null?br(_r(e)):{},jr(t||!e||!e.__esModule?ye(r,"default",{value:e,enumerable:!0}):r,e));var Cr=require("commander"),kr=i(require("figlet"));var et=i(require("cli-table3")),F=i(require("chalk")),se=i(require("center-align"));var ze=i(require("ora")),$r=async(e,t)=>{let r=(0,ze.default)({color:"cyan",text:t}).start(),n=await e();return r.stop(),n},j=$r;var te=i(require("execa")),O=require("fs-extra"),Ve=i(require("globby")),xe=i(require("path")),We=i(require("preferred-pm")),$=()=>{if(!(0,O.existsSync)("package.json"))throw new Error("./package.json not found");return JSON.parse((0,O.readFileSync)("package.json","utf8"))},H=()=>{let e=$();return Object.keys(e.dependencies||{})};var Ye=()=>{let e=$();return Object.keys(e.devDependencies||{})},re=()=>$().scripts,z=async()=>{var e;try{let t=await(0,te.default)("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},n=Object.keys(r).filter(s=>s.startsWith("@refinedev")||s.startsWith("@pankod/refine-")),o=[];for(let s of n){let c=r[s].version;o.push({name:s,version:c})}return o}catch{return Promise.resolve(null)}},K=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","nhost","react-hook-form","react-location","react-router-v6","react-table","remix","shared","simple-rest","strapi","strapi-graphql","strapi-v4","supabase"];try{let t=await(0,Ve.default)("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(o=>{try{let s=require.resolve(xe.default.join("@refinedev",o,"package.json"));return[xe.default.dirname(s)]}catch{return[]}}),n=[];return await Promise.all([...r,...t].map(async o=>{if(await(0,O.pathExists)(`${o}/package.json`)){let c=await(0,O.readJSON)(`${o}/package.json`);n.push({name:c.name,version:c.version,path:o})}})),n}catch{return[]}},qe=async e=>await(0,O.pathExists)(`${e}/refine.config.js`),U={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]}},x=async()=>{let e=await j(()=>(0,We.default)(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},oe=async e=>{let t=await x();try{let r=U[t.name].install,n=(0,te.default)(t.name,[...r,...e],{stdio:"inherit"});n.on("message",o=>{console.log(o)}),n.on("error",o=>{console.log(o)}),n.on("exit",o=>{if(o===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${o}`)})}catch(r){throw new Error(r)}},Je=async e=>{let t=await x();try{let r=U[t.name].install,n=te.default.sync(t.name,[...r,...e],{stdio:"inherit"});if(n.failed||n.exitCode!==0)throw new Error(n.stderr);return n}catch(r){throw new Error(r)}},Xe=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},He=()=>{var t;let e=$();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ne=async()=>(await K()).some(t=>t.name==="@refinedev/devtools");var Ke=e=>e.charAt(0).toUpperCase()+e.slice(1),Ge=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var G={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},Ze=[G.name,G.current,G.wanted,G.latest,G.changelog],ae=async e=>{var c;let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let n=new et.default({head:Ze,style:{head:["blue"]}});t.forEach(a=>{n.push(Ze.map(g=>{let l=a[g];if(!l)return l;if(g==="latest"||g==="wanted"){let u=Qe(a.current),v=Qe(l),P=Ur(u,v),d=F.default[P.major](v.major),p=F.default[P.minor](v.minor),m=F.default[P.patch](v.patch);return`${d}.${p}.${m}`}return g==="changelog"?F.default.blueBright.underline(l):l}))});let o=n.toString(),s=Ge(((c=o.split(`
`))==null?void 0:c[0])||"").length;console.log(),console.log((0,se.default)("Update Available",s)),console.log(o),console.log((0,se.default)(`To update ${F.default.bold("`refine`")} packages with wanted version`,s)),console.log((0,se.default)(` Run the following command: ${F.default.yellowBright(await Fr())}`,s)),console.log()},Qe=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},Ur=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},Fr=async()=>{let e="npx @refinedev/cli update",t=H(),r=Object.keys(re()),n=t.includes("@refinedev/cli"),o=r.includes("refine");if(!n&&!o)return e;let s=await x();return o?`${s.name} run refine update`:n?"npx refine update":e};var tt=i(require("execa"));var rt=i(require("semver-diff")),Br=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(Mr),Mr=async()=>{let e=await j(Z,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await ae({data:e})},Z=async()=>await Lr(),Lr=async()=>{let e=await zr();if(!e)return[];let t=[],r;return Object.keys(e).forEach(o=>{let s=e[o];o.includes("@refinedev")&&(r=o.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:o,current:s.current,wanted:s.wanted,latest:s.latest,changelog:r}))}),t.filter(o=>!!(0,rt.default)(o.current,o.latest))},zr=async()=>{let e="npm",{stdout:t,timedOut:r}=await(0,tt.default)(e,U[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},ot=Br;var w=(a=>(a.REACT_SCRIPT="react-scripts",a.REMIX="remix",a.NEXTJS="nextjs",a.VITE="vite",a.CRACO="craco",a.PARCEL="parcel",a.UNKNOWN="unknown",a))(w||{});var Pe=(o=>(o.ANTD="antd",o.MUI="mui",o.MANTINE="mantine",o.CHAKRA="chakra-ui",o))(Pe||{});var nt=(n=>(n.NPM="npm",n.YARN="yarn",n.PNPM="pnpm",n))(nt||{});var h=e=>{if(e)return e;let t=H(),r=Ye();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},st=()=>{let e=H();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var Q=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},at=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},it=e=>{switch(e){case"remix":return"./app";case"nextjs":case"react-scripts":case"vite":case"craco":case"parcel":case"unknown":default:return"./src"}};var C=require("fs-extra"),ce=i(require("temp")),lt=require("pluralize"),pt=i(require("execa")),mt=i(require("inquirer")),Ee=require("path");var B=i(require("handlebars")),b=require("fs-extra"),Vr=(e,t)=>{let r=(0,b.readFileSync)(e);return B.default.registerHelper("ifIn",function(o,s,c){return o.includes(s)?c.fn(B.default):c.inverse(B.default)}),B.default.registerHelper("formatInferencerComponent",function(o){if(o)switch(o){case"chakra-ui":return"ChakraUI";default:return o.charAt(0).toUpperCase()+o.slice(1)}}),B.default.registerHelper("capitalize",function(o){if(o)return o.charAt(0).toUpperCase()+o.slice(1)}),B.default.compile(r.toString())(t)},ct=(e,t)=>{(0,b.readdirSync)(e).forEach(n=>{let o=`${e}/${n}`,s=`${e}/${n.replace(".hbs","")}`;(0,b.createFileSync)(s),(0,b.writeFileSync)(s,Vr(o,t)),(0,b.unlinkSync)(o)})};var ie=["list","create","edit","show"],le=async(e,t)=>{var o;let r=(e==null?void 0:e.path)||Q(h()).path,n=e.actions||ie.join(",");if(!t.length){let{name:s,selectedActions:c}=await mt.default.prompt([{type:"input",name:"name",message:"Resource Name",validate:a=>a?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ie,default:(o=e==null?void 0:e.actions)==null?void 0:o.split(",")}]);t=[s],n=c.join(",")}t.forEach(s=>{let c=n?n.split(","):void 0,a=(0,lt.plural)(s).toLowerCase(),g=(0,Ee.join)(process.cwd(),r,a);if((0,C.pathExistsSync)(g)){console.error(`\u274C Resource (${(0,Ee.join)(r,a)}) already exist!`);return}let l=Ke(s),u=st(),v=`${__dirname}/../templates/resource`,P=Wr();(0,C.copySync)(v,P);let d={resourceName:s,resource:l,actions:c||ie,uiFramework:u};ct(P,d),c&&ie.forEach(T=>{c.includes(T)||(0,C.unlinkSync)(`${P}/${T}.tsx`)}),(0,C.mkdirSync)(r,{recursive:!0});let p=`${r}/${a}`,m={};(0,C.pathExistsSync)(p)&&(m={overwrite:!0}),(0,C.moveSync)(P,p,m),ce.default.cleanupSync();let f=require.resolve(".bin/jscodeshift"),{stderr:N,stdout:I}=pt.default.sync(f,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**",`--__actions=${d.actions}`,`--__pathAlias=${Q(h()).alias}`,`--__resourceFolderName=${a}`,`--__resource=${l}`,`--__resourceName=${s}`]);N&&console.log(N),console.log(`\u{1F389} Resource (${p}) generated successfully!`)})},Wr=()=>(ce.default.track(),ce.default.mkdirSync("resource"));var Yr=e=>{let t=h(),{path:r}=Q(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(qr)},qr=async(e,t)=>{le(e,t.args)},dt=Yr;var ut=i(require("dotenv"));ut.config();var Jr={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Xr=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,n]of Object.entries(Jr))if(n.test(e)){t=r;break}return t},k={NODE_ENV:Xr(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};var ft=i(require("express")),pe=require("http-proxy-middleware"),Hr=e=>e.command("proxy").description("Manage proxy settings").action(Kr).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",k.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",k.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",k.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",k.REFINE_PROXY_REWRITE_URL),Kr=async({port:e,target:t,domain:r,rewriteUrl:n})=>{let o=(0,ft.default)(),c=new URL(t).protocol==="http:"?a=>{var g;a.headers["set-cookie"]&&((g=a.headers["set-cookie"])==null||g.forEach((l,u)=>{a&&a.headers&&a.headers["set-cookie"]&&(a.headers["set-cookie"][u]=l.replace("Secure;",""))}))}:void 0;o.use("/.refine",(0,pe.createProxyMiddleware)({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:a=>{`${a}`.includes("Proxy rewrite rule created")||(`${a}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):a&&console.log(a))},warn:console.warn,debug:console.debug,error:console.error})})),o.use("/.auth",(0,pe.createProxyMiddleware)({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${n}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:a=>{`${a}`.includes("Proxy rewrite rule created")||(`${a}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):a&&console.log(a))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:c})),o.use("*",(0,pe.createProxyMiddleware)({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:a=>{`${a}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):a&&console.log(a)},warn:console.warn,debug:console.debug,error:console.error})})),o.listen(Number(e))},gt=Hr;var Et=require("commander");var wt=i(require("conf")),yt=i(require("chalk"));var ht=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var Gr="refine-update-notifier",_=new wt.default({projectName:Gr,defaults:{key:"",lastUpdated:0,packages:[]}}),V=async()=>{if(ro())return;let e=await Qr();if(e!==null){if(e){vt();return}Zr(),vt()}},Zr=async()=>{let e=_.get("packages");e!=null&&e.length&&(await ae({data:e}),console.log(`
`))},Qr=async()=>{let e=await to(),t=eo();return e===null?null:!!(t||!e)},vt=async()=>{try{let e=await Z();return _.set("packages",e),_.set("lastUpdated",Date.now()),_.set("key",await xt()),e}catch{return _.set("packages",[]),_.set("lastUpdated",Date.now()),_.set("key",""),null}},eo=()=>{let e=_.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,n=Number(k.UPDATE_NOTIFIER_CACHE_TTL);return r>=n},to=async()=>{let e=_.get("key"),t=await xt();return t===null?null:e===t},xt=async()=>{let e=await z();if(!e)return console.error(yt.default.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(n=>`${n.name}@${n.version}`);return ht(t.toString())},ro=()=>k.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var E={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return require.resolve(`${process.cwd()}/node_modules/.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};var Pt=i(require("execa")),D=async(e,t)=>{var n,o;if(e==="unknown"){let s=Object.values(w).filter(c=>c!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${s}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=(0,Pt.default)(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(n=r.stdout)==null||n.pipe(process.stdout),(o=r.stderr)==null||o.pipe(process.stderr),await r};var W=e=>{let t=h(),r=[];switch(e){case"dev":r=E[t].getDev([""]);break;case"start":r=E[t].getStart([""]);break;case"build":r=E[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},Y=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var oo=e=>e.command("start").description(W("start")).allowUnknownOption(!0).addOption(new Et.Option("-p, --platform <platform>",Y()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(no),no=async(e,{platform:t})=>{let r=h(t),n=E[r].getBin("start"),o=E[r].getStart(e);await V(),D(n,o)},Re=oo;var Se=require("commander");var kt=require("@refinedev/devtools-server");var Rt=i(require("execa"));var me=require("prettier"),Ie=async e=>{try{let t=await(0,me.resolveConfig)(process.cwd());return(0,me.format)(e,{...t??{},parser:"typescript"})}catch{return e}};var It=async()=>{let e=require.resolve(".bin/jscodeshift"),{stderr:t}=Rt.default.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**"]);t&&console.log(t)};var Ct=()=>{let t=$().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};var Nt=i(require("boxen")),St=i(require("cardinal")),ke=i(require("chalk")),bt=require("commander"),Tt=i(require("dedent")),de=i(require("semver")),so=["start","init"],ao="start",Ot="4.42.0",io=e=>e.command("devtools").description("Start or install refine's devtools server; it starts on port 5001.").addArgument(new bt.Argument("[command]","devtools related commands").choices(so).default(ao)).addHelpText("after",`
Commands:
    start     Start refine's devtools server
    init      Install refine's devtools client and adds it to your project
`).action(co),co=async e=>{switch(e){case"start":Ne();return;case"init":lo();return}},lo=async()=>{var o;let e=await Ce();if(await j(ne,"Checking if devtools is installed...")){console.log("\u{1F389} refine devtools is already installed");return}if(e&&await _t({pkg:e}))return;console.log("\u{1F331} Installing refine devtools...");let r=["@refinedev/devtools@latest"];if((!e||de.default.lt(e.version,Ot))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} refine core package is being updated for devtools...")),await Je(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await It(),console.log("\u2705 refine devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let s=await Ce();console.log(`\u2705 refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(s==null?void 0:s.version)??"unknown"}`),console.log(`   Changelog: ${ke.default.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:n}=Ct();if(n){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!n){let s=(o=$().scripts)==null?void 0:o.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log((0,Nt.default)(St.default.highlight((0,Tt.default)(`
                {
                    "scripts": {
                        "dev": "${s} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Ne=async()=>{let e=await Ce();if(e){if(await _t({pkg:e}))return;if(de.default.lt(e.version,Ot)){console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`);let t=await x();console.log(`\u{1F449} You can update @refinedev/core package by running "${t.name} run refine update"`);return}}(0,kt.server)()},Ce=async()=>{let e=await K(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},_t=async({pkg:e})=>e.name==="@pankod/refine-core"||de.default.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update refine."),console.log(ke.default.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,Dt=io;var po=e=>e.command("dev").description(W("dev")).allowUnknownOption(!0).addOption(new Se.Option("-p, --platform <platform>",Y()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new Se.Option("-d, --devtools <devtools>","Start refine's devtools server").default("true","true if devtools is installed")).argument("[args...]").action(mo),mo=async(e,{platform:t,...r})=>{let n=h(t),o=E[n].getBin("dev"),s=E[n].getDev(e);await V();let c=await ne();(r.devtools==="false"?!1:c)&&Ne(),D(o,s)},be=po;var At=require("commander");var uo=e=>e.command("build").description(W("build")).allowUnknownOption(!0).addOption(new At.Option("-p, --platform <platform>",Y()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(fo),fo=async(e,{platform:t})=>{let r=h(t),n=E[r].getBin("build"),o=E[r].getBuild(e);await V();try{await D(n,o)}catch{process.exit(1)}},Te=uo;var Oe=i(require("chalk"));var go=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(ho),ho=async e=>{let[t,...r]=e,n=re();if(!t){console.log(`Available via ${Oe.default.blue("`refine run`")}:
`);for(let[c,a]of Object.entries(n))console.log(`  ${c}`),console.log(`    ${Oe.default.dim(a)}`),console.log();return}if(!Object.keys(n).includes(t)){let c=`${process.cwd()}/node_modules/.bin/${t}`;D(c,r);return}let s=await x();D(s.name,["run",t,...r])},_e=go;var $e=i(require("path")),M=i(require("chalk")),ee=i(require("inquirer")),nr=i(require("inquirer-autocomplete-prompt")),A=require("fs-extra");var Ae=i(require("path"));var Lt=i(require("path"));var De={};Ar(De,{PackageManagerTypes:()=>nt,ProjectTypes:()=>w,UIFrameworks:()=>Pe,appendAfterImports:()=>Ft,getFileContent:()=>ue,getImports:()=>q,getNameChangeInImport:()=>$t});var vo=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,wo=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,q=e=>{let t=e.matchAll(vo),r=[];for(let n of t){let[o,s,c,a,g]=n;r.push({statement:o,importPath:g,...s&&{defaultImport:s},...c&&{namedImports:c},...a&&{namespaceImport:a}})}return r==null?void 0:r.filter(Boolean)},$t=e=>{let t=e.matchAll(wo),r=[];for(let n of t){let[o,s,c,a,g]=n;r.push({statement:o,fromName:s.trim(),toName:a.trim(),afterCharacter:g})}return r},yo=(e,t)=>{var s;let r=e.substring(0,e.indexOf(t.statement)),n=q(r).pop();return n?r.substring(r.indexOf(n==null?void 0:n.statement)+((s=n==null?void 0:n.statement)==null?void 0:s.length)):r},xo=(e,t)=>!!(t?yo(e,t):"").trim(),jt=["react","@refinedev/core","@refinedev/"],Ut=e=>{var d;let t=e,r=q(e),n=r.filter(p=>!p.statement.includes("import type ")),o=r.filter(p=>p.statement.includes("import type")),s=[],c=[];n.forEach(p=>{xo(e,p)?s.push(p):c.push(p)});let a=t.indexOf((d=c==null?void 0:c[0])==null?void 0:d.statement);c.forEach(p=>{t=t.replace(p.statement,"")}),o.forEach(p=>{t=t.replace(p.statement,"")});let g=c.reduce((p,m)=>{let{importPath:f}=m;return p[f]?p[f].push(m):p[f]=[m],p},{}),v=[...Object.entries(g).map(([p,m])=>{let f=m.find(S=>S.defaultImport),N=m.find(S=>S.namespaceImport),I=m.filter(S=>S.namedImports).map(S=>(S.namedImports??"").replace(/{|}/g,"").trim().split(",").map(we=>we.trim()).filter(Boolean).join(", ")).join(", "),T="";return N&&(T+=N.statement+`
`),(f||I)&&(f&&I?T+=`import ${f.defaultImport}, { ${I} } from "${m[0].importPath}";
`:f?T+=`import ${f.defaultImport} from "${m[0].importPath}";
`:T+=`import { ${I} } from "${m[0].importPath}";
`),[p,T]})].sort(([p],[m])=>{let f=jt.findIndex(I=>p.includes(I)),N=jt.findIndex(I=>m.includes(I));return f===N?p.localeCompare(m):f===-1?1:N===-1?-1:f-N}).map(([,p])=>p).join(""),P=o.map(p=>p.statement).join(`
`);return t=t.substring(0,a)+v+P+t.substring(a),t};var Ft=(e,t)=>{let r=q(e),n=r[r.length-1],o=n?e.indexOf(n.statement):e.length-1;return e.slice(0,o+(n==null?void 0:n.statement.length))+`
`+t+`
`+e.slice(o+(n==null?void 0:n.statement.length))};var Bt=require("fs-extra"),Mt=require("path");function ue(e){if(this!=null&&this.absolutePackageDir)try{return(0,Bt.readFileSync)((0,Mt.join)(this.absolutePackageDir,e)).toString()}catch{return}}var zt=require("module"),Po=zt.prototype.require,Vt=(e,t)=>{zt.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...De,getFileContent:n=>ue.call({absolutePackageDir:t?e:Lt.default.join(process.cwd(),e)},n)}:Po.apply(this,r)}};var je=async(e,t)=>{try{return Vt(e,t),require(Ae.default.join(t?e:Ae.default.join(process.cwd(),e),"refine.config.js"))}catch{return}};var Kt=i(require("dedent"));var R={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};var y=i(require("chalk"));var Wt=i(require("chalk")),Yt=i(require("cardinal")),qt=i(require("boxen")),Eo=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,n]=t.exec(e)??[];if(n){let o=n.trim(),s=e.replace(r||"","");return{title:o,code:s}}return{code:e}},Jt=e=>{let{title:t,code:r}=Eo(e),n="";try{n=Yt.default.highlight(r,{jsx:!0})}catch{n=r}return(0,qt.default)(n,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?Wt.default.bold(t):void 0})};var Xt=require("marked"),Ht=i(require("marked-terminal")),fe=e=>(0,Xt.marked)(e,{renderer:new Ht.default({code:Jt})});var Gt=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let n=t.filter(([,l])=>Object.values(R).filter(u=>u!==R.SUCCESS).includes(l)),o="success";switch(n.length){case 0:o="success";break;case t.length:o="error";break;default:o="warning";break}let s=l=>{let u=l==null?void 0:l.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},c=()=>{switch(o){case"success":console.log(y.default.blueBright(`Successfully swizzled ${y.default.bold(e)}`));return;case"warning":console.log(y.default.yellowBright(`Swizzle completed with errors for ${y.default.bold(e)}`));return;case"error":console.log(y.default.redBright(`Swizzle failed for ${y.default.bold(e)}`));return;default:return}},a=()=>{let l=[];l.push(y.default.dim(`File${t.length>1?"s":""} created:`)),l.push(t.map(([u,v])=>v===R.SUCCESS?y.default.cyanBright.dim(` - ${s(u)}`):v===R.TARGET_ALREADY_EXISTS?y.default.cyanBright.dim(` - ${y.default.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${s(u)}`):v===R.SOURCE_PATH_NOT_A_FILE?y.default.cyanBright.dim(` - ${y.default.yellowBright.bold("[SOURCE NOT FOUND] ")}${s(u)}`):y.default.cyanBright.dim(` - ${y.default.yellowBright.bold(`[${v}]`)}${s(u)}`)).join(`
`)),console.log(l.join(`
`))},g=()=>{r&&o!=="error"&&console.log(fe((0,Kt.default)(`
`+r)))};console.log(""),c(),a(),console.log(""),g()};var Zt=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};var sr=i(require("boxen"));var Qt=()=>{let e;try{e=h()}catch{e=void 0}return it(e)};var er=i(require("inquirer")),tr=i(require("chalk"));var rr=async e=>{await Ro(e)?await oe(e):await Io(e)},Ro=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(n=>` - ${n}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await er.default.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},Io=async e=>{let t=await x(),r=U[t.name].install.join(" "),n=e.join(" "),o=`${t.name} ${r} ${n}`;console.log(`
You can install them manually by running this command:`),console.log(tr.default.bold.blueBright(o))};var Co=e=>e.command("swizzle").description(`Export a component or a function from ${M.default.bold("refine")} packages to customize it in your project`).action(ko),or=e=>(t,r="")=>e.filter(o=>{var s;return o.label.toLowerCase().includes(r.toLowerCase())||((s=o.group)==null?void 0:s.toLowerCase().includes(r.toLowerCase()))}).flatMap((o,s,c)=>{var l;return[...(o==null?void 0:o.group)&&((l=c[s-1])==null?void 0:l.group)!==o.group&&o.group?[new ee.default.Separator(`${M.default.bold(o.group)}`)]:[],{name:` ${o.label}`,value:o!=null&&o.value?o.value:o}]}),ko=async e=>{var u,v,P;ee.default.registerPrompt("autocomplete",nr.default);let t=await K(),r=[];if(await Promise.all(t.map(async d=>{let p=await qe(d.path),m=r.findIndex(f=>f.name===d.name)===-1;p&&m&&r.push(d)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${(0,sr.default)(`Found ${M.default.blueBright(r.length)} installed ${M.default.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let n=await Promise.all(r.map(async d=>{let p=await je(d.path,!0)??await je(d.path,!1)??{swizzle:{items:[]}};return{...d,config:p}})),{selectedPackage:o}=await ee.default.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:or(n.sort((d,p)=>{var m,f;return(((m=d.config)==null?void 0:m.group)??"").localeCompare(((f=p.config)==null?void 0:f.group)??"")}).map(d=>{var p,m;return{label:((p=d.config)==null?void 0:p.name)??d.name,value:d,group:(m=d.config)==null?void 0:m.group}}))}]),{swizzle:{items:s,transform:c}}=o.config,a;if(s.length===0){console.log(`No swizzle items found for ${M.default.bold(((u=o.config)==null?void 0:u.name)??o.name)}`);return}else s.length===1?a=s[0]:s.length>1&&(a=(await ee.default.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:or(s.sort((p,m)=>p.group.localeCompare(m.group)))({},"")}])).selectedComponent);if(!a){console.log(`No swizzle items selected for ${M.default.bold(((v=o.config)==null?void 0:v.name)??o.name)}`);return}let g=Qt(),l=await Promise.all(a.files.map(async d=>{var p;try{let m=d.src?$e.default.join(o.path,d.src):void 0,f=d.dest?$e.default.join(process.cwd(),g,d.dest):void 0;if(!m)return console.log("No src path found for file",d),["",R.SOURCE_PATH_NOT_FOUND];if(!f)return console.log("No destination path found for file",d),["",R.TARGET_PATH_NOT_FOUND];if(!await(0,A.pathExists)(m))return[f,R.SOURCE_PATH_NOT_A_FILE];let I=await(0,A.readFile)(m,"utf-8");if(await(0,A.pathExists)(f))return[f,R.TARGET_ALREADY_EXISTS];await(0,A.ensureFile)(f);let S=Zt(I),ve=((p=d.transform)==null?void 0:p.call(d,S))??S,we=(c==null?void 0:c(ve,m,f))??ve,Nr=Ut(we),Sr=await Ie(Nr);return await(0,A.writeFile)(f,Sr),[f,R.SUCCESS]}catch{return["",R.UNKNOWN_ERROR]}}));l.length>0&&(Gt({files:l,label:a.label,message:a.message}),(P=a==null?void 0:a.requiredPackages)!=null&&P.length&&await rr(a.requiredPackages))},ar=Co;var lr=require("commander");var J=i(require("inquirer")),Ue=i(require("semver-diff")),ge=i(require("chalk"));var ir=e=>{let t=e.filter((n,o)=>e.indexOf(n)!==o),r=new Set(t);return Array.from(r)};var cr=async e=>{let t=So(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=bo(t),n=await J.default.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:No}]);return n.packages.length>0?n.packages:null},No=e=>{let r=e.map(o=>Xe(o)).map(o=>o.name),n=ir(r);return n.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${n.join(", ")}`:!0},So=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let n=r.current,o=(0,Ue.default)(n,r.wanted),s=(0,Ue.default)(n,r.latest);if(o===s&&s){t[s].push({name:r.name,from:n,to:r.latest});return}o&&t[o].push({name:r.name,from:n,to:r.wanted}),s&&t[s].push({name:r.name,from:n,to:r.latest})}),t},bo=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(l=>{l.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let n=[],o="Package".padEnd(t),s="From".padEnd(r),a=`
   ${o} ${s}${"To".padStart(r)}`;n.push(new J.default.Separator(a)),e.patch.length>0&&(n.push(new J.default.Separator(ge.default.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(l=>{n.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})})),e.minor.length>0&&(n.push(new J.default.Separator(ge.default.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(l=>{n.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})})),e.major.length>0&&(n.push(new J.default.Separator(ge.default.reset.bold.blue(`
Major Updates`))),e.major.forEach(l=>{n.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})}));let g=n.length+6;return{choices:n,pageSize:g}};var To=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new lr.Option("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(Oo),Oo=async e=>{let{tag:t,dryRun:r,all:n}=e,o=await j(Z,"Checking for updates...");if(!(o!=null&&o.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let s=n?_o(t,o):await cr(o);if(s){if(r){Do(s);return}Ao(s)}},_o=(e,t)=>e==="wanted"&&t.every(o=>o.current===o.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(n=>{let o=e==="wanted"?n.wanted:e;return`${n.name}@${o}`}),Do=async e=>{let t=await x(),r=U[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},Ao=e=>{console.log("Updating `refine` packages..."),console.log(e),oe(e)},pr=To;var mr=i(require("envinfo")),dr=i(require("ora")),jo=e=>e.command("whoami").description("View the details of the development environment").action($o),$o=async()=>{let e=(0,dr.default)("Loading environment details...").start(),t=await mr.default.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),n=(await z()||[]).map(o=>` - ${o.name}: ${o.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(n)},ur=jo;var Me=require("commander");var X=require("fs-extra"),Fe=require("path");var L=`${__dirname}/../templates/provider`,Be=["auth","live","data","access-control","notification","i18n","audit-log"],fr=(e,t)=>{e.forEach(r=>{let{fileName:n,templatePath:o}=Uo(r),s=t??Fo(),c=(0,Fe.join)(s,n),a=(0,Fe.join)(process.cwd(),s,n);if((0,X.pathExistsSync)(a)){console.error(`\u274C Provider (${c}) already exist!`);return}(0,X.mkdirSync)(s,{recursive:!0}),(0,X.copySync)(o,a),console.log(`\u{1F389} Provider (${c}) created successfully!`)})},he={auth:{fileName:"auth-provider.tsx",templatePath:`${L}/demo-auth-provider.tsx`},live:{fileName:"live-provider.tsx",templatePath:`${L}/demo-live-provider.tsx`},data:{fileName:"data-provider.tsx",templatePath:`${L}/demo-data-provider.tsx`},"access-control":{fileName:"access-control-provider.tsx",templatePath:`${L}/demo-access-control-provider.tsx`},notification:{fileName:"notification-provider.tsx",templatePath:`${L}/demo-notification-provider.tsx`},i18n:{fileName:"i18n-provider.tsx",templatePath:`${L}/demo-i18n-provider.tsx`},"audit-log":{fileName:"audit-log-provider.tsx",templatePath:`${L}/demo-audit-log-provider.tsx`}},Uo=e=>{if(!(he!=null&&he[e]))throw new Error(`Invalid provider: ${e}`);return he[e]},Fo=()=>{let e=h(),{path:t}=at(e);return t};var Bo=e=>e.command("add").allowExcessArguments(!1).addArgument(new Me.Argument("[provider]","Create a new provider").choices([...Be,"resource"]).argOptional()).addArgument(new Me.Argument("[resource...]","Create a new resource files").argOptional()).option("-p, --path [path]","Path to generate files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Mo),Mo=async(e,t,r,n)=>{let o=n==null?void 0:n.args;if(!o.length){await zo();return}let{providers:s,resources:c}=Lo(o);s.length&&fr(s,r==null?void 0:r.path),o.includes("resource")&&le({actions:r==null?void 0:r.actions,path:r==null?void 0:r.path},c)},Lo=e=>{let t=e.findIndex(o=>o==="resource");if(t===-1)return{providers:gr(e),resources:[]};let r=gr(e.slice(0,t)),n=e.slice(t+1);return{providers:r,resources:n}},zo=async()=>{let{name:e}=await x();console.log("\u274C Please provide a feature name"),console.log(`For more information please use: "${e} run refine add help"`)},gr=e=>e.filter(t=>Be.includes(t)?!0:(console.log(`\u274C "${t}" is not a valid provider`),!1)),hr=Bo;var vr=i(require("envinfo")),wr=i(require("os")),Vo=()=>{let e=wr.default.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},yr=async()=>{let[e,t]=await vr.default.helpers.getOSInfo();return{name:Vo(),version:t}};var xr=i(require("node-fetch")),Wo=async()=>{let e=await yr();return{nodeEnv:k.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await z()||[],projectFramework:h(),projectId:He()}},Pr=async()=>{if(k.REFINE_NO_TELEMETRY!=="true")try{let e=await Wo();await(0,xr.default)("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};var Er=i(require("gray-matter")),Rr=i(require("boxen"));var Yo="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",Le="---announcement",qo=e=>e.split(Le).slice(1).map(r=>`${Le}${r}`),Jo=e=>{let t=e.replace(Le,"---"),r=(0,Er.default)(t),n=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:n}},Xo=async()=>{try{let e=await fetch(Yo).then(r=>r.text()).catch(()=>"");return qo(e).map(r=>Jo(r))}catch{return[]}},Ir=async()=>{let t=(await Xo()).filter(n=>!n.hidden);if(t.length===0)return;let r=t.map(n=>{let o=t.length>1?"\u2014 ":"",s=fe(n.content);return`${o}${s}`}).join("").trim();console.log((0,Rr.default)(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var Ho="1.0.0",Ko=()=>{let e=new Cr.Command;e.version(`@refinedev/cli@${Ho}`,"-v, --version","Output the current version.").description(kr.default.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),ar(e),dt(e),pr(e),be(e),Te(e),Re(e),_e(e),ot(e),ur(e),gt(e),Dt(e),hr(e),e.hook("preAction",Ir),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||Pr()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Ko();
//# sourceMappingURL=cli.js.map