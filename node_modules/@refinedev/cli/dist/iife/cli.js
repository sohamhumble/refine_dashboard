#!/usr/bin/env node
(()=>{var pn=Object.create;var Se=Object.defineProperty;var mn=Object.getOwnPropertyDescriptor;var un=Object.getOwnPropertyNames;var fn=Object.getPrototypeOf,gn=Object.prototype.hasOwnProperty;var i=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var rt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),hn=(e,t)=>{for(var r in t)Se(e,r,{get:t[r],enumerable:!0})},vn=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of un(t))!gn.call(e,o)&&o!==r&&Se(e,o,{get:()=>t[o],enumerable:!(n=mn(t,o))||n.enumerable});return e};var p=(e,t,r)=>(r=e!=null?pn(fn(e)):{},vn(t||!e||!e.__esModule?Se(r,"default",{value:e,enumerable:!0}):r,e));var ye=rt((ps,Ht)=>{var Vn=Object.create,ve=Object.defineProperty,Mn=Object.getOwnPropertyDescriptor,Bn=Object.getOwnPropertyNames,Wn=Object.getPrototypeOf,Hn=Object.prototype.hasOwnProperty,zn=(e,t)=>{for(var r in t)ve(e,r,{get:t[r],enumerable:!0})},Ut=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Bn(t))!Hn.call(e,o)&&o!==r&&ve(e,o,{get:()=>t[o],enumerable:!(n=Mn(t,o))||n.enumerable});return e},Jn=(e,t,r)=>(r=e!=null?Vn(Wn(e)):{},Ut(t||!e||!e.__esModule?ve(r,"default",{value:e,enumerable:!0}):r,e)),Yn=e=>Ut(ve({},"__esModule",{value:!0}),e),Ft={};zn(Ft,{DevToolsContext:()=>Wt,DevToolsContextProvider:()=>Xn,DevtoolsEvent:()=>qt,hooksByScope:()=>Gn,receive:()=>Bt,scopes:()=>Vt,send:()=>Mt});Ht.exports=Yn(Ft);var qt=(e=>(e.RELOAD="devtools:reload",e.DEVTOOLS_INIT="devtools:init",e.DEVTOOLS_HANDSHAKE="devtools:handshake",e.DEVTOOLS_ALREADY_CONNECTED="devtools:already-connected",e.ACTIVITY="devtools:send-activity",e.DEVTOOLS_ACTIVITY_UPDATE="devtools:activity-update",e.DEVTOOLS_CONNECTED_APP="devtools:connected-app",e.DEVTOOLS_DISCONNECTED_APP="devtools:disconnected-app",e.DEVTOOLS_HIGHLIGHT_IN_MONITOR="devtools:highlight-in-monitor",e.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION="devtools:highlight-in-monitor-action",e.DEVTOOLS_LOGIN_SUCCESS="devtools:login-success",e.DEVTOOLS_RELOAD_AFTER_LOGIN="devtools:reload-after-login",e))(qt||{}),Vt={useCan:"access-control",useLog:"audit-log",useLogList:"audit-log",useCreate:"data",useCreateMany:"data",useCustom:"data",useCustomMutation:"data",useDelete:"data",useDeleteMany:"data",useInfiniteList:"data",useList:"data",useMany:"data",useOne:"data",useUpdate:"data",useUpdateMany:"data",useForgotPassword:"auth",useGetIdentity:"auth",useIsAuthenticated:"auth",useLogin:"auth",useLogout:"auth",useOnError:"auth",usePermissions:"auth",useRegister:"auth",useUpdatePassword:"auth"},Gn=Object.entries(Vt).reduce((e,[t,r])=>(e[r]||(e[r]=[]),e[r].push(t),e),{}),K=Jn(i("react"));async function Mt(e,t,r){if(e.readyState!==e.OPEN){await new Promise(n=>{let o=()=>{e.send(JSON.stringify({event:t,payload:r})),n(),e.removeEventListener("open",o)};e.addEventListener("open",o)});return}else{e.send(JSON.stringify({event:t,payload:r}));return}}function Bt(e,t,r){let n=o=>{let{event:a,payload:c}=JSON.parse(o.data);t===a&&r(c)};return e.addEventListener("message",n),()=>{e.removeEventListener("message",n)}}var Wt=K.default.createContext({__devtools:!1,port:5002,url:"localhost",secure:!1,ws:null}),Xn=({__devtools:e,port:t,children:r})=>{let[n,o]=K.default.useState({__devtools:e??!1,port:t??5002,url:"localhost",secure:!1,ws:null}),[a,c]=K.default.useState(null);K.default.useEffect(()=>{let d=new WebSocket(`${n.secure?"wss":"ws"}://localhost:${n.port}`),l=Bt(d,"devtools:handshake",u=>{o(w=>({...w,devtoolsUrl:u.url})),l()});return d.addEventListener("open",()=>{n.__devtools||Mt(d,"devtools:init",{url:window.location.origin})}),c(d),()=>{l(),d.close(1e3,window.location.origin)}},[]);let s=K.default.useMemo(()=>({...n,ws:a}),[n,a]);return K.default.createElement(Wt.Provider,{value:s},r)}});var nr=rt((gs,rr)=>{var Kn=Object.create,Ee=Object.defineProperty,Qn=Object.getOwnPropertyDescriptor,Zn=Object.getOwnPropertyNames,eo=Object.getPrototypeOf,to=Object.prototype.hasOwnProperty,ro=(e,t)=>{for(var r in t)Ee(e,r,{get:t[r],enumerable:!0})},Xt=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Zn(t))!to.call(e,o)&&o!==r&&Ee(e,o,{get:()=>t[o],enumerable:!(n=Qn(t,o))||n.enumerable});return e},y=(e,t,r)=>(r=e!=null?Kn(eo(e)):{},Xt(t||!e||!e.__esModule?Ee(r,"default",{value:e,enumerable:!0}):r,e)),no=e=>Xt(Ee({},"__esModule",{value:!0}),e),Kt={};ro(Kt,{server:()=>ia});rr.exports=no(Kt);var oo=y(i("express")),P=ye(),ao=y(i("express")),zt=y(i("path")),io=e=>{e.use(ao.default.static(zt.default.join(__dirname,"client"))),e.use((t,r,n)=>{if(t.path.startsWith("/api")||t.path.startsWith("/open-in-editor"))return n();r.status(200).sendFile(zt.default.join(__dirname+"/client/index.html"))})},so=y(i("ws")),Le="https://cloud2.refine.dev",co="https://raw.githubusercontent.com/refinedev/refine/master/packages/devtools-server/FEED.md",Jt=ye(),we=i("chalk"),lo=()=>{let e=new so.default.Server({port:5002}).on("error",t=>{(t==null?void 0:t.code)==="EADDRINUSE"?console.error(`
${we.cyanBright.bold("\u2717 ")}${(0,we.bold)("refine devtools")} failed to start. Port 5002 is already in use, please make sure no other devtools server is running
`):console.error(`
${we.cyanBright.bold("\u2717 ")}${(0,we.bold)("error from refine devtools")}`,t),process.exit(1)});return e.on("connection",t=>{(0,Jt.send)(t,Jt.DevtoolsEvent.DEVTOOLS_HANDSHAKE,{url:"http://localhost:5001"}),t.on("close",()=>{t.terminate()})}),process.on("SIGTERM",()=>{e.close(()=>{})}),e},ms=i("lodash"),us=ye(),fs=i("ws"),po=()=>0,W=i("chalk"),mo=e=>{let t=e.listen(5001,()=>{}).on("error",r=>{(r==null?void 0:r.code)==="EADDRINUSE"?console.error(`
${W.cyanBright.bold("\u2717 ")}${(0,W.bold)("refine devtools")} failed to start. Port 5001 is already in use, please make sure no other devtools server is running
`):console.error(`
${W.cyanBright.bold("\u2717 ")}${(0,W.bold)("error from refine devtools")}`,r),process.exit(1)}).on("listening",()=>{console.log(`
${W.cyanBright.bold("\u2713 ")}${(0,W.bold)("refine devtools")} is running at port ${W.cyanBright.bold(5001)}
`)});process.on("SIGTERM",()=>{t.close(()=>{})})},uo={connectedApp:null,clientWs:null,devtoolsWsClients:[],appWsClients:[],activities:[],packages:[]},fo=()=>({...uo}),go=i("express"),ho=y(i("lodash/uniq")),vo=y(i("node-fetch")),yo=y(i("gray-matter")),je=i("marked"),$e=y(i("sanitize-html")),wo=e=>e.split("---section").slice(1).map(t=>`---section${t}`),Po=e=>{let t=new je.marked.Renderer;t.link=function(...n){return je.marked.Renderer.prototype.link.apply(this,n).replace(/^<a/,'<a target="_blank" rel="noopener noreferrer"')};let r=(0,je.marked)(e,{renderer:t});return(0,$e.default)(r,{allowedTags:$e.default.defaults.allowedTags.concat(["img"]),allowedAttributes:{...$e.default.defaults.allowedAttributes,img:["src"]}})},Eo=e=>{let t=(0,yo.default)(e.replace("---section","---"));return{...t.data,content:Po(t.content)}},xo=async()=>{try{return(await(0,vo.default)(co)).text()}catch{return""}},Ro=async()=>{try{let e=await xo();return wo(e).map(Eo)}catch{return[]}},Io=y(i("fs")),bo=y(i("path")),Co=y(i("globby")),Oo=async e=>{try{let t=await(0,Co.default)(`node_modules/${e}/package.json`,{onlyFiles:!0}),r=null;try{let n=i.resolve(bo.default.join(e,"package.json"));n&&(r=n)}catch{}return[...t,...r?[r]:[]][0]??null}catch{return null}},To=async e=>{try{let t=await Oo(e);if(!t)return null;let r=JSON.parse(Io.default.readFileSync(t,{encoding:"utf-8"}));return{name:r.name,version:r.version,description:r.description}}catch{return null}},Ao=y(i("path")),So=i("fs-extra"),Qt=async(e=process.cwd())=>{let t=await(0,So.readJSON)(Ao.default.join(e,"package.json"),{encoding:"utf-8"});return Object.keys(t.dependencies).filter(r=>r.startsWith("@refinedev/"))},ko=e=>e.replace("@refinedev/","https://c.refine.dev/"),_o=e=>"https://refine.dev/docs/api-reference/general-concepts/",No=async e=>{try{let t=await Qt(e);return await Promise.all(t.map(async r=>{let n=await To(r);return{name:r,currentVersion:n==null?void 0:n.version,description:n==null?void 0:n.description,changelog:ko(r),documentation:_o(r)}}))}catch{return[]}},v=y(i("dedent")),Do=[{name:"@refinedev/ably",description:"Ably integration for refine",install:"npm install @refinedev/ably",usage:(0,v.default)(`
            import { liveProvider, Ably } from "@refinedev/ably";

            export const ablyClient = new Ably.Realtime("YOUR_API_TOKEN");

            const App = () => {
                return (
                    <Refine
                        liveProvider={liveProvider(ablyClient)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
        `.trim())},{name:"@refinedev/airtable",description:"Airtable integration for refine",install:"npm install @refinedev/airtable",usage:(0,v.default)(`
            import dataProvider from "@refinedev/airtable";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_KEY", "BASE_ID")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/antd",description:"Ant Design integration for refine",install:"npm install @refinedev/antd antd",usage:(0,v.default)(`
            import { ThemedLayoutV2 } from "@refinedev/antd";

            import "@refinedev/antd/dist/reset.css";

            const App = () => {
                return (
                    <Refine
                        /* ... */
                    >
                        <ThemedLayoutV2>
                            {/* ... */}
                        </ThemedLayoutV2>
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/appwrite",description:"Appwrite integration for refine",install:"npm install @refinedev/appwrite",usage:(0,v.default)(`
            import { dataProvider, liveProvider, Account, Appwrite, Storage } from "@refinedev/appwrite";

            const appwriteClient = new Appwrite();
            appwriteClient.setEndpoint("API_URL").setProject("PROJECT_ID");

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(appwriteClient, { databaseId: "default" })}
                        liveProvider={liveProvider(appwriteClient, { databaseId: "default" })}
                        /* ... */
                    >
                        <ThemedLayout>
                            {/* ... */}
                        </ThemedLayout>
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/chakra-ui",description:"Chakra UI integration for refine",install:"npm install @refinedev/chakra-ui @chakra-ui/react @emotion/react @emotion/styled framer-motion",usage:(0,v.default)(`
            import { ThemedLayoutV2 } from "@refinedev/chakra-ui";
            import { ChakraProvider } from "@chakra-ui/react";

            const App = () => {
                return (
                        <ChakraProvider>
                        <Refine
                            /* ... */
                        >
                            <ThemedLayoutV2>
                                {/* ... */}
                            </ThemedLayoutV2>
                        </Refine>
                    </ChakraProvider>
                );
            };
            `.trim())},{name:"@refinedev/graphql",description:"GraphQL integration for refine",install:"npm install @refinedev/graphql",usage:(0,v.default)(`
            import dataProvider, { GraphQLClient } from "@refinedev/graphql";

            const client = new GraphQLClient("YOUR_API_URL");

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(client)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/hasura",description:"GraphQL integration for refine",install:"npm install @refinedev/hasura",usage:(0,v.default)(`
            import dataProvider, { GraphQLClient } from "@refinedev/hasura";

            const client = new GraphQLClient("HASURA_API_URL", {
                headers: {
                    "x-hasura-role": "public",
                },
            });

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(client)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/inferencer",description:"Auto generate views based on your APIs with refine",install:"npm install @refinedev/inferencer",usage:(0,v.default)(`
        import { AntdInferencer } from "@refinedev/inferencer/antd";

        const App = () => {
            return (
                <Refine
                    /* ... */
                >
                    <AntdInferencer action="list" resource="posts" />
                </Refine>
            );
        };
        `.trim())},{name:"@refinedev/kbar",description:"Command palette integration with kbar for refine",install:"npm install @refinedev/kbar",usage:(0,v.default)(`
            import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";

            const App = () => {
                return (
                    <RefineKbarProvider>
                        <Refine
                            /* ... */
                        >
                            <RefineKbar />
                        </Refine>
                    </RefineKbarProvider>
                );
            };
        `.trim())},{name:"@refinedev/mantine",description:"Mantine UI integration for refine",install:"npm install @refinedev/mantine @refinedev/react-table @mantine/core @mantine/hooks @mantine/form @mantine/notifications @emotion/react @tabler/icons",usage:(0,v.default)(`
            import { ThemedLayoutV2 } from "@refinedev/mantine";
            import { MantineProvider } from "@mantine/core";

            const App = () => {
                return (
                    <MantineProvider>
                        <Refine
                            /* ... */
                        >
                            <ThemedLayoutV2>
                                {/* ... */}
                            </ThemedLayoutV2>
                        </Refine>
                    </MantineProvider>
                );
            };
            `.trim())},{name:"@refinedev/medusa",description:"Medusa store integration for refine",install:"npm install @refinedev/medusa",usage:(0,v.default)(`
            import dataProvider, { authProvider } from "@refinedev/medusa";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_URL")}
                        authProvider={authProvider("API_URL")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/mui",description:"Material UI integration for refine",install:"npm install @refinedev/mui @refinedev/react-hook-form @mui/material @mui/lab @mui/x-data-grid @emotion/react @emotion/styled react-hook-form",usage:(0,v.default)(`
            import { ThemedLayoutV2 } from "@refinedev/mui";

            import CssBaseline from "@mui/material/CssBaseline";
            import GlobalStyles from "@mui/material/GlobalStyles";
            import { ThemeProvider } from "@mui/material/styles";

            const App = () => {
                return (
                    <ThemeProvider>
                        <CssBaseline />
                        <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />
                        <Refine
                            /* ... */
                        >
                            <ThemedLayoutV2>
                                {/* ... */}
                            </ThemedLayoutV2>
                        </Refine>
                    </ThemeProvider>
                );
            };
            `.trim())},{name:"@refinedev/nestjs-query",description:"NestJS Query data provider integration for refine",install:"npm install @refinedev/nestjs-query graphql-ws",usage:(0,v.default)(`
            import dataProvider, {
                GraphQLClient,
                liveProvider,
            } from "@refinedev/nestjs-query";

            import { createClient } from "graphql-ws";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(new GraphQLClient( "API_URL" ))}
                        liveProvider={liveProvider(createClient({ url: "WS_URL" }))}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/nestjsx-crud",description:"NestJSX CRUD data provider integration for refine",install:"npm install @refinedev/nestjsx-crud",usage:(0,v.default)(`
            import dataProvider from "@refinedev/nestjsx-crud";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_URL")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/nhost",description:"NHost data provider and live provider integrations for refine",install:"npm install @refinedev/nhost @nhost/nhost-js @nhost/react-auth",usage:(0,v.default)(`
            import { NhostClient } from "@nhost/nhost-js";
            import dataProvider, { graphqlWS } from "@refinedev/nhost";

            const nhost = new NhostClient({ backendUrl: "NHOST_API_URL" });

            const gqlWsClient = graphqlWS.createClient({
                url: WS_URL,
                connectionParams: () => ({
                    headers: {
                        Authorization: \`Bearer \${nhost.auth.getJWTToken()}\`,
                    },
                })
            });

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(nhost)}
                        liveProvider={liveProvider(gqlWsClient)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/react-hook-form",description:"React Hook Form integration for refine",install:"npm install @refinedev/react-hook-form react-hook-form",usage:(0,v.default)(`
            import { useForm } from "@refinedev/react-hook-form";

            const EditPost = () => {
                const {
                    register,
                    handleSubmit,
                    formState,
                    refineCore,
                } = useForm({
                    refineCoreProps: {
                        resource: "posts",
                        id: "1",
                    },
                });

                return /* ... */
            };
            `.trim())},{name:"@refinedev/react-table",description:"Tanstack React Table integration for refine",install:"npm install @refinedev/react-table @tanstack/react-table",usage:(0,v.default)(`
            import { useTable } from "@refinedev/react-table";

            import { ColumnDef, flexRender } from "@tanstack/react-table";

            const EditPost = () => {
                const columns = React.useMemo<ColumnDef<IPost>[]>(
                    () => [
                        {
                            id: "id",
                            header: "ID",
                            accessorKey: "id",
                        },
                        {
                            id: "title",
                            header: "Title",
                            accessorKey: "title",
                            meta: {
                                filterOperator: "contains",
                            },
                        },
                ], []);

                const tableInstance = useTable({
                    columns,
                    refineCoreProps: {
                        resource: "posts",
                    }
                });

                return /* ... */
            };
            `.trim())},{name:"@refinedev/simple-rest",description:"Data provider integration for REST APIs with refine",install:"npm install @refinedev/simple-rest",usage:(0,v.default)(`
            import dataProvider from "@refinedev/simple-rest";

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider("API_URL")}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/supabase",description:"Data provider and live provider integrations for Supabase with refine",install:"npm install @refinedev/supabase",usage:(0,v.default)(`
            import { dataProvider, liveProvider, createClient } from "@refinedev/supabase";

            const supabaseClient = createClient("SUPABASE_URL", "SUPABASE_KEY");

            const App = () => {
                return (
                    <Refine
                        dataProvider={dataProvider(supabaseClient)}
                        liveProvider={liveProvider(supabaseClient)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/strapi",description:"Strapi integration of refine",install:"npm install @refinedev/strapi axios",usage:(0,v.default)(`
            import { DataProvider, AuthHelper } from "@refinedev/strapi";

            const axiosInstance = axios.create();
            const strapiAuthHelper = AuthHelper("API_URL");

            const App = () => {
                return (
                    <Refine
                        dataProvider={DataProvider("API_URL", axiosInstance)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/strapi-v4",description:"StrapiV4 integration of refine",install:"npm install @refinedev/strapi-v4 axios",usage:(0,v.default)(`
            import { DataProvider, AuthHelper } from "@refinedev/strapi-v4";

            const axiosInstance = axios.create();
            const strapiAuthHelper = AuthHelper("API_URL");

            const App = () => {
                return (
                    <Refine
                        dataProvider={DataProvider("API_URL", axiosInstance)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())},{name:"@refinedev/strapi-graphql",description:"Strapi GraphQL integration of refine",install:"npm install @refinedev/strapi-graphql",usage:(0,v.default)(`
            import dataProvider, { GraphQLClient } from "@refinedev/strapi-graphql";

            const client = new GraphQLClient("API_URL");

            const App = () => {
                return (
                    <Refine
                    dataProvider={dataProvider(client)}
                        /* ... */
                    >
                        {/* ... */}
                    </Refine>
                );
            };
            `.trim())}],jo=async e=>{let t=await Qt(e);return Do.filter(r=>!t.includes(r.name))},$o=y(i("preferred-pm")),Lo=y(i("execa")),Uo=async(e,t=process.cwd())=>{try{let{name:r}=await(0,$o.default)(t)??{name:"npm"},{failed:n}=await(0,Lo.default)(r??"npm",["install",...e.map(o=>`${o}@latest`)]);return!n}catch{return!1}},Fo=y(i("execa")),qo=async e=>{try{let{stdout:t}=await(0,Fo.default)("npm",["view",e,"name","version","--json"]);return JSON.parse(t)}catch{return{name:e}}},Vo=i("fs-extra"),Mo=y(i("path")),Zt=async(e=process.cwd())=>{var t;try{let r=await(0,Vo.readJSON)(Mo.default.join(e,"package.json"),{encoding:"utf-8"});return((t=r==null?void 0:r.refine)==null?void 0:t.projectId)||!1}catch{return null}},Bo=y(i("execa")),Wo=async(e,t=process.cwd())=>{try{return Bo.default.sync("npm",["pkg","set",`refine.projectId=${e}`],{cwd:t}),!0}catch{return null}},Ho=y(i("execa")),Yt=y(i("path")),zo=async(e,t=process.cwd())=>{try{let r=i.resolve(".bin/jscodeshift"),n=Ho.default.sync(r,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${Yt.default.resolve(Yt.default.join(__dirname,"..","src","project-id","transform.ts"))}`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/dist/**","--ignore-pattern=**/.next/**",`--__projectId=${e}`],{cwd:t,timeout:1e3*10});n.stderr&&console.error(n.stderr)}catch(r){console.error(r)}},Jo=async(e,t=process.cwd())=>{try{return await Promise.all([Wo(e,t),zo(e,t)]),!0}catch{return!1}},Yo=(e,t)=>{e.use("/api",(0,go.json)()),e.get("/api/connected-app",(c,s)=>{s.json({url:t.connectedApp})}),e.get("/api/activities",(c,s)=>{let{offset:d=0,limit:l=t.activities.length}=c.query;s.setHeader("x-total-count",t.activities.length),s.json({data:t.activities.slice(Number(d),Number(l))})}),e.get("/api/activities/reset",(c,s)=>{t.activities=[],s.json({success:!0})}),e.get("/api/unique-trace-items",(c,s)=>{s.header("Access-Control-Allow-Origin","*"),s.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept");let d=t.activities.flatMap(u=>{var w;return((w=u.trace)==null?void 0:w.map(x=>x.function).filter(Boolean))??[]}),l=(0,ho.default)(d);s.setHeader("x-total-count",l.length),s.json({data:l})});let r=null;e.get("/api/installed-packages",async(c,s)=>{let{force:d}=c.query??{};(!r||d)&&(r=await No()),s.header("x-total-count",`${r.length}`),s.json({data:r})});let n=null;e.get("/api/available-packages",async(c,s)=>{n||(n=await jo()),s.header("x-total-count",`${n.length}`),s.json({data:n})});let o=new Map;e.get("/api/packages/:packageName/latest",async(c,s)=>{let{packageName:d}=c.params??{};if(!d){s.status(400).json({error:"Package name is required"});return}if(!o.has(d)){let l=await qo(d);o.set(d,l)}return s.json({data:o.get(d)})}),e.post("/api/packages/install",async(c,s)=>{let{packages:d}=c.body??{};if((d==null?void 0:d.length)===0){s.status(400).json({error:"Package name is required"});return}await Uo(d)?(r=null,n=null,s.status(200).json({success:!0})):s.status(400).json({success:!1,error:"Failed to update package"})});let a=null;e.get("/api/feed",async(c,s)=>{a||(a=await Ro()),s.header("x-total-count",`${a.length}`),s.json({data:a})}),e.get("/api/project-id/status",async(c,s)=>{let d=await Zt();if(d){s.status(200).json({projectId:d});return}else if(d===!1){s.status(404).json({projectId:null});return}else{s.status(500).json({projectId:null});return}}),e.post("/api/project-id/update",async(c,s)=>{let{projectId:d}=c.body??{};if(!d){s.status(400).json({error:"Project ID is required"});return}if(await Jo(d)){s.status(200).json({success:!0});return}else{s.status(500).json({success:!1,error:"Failed to update project ID"});return}})},er=i("fs-extra"),Go=i("@ory/client"),Gt=i("http-proxy-middleware"),tr=y(i("path")),Pe=null,Xo=async(e,t,r)=>{Pe||(Pe=await Zt()),Pe&&(e.headers["x-project-id"]=Pe),r()},Ko=function(e,t){if(t.body){let r=JSON.stringify(t.body);e.setHeader("Content-Type","application/json"),e.setHeader("Content-Length",Buffer.byteLength(r)),e.write(r)}},Qo=async e=>{try{let t=`${Le}/.auth`,r=new Go.FrontendApi({isJsonMime:()=>!0,basePath:t,baseOptions:{withCredentials:!0}}),{data:n}=await r.toSession({xSessionToken:e,tokenizeAs:"jwt_template_1"});return n==null?void 0:n.tokenized}catch{}},Zo=async(e,t)=>{try{(0,er.writeJSON)(tr.default.join(__dirname,"..",".persist.json"),{token:e,jwt:t})}catch{}},ea=async()=>{try{return await(0,er.readJSON)(tr.default.join(__dirname,"..",".persist.json"))}catch{}return{token:void 0,jwt:void 0}},ta=e=>function(t,r){if(r.url.includes("self-service/logout/api")){let n=JSON.stringify({session_token:e});t.setHeader("Content-Length",Buffer.byteLength(n)),t.write(n)}},ra=e=>function(t,r,n){let o="";t.on("data",a=>{o+=a}),t.on("end",()=>{var a;let c;try{c=JSON.parse(o).session_token}catch{}if(!c){if((a=o==null?void 0:o.includes)!=null&&a.call(o,"an+account+with+the+same+identifier")){n.redirect("/after-login?error=An+account+with+the+same+identifier+exists+already");return}n.redirect("/after-login?error=Invalid-session-token");return}Qo(c).then(s=>{e(c,s??""),n.redirect("/after-login")})})},na=async e=>{let{token:t,jwt:r}=await ea(),n=(0,Gt.createProxyMiddleware)({target:Le,changeOrigin:!0,pathRewrite:{"^/api/.auth":"/.auth"},cookieDomainRewrite:{"refine.dev":""},logLevel:"silent",headers:{"auth-base-url-rewrite":"http://localhost:5001/api/.auth"},selfHandleResponse:!0,onProxyReq:(a,c,...s)=>{t&&(a.setHeader("X-Session-Token",t??""),ta(t)(a,c,...s))},onProxyRes:(a,c,s)=>{if(c.url.includes("self-service/methods/oidc/callback"))return ra((d,l)=>{t=d,r=l,Zo(t,r)})(a,c,s);s.writeHead(a.statusCode||500,a.headers),a.pipe(s,{end:!0})}});e.use("/api/.auth",n);let o=(0,Gt.createProxyMiddleware)({target:Le,secure:!1,changeOrigin:!0,logLevel:"silent",pathRewrite:{"^/api/.refine":"/.refine"},onProxyReq:(a,...c)=>{r&&(a.setHeader("Authorization",`Bearer ${r}`),a.removeHeader("cookie")),Ko(a,...c)}});e.use("/api/.refine",Xo,o)},oa=y(i("path")),aa=(e,t)=>{e.get("/open-in-editor/*",(r,n)=>{let{line:o,column:a}=r.query,c=r.path.replace("/open-in-editor",""),s=`vscode://file/${oa.default.join(t,c)}?${o?`line=${o}`:""}${a?`&column=${a}`:""}`;n.redirect(s)})},ia=async({projectPath:e=process.cwd()}={})=>{let t=(0,oo.default)(),r=lo(),n=fo();r.on("connection",o=>{(0,P.receive)(o,P.DevtoolsEvent.DEVTOOLS_INIT,a=>{n.connectedApp?(0,P.send)(o,P.DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED,{url:n.connectedApp}):(n.connectedApp=a.url,n.clientWs=o,r.clients.forEach(c=>{(0,P.send)(c,P.DevtoolsEvent.DEVTOOLS_CONNECTED_APP,{url:n.connectedApp})}))}),(0,P.receive)(o,P.DevtoolsEvent.ACTIVITY,a=>{let c=n.activities.findIndex(d=>d.identifier===a.identifier),s={...a,createdAt:Date.now(),updatedAt:Date.now()};c>-1?(s.createdAt=n.activities[c].createdAt,n.activities[c]=s):n.activities.push(s),r.clients.forEach(d=>{(0,P.send)(d,P.DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE,{updatedActivities:[s]})})}),(0,P.receive)(o,P.DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR,({name:a})=>{r.clients.forEach(c=>{(0,P.send)(c,P.DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION,{name:a})})}),(0,P.receive)(o,P.DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS,()=>{r.clients.forEach(a=>{(0,P.send)(a,P.DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN,{})})}),o.on("close",(a,c)=>{n.clientWs&&(r.clients.has(n.clientWs)||(n.clientWs=null,n.connectedApp=null,n.activities=[],r.clients.forEach(s=>{(0,P.send)(s,P.DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP,{url:n.connectedApp})})))})}),po(r),io(t),mo(t),Yo(t,n),na(t),aa(t,e)}});var sn=i("commander"),cn=p(i("figlet"));var gt=p(i("cli-table3")),M=p(i("chalk")),pe=p(i("center-align"));var nt=p(i("ora")),yn=async(e,t)=>{let r=(0,nt.default)({color:"cyan",text:t}).start(),n=await e();return r.stop(),n},F=yn;var se=p(i("execa")),j=i("fs-extra"),ot=p(i("globby")),ke=p(i("path")),at=p(i("preferred-pm"));var q=()=>{if(!(0,j.existsSync)("package.json"))throw new Error("./package.json not found");return JSON.parse((0,j.readFileSync)("package.json","utf8"))},te=()=>{let e=q();return Object.keys(e.dependencies||{})};var it=()=>{let e=q();return Object.keys(e.devDependencies||{})},ce=()=>q().scripts,J=async()=>{var e;try{let t=await(0,se.default)("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},n=Object.keys(r).filter(a=>a.startsWith("@refinedev")||a.startsWith("@pankod/refine-")),o=[];for(let a of n){let c=r[a].version;o.push({name:a,version:c})}return o}catch{return Promise.resolve(null)}},re=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","nhost","react-hook-form","react-location","react-router-v6","react-table","remix","shared","simple-rest","strapi","strapi-graphql","strapi-v4","supabase"];try{let t=await(0,ot.default)("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(o=>{try{let a=i.resolve(ke.default.join("@refinedev",o,"package.json"));return[ke.default.dirname(a)]}catch{return[]}}),n=[];return await Promise.all([...r,...t].map(async o=>{if(await(0,j.pathExists)(`${o}/package.json`)){let c=await(0,j.readJSON)(`${o}/package.json`);n.push({name:c.name,version:c.version,path:o})}})),n}catch{return[]}},st=async e=>await(0,j.pathExists)(`${e}/refine.config.js`),V={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]}},b=async()=>{let e=await F(()=>(0,at.default)(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},le=async e=>{let t=await b();try{let r=V[t.name].install,n=(0,se.default)(t.name,[...r,...e],{stdio:"inherit"});n.on("message",o=>{console.log(o)}),n.on("error",o=>{console.log(o)}),n.on("exit",o=>{if(o===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${o}`)})}catch(r){throw new Error(r)}},ct=async e=>{let t=await b();try{let r=V[t.name].install,n=se.default.sync(t.name,[...r,...e],{stdio:"inherit"});if(n.failed||n.exitCode!==0)throw new Error(n.stderr);return n}catch(r){throw new Error(r)}},lt=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},dt=()=>{var t;let e=q();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},de=async()=>(await re()).some(t=>t.name==="@refinedev/devtools");var pt=e=>e.charAt(0).toUpperCase()+e.slice(1),mt=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var ne={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},ut=[ne.name,ne.current,ne.wanted,ne.latest,ne.changelog],me=async e=>{var c;let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let n=new gt.default({head:ut,style:{head:["blue"]}});t.forEach(s=>{n.push(ut.map(d=>{let l=s[d];if(!l)return l;if(d==="latest"||d==="wanted"){let u=ft(s.current),w=ft(l),x=wn(u,w),g=M.default[x.major](w.major),m=M.default[x.minor](w.minor),f=M.default[x.patch](w.patch);return`${g}.${m}.${f}`}return d==="changelog"?M.default.blueBright.underline(l):l}))});let o=n.toString(),a=mt(((c=o.split(`
`))==null?void 0:c[0])||"").length;console.log(),console.log((0,pe.default)("Update Available",a)),console.log(o),console.log((0,pe.default)(`To update ${M.default.bold("`refine`")} packages with wanted version`,a)),console.log((0,pe.default)(` Run the following command: ${M.default.yellowBright(await Pn())}`,a)),console.log()},ft=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},wn=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},Pn=async()=>{let e="npx @refinedev/cli update",t=te(),r=Object.keys(ce()),n=t.includes("@refinedev/cli"),o=r.includes("refine");if(!n&&!o)return e;let a=await b();return o?`${a.name} run refine update`:n?"npx refine update":e};var ht=p(i("execa"));var vt=p(i("semver-diff")),En=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(xn),xn=async()=>{let e=await F(oe,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await me({data:e})},oe=async()=>await Rn(),Rn=async()=>{let e=await In();if(!e)return[];let t=[],r;return Object.keys(e).forEach(o=>{let a=e[o];o.includes("@refinedev")&&(r=o.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:o,current:a.current,wanted:a.wanted,latest:a.latest,changelog:r}))}),t.filter(o=>!!(0,vt.default)(o.current,o.latest))},In=async()=>{let e="npm",{stdout:t,timedOut:r}=await(0,ht.default)(e,V[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},yt=En;var R=(s=>(s.REACT_SCRIPT="react-scripts",s.REMIX="remix",s.NEXTJS="nextjs",s.VITE="vite",s.CRACO="craco",s.PARCEL="parcel",s.UNKNOWN="unknown",s))(R||{});var _e=(o=>(o.ANTD="antd",o.MUI="mui",o.MANTINE="mantine",o.CHAKRA="chakra-ui",o))(_e||{});var wt=(n=>(n.NPM="npm",n.YARN="yarn",n.PNPM="pnpm",n))(wt||{});var E=e=>{if(e)return e;let t=te(),r=it();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Pt=()=>{let e=te();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var ae=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},Et=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},xt=e=>{switch(e){case"remix":return"./app";case"nextjs":case"react-scripts":case"vite":case"craco":case"parcel":case"unknown":default:return"./src"}};var A=i("fs-extra"),fe=p(i("temp")),It=i("pluralize"),bt=p(i("execa")),Ct=p(i("inquirer")),Ne=i("path");var B=p(i("handlebars")),N=i("fs-extra"),bn=(e,t)=>{let r=(0,N.readFileSync)(e);return B.default.registerHelper("ifIn",function(o,a,c){return o.includes(a)?c.fn(B.default):c.inverse(B.default)}),B.default.registerHelper("formatInferencerComponent",function(o){if(o)switch(o){case"chakra-ui":return"ChakraUI";default:return o.charAt(0).toUpperCase()+o.slice(1)}}),B.default.registerHelper("capitalize",function(o){if(o)return o.charAt(0).toUpperCase()+o.slice(1)}),B.default.compile(r.toString())(t)},Rt=(e,t)=>{(0,N.readdirSync)(e).forEach(n=>{let o=`${e}/${n}`,a=`${e}/${n.replace(".hbs","")}`;(0,N.createFileSync)(a),(0,N.writeFileSync)(a,bn(o,t)),(0,N.unlinkSync)(o)})};var ue=["list","create","edit","show"],ge=async(e,t)=>{var o;let r=(e==null?void 0:e.path)||ae(E()).path,n=e.actions||ue.join(",");if(!t.length){let{name:a,selectedActions:c}=await Ct.default.prompt([{type:"input",name:"name",message:"Resource Name",validate:s=>s?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ue,default:(o=e==null?void 0:e.actions)==null?void 0:o.split(",")}]);t=[a],n=c.join(",")}t.forEach(a=>{let c=n?n.split(","):void 0,s=(0,It.plural)(a).toLowerCase(),d=(0,Ne.join)(process.cwd(),r,s);if((0,A.pathExistsSync)(d)){console.error(`\u274C Resource (${(0,Ne.join)(r,s)}) already exist!`);return}let l=pt(a),u=Pt(),w=`${__dirname}/../templates/resource`,x=Cn();(0,A.copySync)(w,x);let g={resourceName:a,resource:l,actions:c||ue,uiFramework:u};Rt(x,g),c&&ue.forEach(D=>{c.includes(D)||(0,A.unlinkSync)(`${x}/${D}.tsx`)}),(0,A.mkdirSync)(r,{recursive:!0});let m=`${r}/${s}`,f={};(0,A.pathExistsSync)(m)&&(f={overwrite:!0}),(0,A.moveSync)(x,m,f),fe.default.cleanupSync();let h=i.resolve(".bin/jscodeshift"),{stderr:k,stdout:T}=bt.default.sync(h,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**",`--__actions=${g.actions}`,`--__pathAlias=${ae(E()).alias}`,`--__resourceFolderName=${s}`,`--__resource=${l}`,`--__resourceName=${a}`]);k&&console.log(k),console.log(`\u{1F389} Resource (${m}) generated successfully!`)})},Cn=()=>(fe.default.track(),fe.default.mkdirSync("resource"));var On=e=>{let t=E(),{path:r}=ae(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(Tn)},Tn=async(e,t)=>{ge(e,t.args)},Ot=On;var Tt=p(i("dotenv"));Tt.config();var An={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Sn=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,n]of Object.entries(An))if(n.test(e)){t=r;break}return t},S={NODE_ENV:Sn(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};var At=p(i("express")),he=i("http-proxy-middleware"),kn=e=>e.command("proxy").description("Manage proxy settings").action(_n).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",S.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",S.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",S.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",S.REFINE_PROXY_REWRITE_URL),_n=async({port:e,target:t,domain:r,rewriteUrl:n})=>{let o=(0,At.default)(),c=new URL(t).protocol==="http:"?s=>{var d;s.headers["set-cookie"]&&((d=s.headers["set-cookie"])==null||d.forEach((l,u)=>{s&&s.headers&&s.headers["set-cookie"]&&(s.headers["set-cookie"][u]=l.replace("Secure;",""))}))}:void 0;o.use("/.refine",(0,he.createProxyMiddleware)({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error})})),o.use("/.auth",(0,he.createProxyMiddleware)({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${n}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:c})),o.use("*",(0,he.createProxyMiddleware)({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):s&&console.log(s)},warn:console.warn,debug:console.debug,error:console.error})})),o.listen(Number(e))},St=kn;var Lt=i("commander");var Nt=p(i("conf")),Dt=p(i("chalk"));var kt=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var Nn="refine-update-notifier",$=new Nt.default({projectName:Nn,defaults:{key:"",lastUpdated:0,packages:[]}}),Y=async()=>{if(Un())return;let e=await jn();if(e!==null){if(e){_t();return}Dn(),_t()}},Dn=async()=>{let e=$.get("packages");e!=null&&e.length&&(await me({data:e}),console.log(`
`))},jn=async()=>{let e=await Ln(),t=$n();return e===null?null:!!(t||!e)},_t=async()=>{try{let e=await oe();return $.set("packages",e),$.set("lastUpdated",Date.now()),$.set("key",await jt()),e}catch{return $.set("packages",[]),$.set("lastUpdated",Date.now()),$.set("key",""),null}},$n=()=>{let e=$.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,n=Number(S.UPDATE_NOTIFIER_CACHE_TTL);return r>=n},Ln=async()=>{let e=$.get("key"),t=await jt();return t===null?null:e===t},jt=async()=>{let e=await J();if(!e)return console.error(Dt.default.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(n=>`${n.name}@${n.version}`);return kt(t.toString())},Un=()=>S.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var C={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>i.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>i.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>i.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return i.resolve(`${process.cwd()}/node_modules/.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>i.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>i.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};var $t=p(i("execa")),L=async(e,t)=>{var n,o;if(e==="unknown"){let a=Object.values(R).filter(c=>c!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${a}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=(0,$t.default)(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(n=r.stdout)==null||n.pipe(process.stdout),(o=r.stderr)==null||o.pipe(process.stderr),await r};var G=e=>{let t=E(),r=[];switch(e){case"dev":r=C[t].getDev([""]);break;case"start":r=C[t].getStart([""]);break;case"build":r=C[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},X=()=>`Platform to run command on. 
ex: ${Object.values(R).join(", ")}`;var Fn=e=>e.command("start").description(G("start")).allowUnknownOption(!0).addOption(new Lt.Option("-p, --platform <platform>",X()).choices(Object.values(R).filter(t=>t!=="unknown"))).argument("[args...]").action(qn),qn=async(e,{platform:t})=>{let r=E(t),n=C[r].getBin("start"),o=C[r].getStart(e);await Y(),L(n,o)},De=Fn;var Me=i("commander");var sr=p(nr());var or=p(i("execa"));var xe=i("prettier"),Ue=async e=>{try{let t=await(0,xe.resolveConfig)(process.cwd());return(0,xe.format)(e,{...t??{},parser:"typescript"})}catch{return e}};var ar=async()=>{let e=i.resolve(".bin/jscodeshift"),{stderr:t}=or.default.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**"]);t&&console.log(t)};var ir=()=>{let t=q().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};var cr=p(i("boxen")),lr=p(i("cardinal")),qe=p(i("chalk")),dr=i("commander"),pr=p(i("dedent")),Re=p(i("semver")),sa=["start","init"],ca="start",mr="4.42.0",la=e=>e.command("devtools").description("Start or install refine's devtools server; it starts on port 5001.").addArgument(new dr.Argument("[command]","devtools related commands").choices(sa).default(ca)).addHelpText("after",`
Commands:
    start     Start refine's devtools server
    init      Install refine's devtools client and adds it to your project
`).action(da),da=async e=>{switch(e){case"start":Ve();return;case"init":pa();return}},pa=async()=>{var o;let e=await Fe();if(await F(de,"Checking if devtools is installed...")){console.log("\u{1F389} refine devtools is already installed");return}if(e&&await ur({pkg:e}))return;console.log("\u{1F331} Installing refine devtools...");let r=["@refinedev/devtools@latest"];if((!e||Re.default.lt(e.version,mr))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} refine core package is being updated for devtools...")),await ct(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await ar(),console.log("\u2705 refine devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let a=await Fe();console.log(`\u2705 refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(a==null?void 0:a.version)??"unknown"}`),console.log(`   Changelog: ${qe.default.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:n}=ir();if(n){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!n){let a=(o=q().scripts)==null?void 0:o.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log((0,cr.default)(lr.default.highlight((0,pr.default)(`
                {
                    "scripts": {
                        "dev": "${a} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Ve=async()=>{let e=await Fe();if(e){if(await ur({pkg:e}))return;if(Re.default.lt(e.version,mr)){console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`);let t=await b();console.log(`\u{1F449} You can update @refinedev/core package by running "${t.name} run refine update"`);return}}(0,sr.server)()},Fe=async()=>{let e=await re(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},ur=async({pkg:e})=>e.name==="@pankod/refine-core"||Re.default.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update refine."),console.log(qe.default.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,fr=la;var ma=e=>e.command("dev").description(G("dev")).allowUnknownOption(!0).addOption(new Me.Option("-p, --platform <platform>",X()).choices(Object.values(R).filter(t=>t!=="unknown"))).addOption(new Me.Option("-d, --devtools <devtools>","Start refine's devtools server").default("true","true if devtools is installed")).argument("[args...]").action(ua),ua=async(e,{platform:t,...r})=>{let n=E(t),o=C[n].getBin("dev"),a=C[n].getDev(e);await Y();let c=await de();(r.devtools==="false"?!1:c)&&Ve(),L(o,a)},Be=ma;var gr=i("commander");var fa=e=>e.command("build").description(G("build")).allowUnknownOption(!0).addOption(new gr.Option("-p, --platform <platform>",X()).choices(Object.values(R).filter(t=>t!=="unknown"))).argument("[args...]").action(ga),ga=async(e,{platform:t})=>{let r=E(t),n=C[r].getBin("build"),o=C[r].getBuild(e);await Y();try{await L(n,o)}catch{process.exit(1)}},We=fa;var He=p(i("chalk"));var ha=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(va),va=async e=>{let[t,...r]=e,n=ce();if(!t){console.log(`Available via ${He.default.blue("`refine run`")}:
`);for(let[c,s]of Object.entries(n))console.log(`  ${c}`),console.log(`    ${He.default.dim(s)}`),console.log();return}if(!Object.keys(n).includes(t)){let c=`${process.cwd()}/node_modules/.bin/${t}`;L(c,r);return}let a=await b();L(a.name,["run",t,...r])},ze=ha;var Xe=p(i("path")),H=p(i("chalk")),ie=p(i("inquirer")),Fr=p(i("inquirer-autocomplete-prompt")),U=i("fs-extra");var Ye=p(i("path"));var xr=p(i("path"));var Je={};hn(Je,{PackageManagerTypes:()=>wt,ProjectTypes:()=>R,UIFrameworks:()=>_e,appendAfterImports:()=>wr,getFileContent:()=>Ie,getImports:()=>Q,getNameChangeInImport:()=>vr});var ya=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,wa=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Q=e=>{let t=e.matchAll(ya),r=[];for(let n of t){let[o,a,c,s,d]=n;r.push({statement:o,importPath:d,...a&&{defaultImport:a},...c&&{namedImports:c},...s&&{namespaceImport:s}})}return r==null?void 0:r.filter(Boolean)},vr=e=>{let t=e.matchAll(wa),r=[];for(let n of t){let[o,a,c,s,d]=n;r.push({statement:o,fromName:a.trim(),toName:s.trim(),afterCharacter:d})}return r},Pa=(e,t)=>{var a;let r=e.substring(0,e.indexOf(t.statement)),n=Q(r).pop();return n?r.substring(r.indexOf(n==null?void 0:n.statement)+((a=n==null?void 0:n.statement)==null?void 0:a.length)):r},Ea=(e,t)=>!!(t?Pa(e,t):"").trim(),hr=["react","@refinedev/core","@refinedev/"],yr=e=>{var g;let t=e,r=Q(e),n=r.filter(m=>!m.statement.includes("import type ")),o=r.filter(m=>m.statement.includes("import type")),a=[],c=[];n.forEach(m=>{Ea(e,m)?a.push(m):c.push(m)});let s=t.indexOf((g=c==null?void 0:c[0])==null?void 0:g.statement);c.forEach(m=>{t=t.replace(m.statement,"")}),o.forEach(m=>{t=t.replace(m.statement,"")});let d=c.reduce((m,f)=>{let{importPath:h}=f;return m[h]?m[h].push(f):m[h]=[f],m},{}),w=[...Object.entries(d).map(([m,f])=>{let h=f.find(_=>_.defaultImport),k=f.find(_=>_.namespaceImport),T=f.filter(_=>_.namedImports).map(_=>(_.namedImports??"").replace(/{|}/g,"").trim().split(",").map(Ae=>Ae.trim()).filter(Boolean).join(", ")).join(", "),D="";return k&&(D+=k.statement+`
`),(h||T)&&(h&&T?D+=`import ${h.defaultImport}, { ${T} } from "${f[0].importPath}";
`:h?D+=`import ${h.defaultImport} from "${f[0].importPath}";
`:D+=`import { ${T} } from "${f[0].importPath}";
`),[m,D]})].sort(([m],[f])=>{let h=hr.findIndex(T=>m.includes(T)),k=hr.findIndex(T=>f.includes(T));return h===k?m.localeCompare(f):h===-1?1:k===-1?-1:h-k}).map(([,m])=>m).join(""),x=o.map(m=>m.statement).join(`
`);return t=t.substring(0,s)+w+x+t.substring(s),t};var wr=(e,t)=>{let r=Q(e),n=r[r.length-1],o=n?e.indexOf(n.statement):e.length-1;return e.slice(0,o+(n==null?void 0:n.statement.length))+`
`+t+`
`+e.slice(o+(n==null?void 0:n.statement.length))};var Pr=i("fs-extra"),Er=i("path");function Ie(e){if(this!=null&&this.absolutePackageDir)try{return(0,Pr.readFileSync)((0,Er.join)(this.absolutePackageDir,e)).toString()}catch{return}}var Rr=i("module"),xa=Rr.prototype.require,Ir=(e,t)=>{Rr.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...Je,getFileContent:n=>Ie.call({absolutePackageDir:t?e:xr.default.join(process.cwd(),e)},n)}:xa.apply(this,r)}};var Ge=async(e,t)=>{try{return Ir(e,t),i(Ye.default.join(t?e:Ye.default.join(process.cwd(),e),"refine.config.js"))}catch{return}};var kr=p(i("dedent"));var O={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};var I=p(i("chalk"));var br=p(i("chalk")),Cr=p(i("cardinal")),Or=p(i("boxen")),Ra=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,n]=t.exec(e)??[];if(n){let o=n.trim(),a=e.replace(r||"","");return{title:o,code:a}}return{code:e}},Tr=e=>{let{title:t,code:r}=Ra(e),n="";try{n=Cr.default.highlight(r,{jsx:!0})}catch{n=r}return(0,Or.default)(n,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?br.default.bold(t):void 0})};var Ar=i("marked"),Sr=p(i("marked-terminal")),be=e=>(0,Ar.marked)(e,{renderer:new Sr.default({code:Tr})});var _r=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let n=t.filter(([,l])=>Object.values(O).filter(u=>u!==O.SUCCESS).includes(l)),o="success";switch(n.length){case 0:o="success";break;case t.length:o="error";break;default:o="warning";break}let a=l=>{let u=l==null?void 0:l.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},c=()=>{switch(o){case"success":console.log(I.default.blueBright(`Successfully swizzled ${I.default.bold(e)}`));return;case"warning":console.log(I.default.yellowBright(`Swizzle completed with errors for ${I.default.bold(e)}`));return;case"error":console.log(I.default.redBright(`Swizzle failed for ${I.default.bold(e)}`));return;default:return}},s=()=>{let l=[];l.push(I.default.dim(`File${t.length>1?"s":""} created:`)),l.push(t.map(([u,w])=>w===O.SUCCESS?I.default.cyanBright.dim(` - ${a(u)}`):w===O.TARGET_ALREADY_EXISTS?I.default.cyanBright.dim(` - ${I.default.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${a(u)}`):w===O.SOURCE_PATH_NOT_A_FILE?I.default.cyanBright.dim(` - ${I.default.yellowBright.bold("[SOURCE NOT FOUND] ")}${a(u)}`):I.default.cyanBright.dim(` - ${I.default.yellowBright.bold(`[${w}]`)}${a(u)}`)).join(`
`)),console.log(l.join(`
`))},d=()=>{r&&o!=="error"&&console.log(be((0,kr.default)(`
`+r)))};console.log(""),c(),s(),console.log(""),d()};var Nr=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};var qr=p(i("boxen"));var Dr=()=>{let e;try{e=E()}catch{e=void 0}return xt(e)};var jr=p(i("inquirer")),$r=p(i("chalk"));var Lr=async e=>{await Ia(e)?await le(e):await ba(e)},Ia=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(n=>` - ${n}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await jr.default.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},ba=async e=>{let t=await b(),r=V[t.name].install.join(" "),n=e.join(" "),o=`${t.name} ${r} ${n}`;console.log(`
You can install them manually by running this command:`),console.log($r.default.bold.blueBright(o))};var Ca=e=>e.command("swizzle").description(`Export a component or a function from ${H.default.bold("refine")} packages to customize it in your project`).action(Oa),Ur=e=>(t,r="")=>e.filter(o=>{var a;return o.label.toLowerCase().includes(r.toLowerCase())||((a=o.group)==null?void 0:a.toLowerCase().includes(r.toLowerCase()))}).flatMap((o,a,c)=>{var l;return[...(o==null?void 0:o.group)&&((l=c[a-1])==null?void 0:l.group)!==o.group&&o.group?[new ie.default.Separator(`${H.default.bold(o.group)}`)]:[],{name:` ${o.label}`,value:o!=null&&o.value?o.value:o}]}),Oa=async e=>{var u,w,x;ie.default.registerPrompt("autocomplete",Fr.default);let t=await re(),r=[];if(await Promise.all(t.map(async g=>{let m=await st(g.path),f=r.findIndex(h=>h.name===g.name)===-1;m&&f&&r.push(g)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${(0,qr.default)(`Found ${H.default.blueBright(r.length)} installed ${H.default.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let n=await Promise.all(r.map(async g=>{let m=await Ge(g.path,!0)??await Ge(g.path,!1)??{swizzle:{items:[]}};return{...g,config:m}})),{selectedPackage:o}=await ie.default.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:Ur(n.sort((g,m)=>{var f,h;return(((f=g.config)==null?void 0:f.group)??"").localeCompare(((h=m.config)==null?void 0:h.group)??"")}).map(g=>{var m,f;return{label:((m=g.config)==null?void 0:m.name)??g.name,value:g,group:(f=g.config)==null?void 0:f.group}}))}]),{swizzle:{items:a,transform:c}}=o.config,s;if(a.length===0){console.log(`No swizzle items found for ${H.default.bold(((u=o.config)==null?void 0:u.name)??o.name)}`);return}else a.length===1?s=a[0]:a.length>1&&(s=(await ie.default.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:Ur(a.sort((m,f)=>m.group.localeCompare(f.group)))({},"")}])).selectedComponent);if(!s){console.log(`No swizzle items selected for ${H.default.bold(((w=o.config)==null?void 0:w.name)??o.name)}`);return}let d=Dr(),l=await Promise.all(s.files.map(async g=>{var m;try{let f=g.src?Xe.default.join(o.path,g.src):void 0,h=g.dest?Xe.default.join(process.cwd(),d,g.dest):void 0;if(!f)return console.log("No src path found for file",g),["",O.SOURCE_PATH_NOT_FOUND];if(!h)return console.log("No destination path found for file",g),["",O.TARGET_PATH_NOT_FOUND];if(!await(0,U.pathExists)(f))return[h,O.SOURCE_PATH_NOT_A_FILE];let T=await(0,U.readFile)(f,"utf-8");if(await(0,U.pathExists)(h))return[h,O.TARGET_ALREADY_EXISTS];await(0,U.ensureFile)(h);let _=Nr(T),Te=((m=g.transform)==null?void 0:m.call(g,_))??_,Ae=(c==null?void 0:c(Te,f,h))??Te,ln=yr(Ae),dn=await Ue(ln);return await(0,U.writeFile)(h,dn),[h,O.SUCCESS]}catch{return["",O.UNKNOWN_ERROR]}}));l.length>0&&(_r({files:l,label:s.label,message:s.message}),(x=s==null?void 0:s.requiredPackages)!=null&&x.length&&await Lr(s.requiredPackages))},Vr=Ca;var Wr=i("commander");var Z=p(i("inquirer")),Ke=p(i("semver-diff")),Ce=p(i("chalk"));var Mr=e=>{let t=e.filter((n,o)=>e.indexOf(n)!==o),r=new Set(t);return Array.from(r)};var Br=async e=>{let t=Aa(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=Sa(t),n=await Z.default.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:Ta}]);return n.packages.length>0?n.packages:null},Ta=e=>{let r=e.map(o=>lt(o)).map(o=>o.name),n=Mr(r);return n.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${n.join(", ")}`:!0},Aa=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let n=r.current,o=(0,Ke.default)(n,r.wanted),a=(0,Ke.default)(n,r.latest);if(o===a&&a){t[a].push({name:r.name,from:n,to:r.latest});return}o&&t[o].push({name:r.name,from:n,to:r.wanted}),a&&t[a].push({name:r.name,from:n,to:r.latest})}),t},Sa=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(l=>{l.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let n=[],o="Package".padEnd(t),a="From".padEnd(r),s=`
   ${o} ${a}${"To".padStart(r)}`;n.push(new Z.default.Separator(s)),e.patch.length>0&&(n.push(new Z.default.Separator(Ce.default.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(l=>{n.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})})),e.minor.length>0&&(n.push(new Z.default.Separator(Ce.default.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(l=>{n.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})})),e.major.length>0&&(n.push(new Z.default.Separator(Ce.default.reset.bold.blue(`
Major Updates`))),e.major.forEach(l=>{n.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})}));let d=n.length+6;return{choices:n,pageSize:d}};var ka=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new Wr.Option("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(_a),_a=async e=>{let{tag:t,dryRun:r,all:n}=e,o=await F(oe,"Checking for updates...");if(!(o!=null&&o.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let a=n?Na(t,o):await Br(o);if(a){if(r){Da(a);return}ja(a)}},Na=(e,t)=>e==="wanted"&&t.every(o=>o.current===o.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(n=>{let o=e==="wanted"?n.wanted:e;return`${n.name}@${o}`}),Da=async e=>{let t=await b(),r=V[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},ja=e=>{console.log("Updating `refine` packages..."),console.log(e),le(e)},Hr=ka;var zr=p(i("envinfo")),Jr=p(i("ora")),$a=e=>e.command("whoami").description("View the details of the development environment").action(La),La=async()=>{let e=(0,Jr.default)("Loading environment details...").start(),t=await zr.default.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),n=(await J()||[]).map(o=>` - ${o.name}: ${o.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(n)},Yr=$a;var et=i("commander");var ee=i("fs-extra"),Qe=i("path");var z=`${__dirname}/../templates/provider`,Ze=["auth","live","data","access-control","notification","i18n","audit-log"],Gr=(e,t)=>{e.forEach(r=>{let{fileName:n,templatePath:o}=Ua(r),a=t??Fa(),c=(0,Qe.join)(a,n),s=(0,Qe.join)(process.cwd(),a,n);if((0,ee.pathExistsSync)(s)){console.error(`\u274C Provider (${c}) already exist!`);return}(0,ee.mkdirSync)(a,{recursive:!0}),(0,ee.copySync)(o,s),console.log(`\u{1F389} Provider (${c}) created successfully!`)})},Oe={auth:{fileName:"auth-provider.tsx",templatePath:`${z}/demo-auth-provider.tsx`},live:{fileName:"live-provider.tsx",templatePath:`${z}/demo-live-provider.tsx`},data:{fileName:"data-provider.tsx",templatePath:`${z}/demo-data-provider.tsx`},"access-control":{fileName:"access-control-provider.tsx",templatePath:`${z}/demo-access-control-provider.tsx`},notification:{fileName:"notification-provider.tsx",templatePath:`${z}/demo-notification-provider.tsx`},i18n:{fileName:"i18n-provider.tsx",templatePath:`${z}/demo-i18n-provider.tsx`},"audit-log":{fileName:"audit-log-provider.tsx",templatePath:`${z}/demo-audit-log-provider.tsx`}},Ua=e=>{if(!(Oe!=null&&Oe[e]))throw new Error(`Invalid provider: ${e}`);return Oe[e]},Fa=()=>{let e=E(),{path:t}=Et(e);return t};var qa=e=>e.command("add").allowExcessArguments(!1).addArgument(new et.Argument("[provider]","Create a new provider").choices([...Ze,"resource"]).argOptional()).addArgument(new et.Argument("[resource...]","Create a new resource files").argOptional()).option("-p, --path [path]","Path to generate files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Va),Va=async(e,t,r,n)=>{let o=n==null?void 0:n.args;if(!o.length){await Ba();return}let{providers:a,resources:c}=Ma(o);a.length&&Gr(a,r==null?void 0:r.path),o.includes("resource")&&ge({actions:r==null?void 0:r.actions,path:r==null?void 0:r.path},c)},Ma=e=>{let t=e.findIndex(o=>o==="resource");if(t===-1)return{providers:Xr(e),resources:[]};let r=Xr(e.slice(0,t)),n=e.slice(t+1);return{providers:r,resources:n}},Ba=async()=>{let{name:e}=await b();console.log("\u274C Please provide a feature name"),console.log(`For more information please use: "${e} run refine add help"`)},Xr=e=>e.filter(t=>Ze.includes(t)?!0:(console.log(`\u274C "${t}" is not a valid provider`),!1)),Kr=qa;var Qr=p(i("envinfo")),Zr=p(i("os")),Wa=()=>{let e=Zr.default.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},en=async()=>{let[e,t]=await Qr.default.helpers.getOSInfo();return{name:Wa(),version:t}};var tn=p(i("node-fetch")),Ha=async()=>{let e=await en();return{nodeEnv:S.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await J()||[],projectFramework:E(),projectId:dt()}},rn=async()=>{if(S.REFINE_NO_TELEMETRY!=="true")try{let e=await Ha();await(0,tn.default)("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};var nn=p(i("gray-matter")),on=p(i("boxen"));var za="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",tt="---announcement",Ja=e=>e.split(tt).slice(1).map(r=>`${tt}${r}`),Ya=e=>{let t=e.replace(tt,"---"),r=(0,nn.default)(t),n=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:n}},Ga=async()=>{try{let e=await fetch(za).then(r=>r.text()).catch(()=>"");return Ja(e).map(r=>Ya(r))}catch{return[]}},an=async()=>{let t=(await Ga()).filter(n=>!n.hidden);if(t.length===0)return;let r=t.map(n=>{let o=t.length>1?"\u2014 ":"",a=be(n.content);return`${o}${a}`}).join("").trim();console.log((0,on.default)(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var Xa="1.0.0",Ka=()=>{let e=new sn.Command;e.version(`@refinedev/cli@${Xa}`,"-v, --version","Output the current version.").description(cn.default.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),Vr(e),Ot(e),Hr(e),Be(e),We(e),De(e),ze(e),yt(e),Yr(e),St(e),fr(e),Kr(e),e.hook("preAction",an),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||rn()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Ka();})();
//# sourceMappingURL=cli.js.map