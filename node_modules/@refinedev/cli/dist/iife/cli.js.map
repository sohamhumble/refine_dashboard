{"version":3,"sources":["../../../devtools-shared/src/index.ts","../../../devtools-shared/src/event-types.ts","../../../devtools-shared/src/scopes.ts","../../../devtools-shared/src/context.tsx","../../../devtools-shared/src/send.ts","../../../devtools-shared/src/receive.ts","../../../devtools-server/src/index.ts","../../../devtools-server/src/serve-client.ts","../../../devtools-server/src/serve-ws.ts","../../../devtools-server/src/constants.ts","../../../devtools-server/src/reload-on-change.ts","../../../devtools-server/src/setup-server.ts","../../../devtools-server/src/create-db.ts","../../../devtools-server/src/serve-api.ts","../../../devtools-server/src/feed/get-feed.ts","../../../devtools-server/src/packages/get-installed-package-data.ts","../../../devtools-server/src/packages/get-installed-package-json-path.ts","../../../devtools-server/src/packages/get-packages-from-package-json.ts","../../../devtools-server/src/packages/get-changelog.ts","../../../devtools-server/src/packages/get-documentation.ts","../../../devtools-server/src/packages/get-all-packages.ts","../../../devtools-server/src/packages/get-available-packages.ts","../../../devtools-server/src/packages/update-package.ts","../../../devtools-server/src/packages/get-latest-package-data.ts","../../../devtools-server/src/project-id/get-project-id-from-package-json.ts","../../../devtools-server/src/project-id/set-project-id-to-package-json.ts","../../../devtools-server/src/project-id/set-project-id-to-refine-component.ts","../../../devtools-server/src/project-id/update-project-id.ts","../../../devtools-server/src/serve-proxy.ts","../../../devtools-server/src/serve-open-in-editor.ts","../../src/cli.ts","../../src/components/update-warning-table/table.ts","../../src/utils/spinner/index.ts","../../src/utils/package/index.ts","../../src/utils/text/index.ts","../../src/commands/check-updates/index.tsx","../../src/definitions/projectTypes.ts","../../src/definitions/uiFrameworks.ts","../../src/definitions/package.ts","../../src/utils/project/index.ts","../../src/utils/resource/index.ts","../../src/commands/add/create-resource.ts","../../src/utils/compile/index.ts","../../src/commands/create-resource/index.ts","../../src/utils/env/index.ts","../../src/commands/proxy/index.ts","../../src/commands/runner/start/index.ts","../../src/update-notifier/index.tsx","../../src/utils/encode/index.ts","../../src/commands/runner/projectScripts.ts","../../src/commands/runner/runScript.ts","../../src/commands/runner/utils/index.ts","../../src/commands/runner/dev/index.ts","../../src/commands/devtools/index.ts","../../src/transformers/add-devtools-component.ts","../../src/utils/swizzle/prettierFormat.ts","../../src/utils/refine/index.ts","../../src/commands/runner/build/index.ts","../../src/commands/runner/run/index.ts","../../src/commands/swizzle/index.tsx","../../src/utils/swizzle/index.ts","../../src/utils/swizzle/provideCliHelpers.ts","../../src/index.ts","../../src/utils/swizzle/import.ts","../../src/utils/swizzle/appendAfterImports.ts","../../src/utils/swizzle/getFileContent.ts","../../src/components/swizzle-message/index.tsx","../../src/utils/swizzle/codes.ts","../../src/utils/swizzle/renderCodeMarkdown.ts","../../src/utils/marked-terminal-renderer/index.ts","../../src/utils/swizzle/parseSwizzleBlocks.ts","../../src/utils/swizzle/getPathPrefix.ts","../../src/commands/swizzle/install-required-packages/index.ts","../../src/commands/update/index.ts","../../src/commands/update/interactive/index.ts","../../src/utils/array/index.ts","../../src/commands/whoami/index.ts","../../src/commands/add/index.ts","../../src/commands/add/create-provider.ts","../../src/utils/os/index.ts","../../src/telemetry/index.ts","../../src/utils/announcement/index.tsx"],"sourcesContent":["export { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\nexport { TraceType } from \"./trace\";\nexport { Feed, FeedSection } from \"./feed\";\nexport {\n    PackageType,\n    PackageLatestVersionType,\n    AvailablePackageType,\n} from \"./package\";\nexport { RefineHook, Scopes, hooksByScope, scopes } from \"./scopes\";\n\nexport { DevToolsContextProvider, DevToolsContext } from \"./context\";\n\nexport { send } from \"./send\";\nexport { receive } from \"./receive\";\n","import {\n    Mutation,\n    MutationKey,\n    MutationStatus,\n    QueryKey,\n    QueryState,\n    QueryStatus,\n} from \"@tanstack/react-query\";\nimport { TraceType } from \"./trace\";\n\nexport enum DevtoolsEvent {\n    RELOAD = \"devtools:reload\",\n    DEVTOOLS_INIT = \"devtools:init\",\n    DEVTOOLS_HANDSHAKE = \"devtools:handshake\",\n    DEVTOOLS_ALREADY_CONNECTED = \"devtools:already-connected\",\n    ACTIVITY = \"devtools:send-activity\",\n    DEVTOOLS_ACTIVITY_UPDATE = \"devtools:activity-update\",\n    DEVTOOLS_CONNECTED_APP = \"devtools:connected-app\",\n    DEVTOOLS_DISCONNECTED_APP = \"devtools:disconnected-app\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR = \"devtools:highlight-in-monitor\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = \"devtools:highlight-in-monitor-action\",\n    DEVTOOLS_LOGIN_SUCCESS = \"devtools:login-success\",\n    DEVTOOLS_RELOAD_AFTER_LOGIN = \"devtools:reload-after-login\",\n}\n\ntype Timestamps = {\n    createdAt: number;\n    updatedAt: number;\n};\n\ntype ActivityPayload =\n    | {\n          type: \"mutation\";\n          identifier: string;\n          key?: MutationKey;\n          status?: MutationStatus;\n          trace?: TraceType[];\n          state: Mutation<any, any, any, any>[\"state\"];\n          variables?: Mutation<any, any, any, any>[\"state\"][\"variables\"];\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      }\n    | {\n          type: \"query\";\n          identifier: string;\n          key?: QueryKey;\n          status?: QueryStatus;\n          trace?: TraceType[];\n          state: QueryState<any, any>;\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      };\n\nexport type DevtoolsEventPayloads = {\n    [DevtoolsEvent.RELOAD]: {};\n    [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_HANDSHAKE]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED]: { url: string };\n    [DevtoolsEvent.ACTIVITY]: ActivityPayload;\n    [DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE]: {\n        updatedActivities: (ActivityPayload & Timestamps)[];\n    };\n    [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };\n    [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};\n    [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};\n};\n","export type RefineHook =\n    | \"useCan\"\n    | \"useLog\"\n    | \"useLogList\"\n    | \"useCreate\"\n    | \"useCreateMany\"\n    | \"useCustom\"\n    | \"useCustomMutation\"\n    | \"useDelete\"\n    | \"useDeleteMany\"\n    | \"useInfiniteList\"\n    | \"useList\"\n    | \"useMany\"\n    | \"useOne\"\n    | \"useUpdate\"\n    | \"useUpdateMany\"\n    | \"useForgotPassword\"\n    | \"useGetIdentity\"\n    | \"useIsAuthenticated\"\n    | \"useLogin\"\n    | \"useLogout\"\n    | \"useOnError\"\n    | \"usePermissions\"\n    | \"useRegister\"\n    | \"useUpdatePassword\";\n\nexport type Scopes = \"data\" | \"audit-log\" | \"access-control\" | \"auth\";\n\nexport const scopes: Record<RefineHook, Scopes> = {\n    useCan: \"access-control\",\n    useLog: \"audit-log\",\n    useLogList: \"audit-log\",\n    useCreate: \"data\",\n    useCreateMany: \"data\",\n    useCustom: \"data\",\n    useCustomMutation: \"data\",\n    useDelete: \"data\",\n    useDeleteMany: \"data\",\n    useInfiniteList: \"data\",\n    useList: \"data\",\n    useMany: \"data\",\n    useOne: \"data\",\n    useUpdate: \"data\",\n    useUpdateMany: \"data\",\n    useForgotPassword: \"auth\",\n    useGetIdentity: \"auth\",\n    useIsAuthenticated: \"auth\",\n    useLogin: \"auth\",\n    useLogout: \"auth\",\n    useOnError: \"auth\",\n    usePermissions: \"auth\",\n    useRegister: \"auth\",\n    useUpdatePassword: \"auth\",\n};\n\nexport const hooksByScope = Object.entries(scopes).reduce(\n    (acc, [hook, scope]) => {\n        if (!acc[scope]) {\n            acc[scope] = [];\n        }\n\n        acc[scope].push(hook as RefineHook);\n\n        return acc;\n    },\n    {} as Record<Scopes, RefineHook[]>,\n);\n","import React from \"react\";\nimport { DevtoolsEvent } from \"./event-types\";\nimport { send } from \"./send\";\nimport { receive } from \"./receive\";\n\ntype DevToolsContextValue = {\n    __devtools: boolean;\n    port: number;\n    url: string;\n    secure: boolean;\n    ws: WebSocket | null;\n    devtoolsUrl?: string;\n};\n\nexport const DevToolsContext = React.createContext<DevToolsContextValue>({\n    __devtools: false,\n    port: 5002,\n    url: \"localhost\",\n    secure: false,\n    ws: null,\n});\n\ntype Props = React.PropsWithChildren<\n    Partial<Pick<DevToolsContextValue, \"port\" | \"__devtools\">>\n>;\n\nexport const DevToolsContextProvider: React.FC<Props> = ({\n    __devtools,\n    port,\n    children,\n}) => {\n    const [values, setValues] = React.useState<DevToolsContextValue>({\n        __devtools: __devtools ?? false,\n        port: port ?? 5002,\n        url: \"localhost\",\n        secure: false,\n        ws: null,\n    });\n\n    const [ws, setWs] = React.useState<WebSocket | null>(null);\n\n    React.useEffect(() => {\n        const wsInstance = new WebSocket(\n            `${values.secure ? \"wss\" : \"ws\"}://localhost:${values.port}`,\n        );\n\n        const unsubscribe = receive(\n            wsInstance,\n            DevtoolsEvent.DEVTOOLS_HANDSHAKE,\n            (data) => {\n                setValues((v) => ({\n                    ...v,\n                    devtoolsUrl: data.url,\n                }));\n                unsubscribe();\n            },\n        );\n\n        wsInstance.addEventListener(\"open\", () => {\n            if (!values.__devtools) {\n                send(wsInstance, DevtoolsEvent.DEVTOOLS_INIT, {\n                    url: window.location.origin,\n                });\n            }\n        });\n\n        setWs(wsInstance);\n\n        return () => {\n            unsubscribe();\n\n            wsInstance.close(1000, window.location.origin);\n        };\n    }, []);\n\n    const contextValues = React.useMemo<DevToolsContextValue>(\n        () => ({\n            ...values,\n            ws,\n        }),\n        [values, ws],\n    );\n\n    return (\n        <DevToolsContext.Provider value={contextValues}>\n            {children}\n        </DevToolsContext.Provider>\n    );\n};\n","import { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport async function send<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    payload: DevtoolsEventPayloads[T],\n) {\n    // check if the socket is open\n    // if not, wait for it to open\n    if (ws.readyState !== ws.OPEN) {\n        await new Promise<void>((resolve) => {\n            const listener = () => {\n                ws.send(JSON.stringify({ event, payload }));\n                resolve();\n                ws.removeEventListener(\"open\", listener);\n            };\n\n            ws.addEventListener(\"open\", listener);\n        });\n        return;\n    } else {\n        ws.send(JSON.stringify({ event, payload }));\n        return;\n    }\n}\n","// receive ws message by adding a listener to the ws object\n\nimport { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport function receive<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    callback: (payload: DevtoolsEventPayloads[T]) => void,\n) {\n    const listener = (e: MessageEvent) => {\n        const { event: receivedEvent, payload } = JSON.parse(e.data);\n        if (event === receivedEvent) {\n            callback(payload);\n        }\n    };\n\n    ws.addEventListener(\"message\", listener);\n\n    return () => {\n        ws.removeEventListener(\"message\", listener);\n    };\n}\n","import express from \"express\";\n\nimport { cyanBright, bold } from \"chalk\";\n\nimport { DevtoolsEvent, receive, send } from \"@refinedev/devtools-shared\";\n\nimport { serveClient } from \"./serve-client\";\nimport { serveWs } from \"./serve-ws\";\nimport { reloadOnChange } from \"./reload-on-change\";\nimport { setupServer } from \"./setup-server\";\nimport { Activity, createDb } from \"./create-db\";\nimport { serveApi } from \"./serve-api\";\nimport { SERVER_PORT } from \"./constants\";\nimport { serveProxy } from \"./serve-proxy\";\nimport { serveOpenInEditor } from \"./serve-open-in-editor\";\n\ntype Options = {\n    projectPath?: string;\n};\n\nexport const server = async ({ projectPath = process.cwd() }: Options = {}) => {\n    const app = express();\n    const ws = serveWs();\n\n    const db = createDb();\n\n    ws.on(\"connection\", (client) => {\n        // Initialize development client\n        receive(client as any, DevtoolsEvent.DEVTOOLS_INIT, (data) => {\n            if (db.connectedApp) {\n                // send client the devtools client url if already connected\n                send(client as any, DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED, {\n                    url: db.connectedApp,\n                });\n            } else {\n                db.connectedApp = data.url;\n                db.clientWs = client;\n\n                ws.clients.forEach((c) => {\n                    send(c as any, DevtoolsEvent.DEVTOOLS_CONNECTED_APP, {\n                        url: db.connectedApp,\n                    });\n                });\n            }\n        });\n\n        receive(client as any, DevtoolsEvent.ACTIVITY, (data) => {\n            // match by identifier, if identifier is same, update data instead of pushing\n            const index = db.activities.findIndex(\n                (activity) => activity.identifier === data.identifier,\n            );\n\n            const record: Activity = {\n                ...data,\n                createdAt: Date.now(),\n                updatedAt: Date.now(),\n            };\n\n            if (index > -1) {\n                record.createdAt = db.activities[index].createdAt;\n\n                db.activities[index] = record;\n            } else {\n                db.activities.push(record);\n            }\n\n            ws.clients.forEach((c) => {\n                send(c as any, DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE, {\n                    updatedActivities: [record],\n                });\n            });\n        });\n\n        receive(\n            client as any,\n            DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR,\n            ({ name }) => {\n                ws.clients.forEach((c) => {\n                    send(\n                        c as any,\n                        DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION,\n                        {\n                            name,\n                        },\n                    );\n                });\n            },\n        );\n\n        receive(client as any, DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS, () => {\n            ws.clients.forEach((c) => {\n                send(c as any, DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN, {});\n            });\n        });\n\n        // close connected app if client disconnects\n        client.on(\"close\", (_, reason) => {\n            if (__DEVELOPMENT__) {\n                console.log(\"Client disconnected\", ws.clients.size);\n            }\n\n            if (db.clientWs) {\n                if (!ws.clients.has(db.clientWs)) {\n                    db.clientWs = null;\n                    db.connectedApp = null;\n\n                    db.activities = [];\n\n                    ws.clients.forEach((c) => {\n                        send(\n                            c as any,\n                            DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP,\n                            {\n                                url: db.connectedApp,\n                            },\n                        );\n                    });\n                }\n            }\n        });\n\n        if (__DEVELOPMENT__) {\n            console.log(\"Client connected\", ws.clients.size);\n        }\n    });\n\n    reloadOnChange(ws);\n    serveClient(app);\n    setupServer(app);\n    serveApi(app, db);\n    serveProxy(app);\n    serveOpenInEditor(app, projectPath);\n};\n","import express from \"express\";\nimport path from \"path\";\n\nimport type { Express } from \"express\";\n\nexport const serveClient = (app: Express) => {\n    app.use(express.static(path.join(__dirname, \"client\")));\n\n    app.use((req, res, next) => {\n        if (req.path.startsWith(\"/api\")) {\n            return next();\n        }\n        if (req.path.startsWith(\"/open-in-editor\")) {\n            return next();\n        }\n        res.status(200).sendFile(path.join(__dirname + \"/client/index.html\"));\n    });\n};\n","import WebSocket from \"ws\";\nimport { SERVER_PORT, WS_PORT } from \"./constants\";\nimport { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport { bold, cyanBright } from \"chalk\";\n\nexport const serveWs = () => {\n    const ws = new WebSocket.Server({ port: WS_PORT }).on(\n        \"error\",\n        (error: any) => {\n            if (error?.code === \"EADDRINUSE\") {\n                console.error(\n                    `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n                        \"refine devtools\",\n                    )} failed to start. Port ${WS_PORT} is already in use, please make sure no other devtools server is running\\n`,\n                );\n            } else {\n                console.error(\n                    `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n                        \"error from refine devtools\",\n                    )}`,\n                    error,\n                );\n            }\n            process.exit(1);\n        },\n    );\n\n    ws.on(\"connection\", (client) => {\n        if (__DEVELOPMENT__) {\n            console.log(`WebSocket server started on PORT ${WS_PORT}`);\n        }\n        // send client the devtools client url\n        send(client as any, DevtoolsEvent.DEVTOOLS_HANDSHAKE, {\n            url: `http://localhost:${SERVER_PORT}`,\n        });\n\n        client.on(\"close\", () => {\n            client.terminate();\n        });\n    });\n\n    process.on(\"SIGTERM\", () => {\n        ws.close(() => {\n            if (__DEVELOPMENT__) {\n                console.log(\"Process terminated\");\n            }\n        });\n    });\n\n    return ws;\n};\n","export const DEFAULT_WS_PORT = 5002;\nexport const DEFAULT_SERVER_PORT = 5001;\n\nexport const WS_PORT = DEFAULT_WS_PORT;\nexport const SERVER_PORT = DEFAULT_SERVER_PORT;\n\nexport const REFINE_API_URL = __DEVELOPMENT__\n    ? \"https://develop.cloud.refine.dev\"\n    : \"https://cloud2.refine.dev\";\n\nexport const FEED_MD_URL =\n    \"https://raw.githubusercontent.com/refinedev/refine/master/packages/devtools-server/FEED.md\";\n","import fs from \"fs\";\nimport path from \"path\";\nimport { debounce } from \"lodash\";\nimport { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\n\nimport type { Server } from \"ws\";\nimport { OPEN } from \"ws\";\n\nexport const reloadOnChange = __DEVELOPMENT__\n    ? (ws: Server) => {\n          const reloadEmitter = debounce(() => {\n              setTimeout(() => {\n                  ws.clients.forEach((client) => {\n                      if (client.readyState === OPEN) {\n                          console.log(\"Reloading connected client...\");\n                          send(client as any, DevtoolsEvent.RELOAD, {});\n                      }\n                  });\n              }, 800);\n          }, 1000);\n\n          const watcher = fs.watch(\n              path.resolve(__dirname, \"client\"),\n              { recursive: true },\n              reloadEmitter,\n          );\n\n          process.on(\"SIGTERM\", () => {\n              watcher.close();\n          });\n      }\n    : () => 0;\n","import type { Express } from \"express\";\nimport { SERVER_PORT } from \"./constants\";\nimport { bold, cyanBright } from \"chalk\";\n\nexport const setupServer = (app: Express) => {\n    const server = app\n        .listen(SERVER_PORT, () => {\n            if (__DEVELOPMENT__) {\n                console.log(`Server started on PORT ${SERVER_PORT}`);\n            }\n        })\n        .on(\"error\", (error: any) => {\n            if (error?.code === \"EADDRINUSE\") {\n                console.error(\n                    `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n                        \"refine devtools\",\n                    )} failed to start. Port ${SERVER_PORT} is already in use, please make sure no other devtools server is running\\n`,\n                );\n            } else {\n                console.error(\n                    `\\n${cyanBright.bold(\"\\u2717 \")}${bold(\n                        \"error from refine devtools\",\n                    )}`,\n                    error,\n                );\n            }\n            process.exit(1);\n        })\n        .on(\"listening\", () => {\n            console.log(\n                `\\n${cyanBright.bold(\"\\u2713 \")}${bold(\n                    \"refine devtools\",\n                )} is running at port ${cyanBright.bold(SERVER_PORT)}\\n`,\n            );\n        });\n\n    process.on(\"SIGTERM\", () => {\n        server.close(() => {\n            if (__DEVELOPMENT__) {\n                console.log(\"Process terminated\");\n            }\n        });\n    });\n};\n","import {\n    DevtoolsEvent,\n    DevtoolsEventPayloads,\n} from \"@refinedev/devtools-shared\";\nimport type { WebSocket } from \"ws\";\n\nexport type Activity =\n    DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport type Data = {\n    connectedApp: null | string;\n    clientWs: null | WebSocket;\n    devtoolsWsClients: WebSocket[];\n    appWsClients: WebSocket[];\n    activities: Activity[];\n    packages: string[];\n};\n\nconst defaultData: Data = {\n    connectedApp: null,\n    clientWs: null,\n    // connections\n    devtoolsWsClients: [],\n    appWsClients: [],\n    // data\n    activities: [],\n    packages: [],\n};\n\nexport const createDb = (): Data => {\n    return {\n        ...defaultData,\n    };\n};\n","import type { Express } from \"express\";\nimport { json } from \"express\";\nimport uniq from \"lodash/uniq\";\nimport {\n    AvailablePackageType,\n    Feed,\n    PackageType,\n} from \"@refinedev/devtools-shared\";\n\nimport { Data } from \"./create-db\";\nimport { getFeed } from \"./feed/get-feed\";\nimport { getAllPackages } from \"./packages/get-all-packages\";\nimport { getAvailablePackages } from \"./packages/get-available-packages\";\nimport { updatePackage } from \"./packages/update-package\";\nimport { getLatestPackageData } from \"./packages/get-latest-package-data\";\nimport { getProjectIdFromPackageJson } from \"./project-id/get-project-id-from-package-json\";\nimport { updateProjectId } from \"./project-id/update-project-id\";\n\nexport const serveApi = (app: Express, db: Data) => {\n    app.use(\"/api\", json());\n\n    app.get(\"/api/connected-app\", (_, res) => {\n        res.json({ url: db.connectedApp });\n    });\n\n    app.get(\"/api/activities\", (req, res) => {\n        const { offset = 0, limit = db.activities.length } = req.query;\n\n        res.setHeader(\"x-total-count\", db.activities.length);\n\n        res.json({\n            data: db.activities.slice(Number(offset), Number(limit)),\n        });\n    });\n\n    app.get(\"/api/activities/reset\", (_, res) => {\n        db.activities = [];\n        res.json({ success: true });\n    });\n\n    app.get(\"/api/unique-trace-items\", (req, res) => {\n        res.header(\"Access-Control-Allow-Origin\", \"*\");\n        res.header(\n            \"Access-Control-Allow-Headers\",\n            \"Origin, X-Requested-With, Content-Type, Accept\",\n        );\n\n        const traceItems = db.activities.flatMap(\n            (activity) =>\n                activity.trace?.map((t) => t.function).filter(Boolean) ?? [],\n        ) as string[];\n        const uniqueTraceItems = uniq(traceItems);\n\n        res.setHeader(\"x-total-count\", uniqueTraceItems.length);\n\n        res.json({ data: uniqueTraceItems });\n    });\n\n    let cachedInstalledPackages: PackageType[] | null = null;\n    app.get(\"/api/installed-packages\", async (req, res) => {\n        const { force } = req.query ?? {};\n\n        if (!cachedInstalledPackages || force) {\n            cachedInstalledPackages = await getAllPackages();\n        }\n\n        res.header(\"x-total-count\", `${cachedInstalledPackages.length}`);\n\n        res.json({ data: cachedInstalledPackages });\n    });\n\n    let cachedAvailablePackages: AvailablePackageType[] | null = null;\n    app.get(\"/api/available-packages\", async (_, res) => {\n        if (!cachedAvailablePackages) {\n            cachedAvailablePackages = await getAvailablePackages();\n        }\n\n        res.header(\"x-total-count\", `${cachedAvailablePackages.length}`);\n\n        res.json({ data: cachedAvailablePackages });\n    });\n\n    const cachedLatestPackages = new Map<string, any>();\n    app.get(\"/api/packages/:packageName/latest\", async (req, res) => {\n        const { packageName } = req.params ?? {};\n\n        if (!packageName) {\n            res.status(400).json({ error: \"Package name is required\" });\n            return;\n        }\n\n        if (!cachedLatestPackages.has(packageName)) {\n            const latest = await getLatestPackageData(packageName);\n            cachedLatestPackages.set(packageName, latest);\n        }\n\n        return res.json({ data: cachedLatestPackages.get(packageName) });\n    });\n\n    app.post(\"/api/packages/install\", async (req, res) => {\n        const { packages } = req.body ?? {};\n\n        if (packages?.length === 0) {\n            res.status(400).json({ error: \"Package name is required\" });\n            return;\n        }\n\n        const success = await updatePackage(packages as string[]);\n\n        if (success) {\n            cachedInstalledPackages = null;\n            cachedAvailablePackages = null;\n            res.status(200).json({ success: true });\n        } else {\n            res.status(400).json({\n                success: false,\n                error: \"Failed to update package\",\n            });\n        }\n    });\n\n    let cachedFeed: Feed | null = null;\n    app.get(\"/api/feed\", async (req, res) => {\n        if (!cachedFeed) {\n            cachedFeed = await getFeed();\n        }\n\n        res.header(\"x-total-count\", `${cachedFeed.length}`);\n\n        res.json({ data: cachedFeed });\n    });\n\n    app.get(\"/api/project-id/status\", async (_, res) => {\n        const projectId = await getProjectIdFromPackageJson();\n\n        if (projectId) {\n            res.status(200).json({ projectId });\n            return;\n        } else if (projectId === false) {\n            res.status(404).json({ projectId: null });\n            return;\n        } else {\n            res.status(500).json({ projectId: null });\n            return;\n        }\n    });\n\n    app.post(\"/api/project-id/update\", async (req, res) => {\n        const { projectId } = req.body ?? {};\n\n        if (!projectId) {\n            res.status(400).json({ error: \"Project ID is required\" });\n            return;\n        }\n\n        const success = await updateProjectId(projectId);\n\n        if (success) {\n            res.status(200).json({ success: true });\n            return;\n        } else {\n            res.status(500).json({\n                success: false,\n                error: \"Failed to update project ID\",\n            });\n            return;\n        }\n    });\n};\n","import fetch from \"node-fetch\";\nimport matter from \"gray-matter\";\nimport { marked } from \"marked\";\nimport sanitizeHtml from \"sanitize-html\";\n\nimport { Feed, FeedSection } from \"@refinedev/devtools-shared\";\n\nimport { FEED_MD_URL } from \"src/constants\";\n\nconst splitSections = (feed: string) => {\n    const sections = feed.split(\"---section\");\n\n    return sections.slice(1).map((section) => `---section${section}`);\n};\n\nconst contentToHtml = (content: string) => {\n    const renderer = new marked.Renderer();\n    renderer.link = function (...args) {\n        const out = marked.Renderer.prototype.link.apply(this, args);\n        return out.replace(\n            /^<a/,\n            '<a target=\"_blank\" rel=\"noopener noreferrer\"',\n        );\n    };\n\n    const html = marked(content, {\n        renderer,\n    });\n\n    return sanitizeHtml(html, {\n        allowedTags: sanitizeHtml.defaults.allowedTags.concat([\"img\"]),\n        allowedAttributes: {\n            ...sanitizeHtml.defaults.allowedAttributes,\n            img: [\"src\"],\n        },\n    });\n};\n\nconst parseSection = (section: string): FeedSection => {\n    const parsed = matter(section.replace(\"---section\", \"---\"));\n\n    return {\n        ...parsed.data,\n        content: contentToHtml(parsed.content),\n    } as FeedSection;\n};\n\nconst fetchFeed = async () => {\n    try {\n        const response = await fetch(FEED_MD_URL);\n\n        return response.text();\n    } catch (_) {\n        return \"\";\n    }\n};\n\nexport const getFeed = async (): Promise<Feed> => {\n    try {\n        const rawContent = await fetchFeed();\n        const rawSections = splitSections(rawContent);\n        const sections = rawSections.map(parseSection);\n\n        return sections;\n    } catch (e) {\n        return [];\n    }\n};\n","import fs from \"fs\";\nimport { getInstalledPackageJSONPath } from \"./get-installed-package-json-path\";\n\nexport const getInstalledPackageData = async (packageName: string) => {\n    try {\n        const packagePath = await getInstalledPackageJSONPath(packageName);\n\n        if (!packagePath) {\n            return null;\n        }\n\n        const parsed = JSON.parse(\n            fs.readFileSync(packagePath, { encoding: \"utf-8\" }),\n        );\n\n        return {\n            name: parsed.name,\n            version: parsed.version,\n            description: parsed.description,\n        };\n    } catch (e) {\n        return null;\n    }\n};\n","import path from \"path\";\nimport globby from \"globby\";\n\nexport const getInstalledPackageJSONPath = async (packageName: string) => {\n    try {\n        const filesFromGlobbySearch = await globby(\n            `node_modules/${packageName}/package.json`,\n            {\n                onlyFiles: true,\n            },\n        );\n\n        let fileFromModule: string | null = null;\n\n        try {\n            const pkgJsonPath = require.resolve(\n                path.join(packageName, \"package.json\"),\n            );\n            if (pkgJsonPath) {\n                fileFromModule = pkgJsonPath;\n            }\n        } catch (err) {\n            //\n        }\n\n        return (\n            [\n                ...filesFromGlobbySearch,\n                ...(fileFromModule ? [fileFromModule] : []),\n            ][0] ?? null\n        );\n    } catch (err) {\n        return null;\n    }\n};\n","import path from \"path\";\nimport { readJSON } from \"fs-extra\";\n\nexport const getPackagesFromPackageJSON = async (\n    projectPath: string = process.cwd(),\n) => {\n    const packageJson = await readJSON(path.join(projectPath, \"package.json\"), {\n        encoding: \"utf-8\",\n    });\n\n    const refinePackages = Object.keys(packageJson.dependencies).filter(\n        (packageName) => packageName.startsWith(\"@refinedev/\"),\n    );\n\n    return refinePackages;\n};\n","export const getChangelog = (packageName: string) => {\n    return packageName.replace(\"@refinedev/\", \"https://c.refine.dev/\");\n};\n","export const getDocumentation = (packageName: string) => {\n    return \"https://refine.dev/docs/api-reference/general-concepts/\";\n};\n","import { PackageType } from \"@refinedev/devtools-shared\";\nimport { getInstalledPackageData } from \"./get-installed-package-data\";\nimport { getPackagesFromPackageJSON } from \"./get-packages-from-package-json\";\nimport { getChangelog } from \"./get-changelog\";\nimport { getDocumentation } from \"./get-documentation\";\n\nexport const getAllPackages = async (projectPath?: string) => {\n    try {\n        const refinePackages = await getPackagesFromPackageJSON(projectPath);\n        const installedVersions = await Promise.all(\n            refinePackages.map(async (packageName) => {\n                const currentInfo = await getInstalledPackageData(packageName);\n\n                return {\n                    name: packageName,\n                    currentVersion: currentInfo?.version,\n                    description: currentInfo?.description,\n                    changelog: getChangelog(packageName),\n                    documentation: getDocumentation(packageName),\n                } as PackageType;\n            }),\n        );\n\n        return installedVersions;\n    } catch (error) {\n        return [];\n    }\n};\n","import { AvailablePackageType } from \"@refinedev/devtools-shared\";\nimport dedent from \"dedent\";\nimport { getPackagesFromPackageJSON } from \"./get-packages-from-package-json\";\n\nexport const AVAILABLE_PACKAGES: AvailablePackageType[] = [\n    {\n        name: \"@refinedev/ably\",\n        description: \"Ably integration for refine\",\n        install: `npm install @refinedev/ably`,\n        usage: dedent(\n            `\n            import { liveProvider, Ably } from \"@refinedev/ably\";\n\n            export const ablyClient = new Ably.Realtime(\"YOUR_API_TOKEN\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        liveProvider={liveProvider(ablyClient)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n        `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/airtable\",\n        description: \"Airtable integration for refine\",\n        install: `npm install @refinedev/airtable`,\n        usage: dedent(\n            `\n            import dataProvider from \"@refinedev/airtable\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_KEY\", \"BASE_ID\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/antd\",\n        description: \"Ant Design integration for refine\",\n        install: `npm install @refinedev/antd antd`,\n        usage: dedent(\n            `\n            import { ThemedLayoutV2 } from \"@refinedev/antd\";\n\n            import \"@refinedev/antd/dist/reset.css\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        /* ... */\n                    >\n                        <ThemedLayoutV2>\n                            {/* ... */}\n                        </ThemedLayoutV2>\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/appwrite\",\n        description: \"Appwrite integration for refine\",\n        install: `npm install @refinedev/appwrite`,\n        usage: dedent(\n            `\n            import { dataProvider, liveProvider, Account, Appwrite, Storage } from \"@refinedev/appwrite\";\n\n            const appwriteClient = new Appwrite();\n            appwriteClient.setEndpoint(\"API_URL\").setProject(\"PROJECT_ID\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(appwriteClient, { databaseId: \"default\" })}\n                        liveProvider={liveProvider(appwriteClient, { databaseId: \"default\" })}\n                        /* ... */\n                    >\n                        <ThemedLayout>\n                            {/* ... */}\n                        </ThemedLayout>\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/chakra-ui\",\n        description: \"Chakra UI integration for refine\",\n        install: `npm install @refinedev/chakra-ui @chakra-ui/react @emotion/react @emotion/styled framer-motion`,\n        usage: dedent(\n            `\n            import { ThemedLayoutV2 } from \"@refinedev/chakra-ui\";\n            import { ChakraProvider } from \"@chakra-ui/react\";\n\n            const App = () => {\n                return (\n                        <ChakraProvider>\n                        <Refine\n                            /* ... */\n                        >\n                            <ThemedLayoutV2>\n                                {/* ... */}\n                            </ThemedLayoutV2>\n                        </Refine>\n                    </ChakraProvider>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/graphql\",\n        description: \"GraphQL integration for refine\",\n        install: `npm install @refinedev/graphql`,\n        usage: dedent(\n            `\n            import dataProvider, { GraphQLClient } from \"@refinedev/graphql\";\n\n            const client = new GraphQLClient(\"YOUR_API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(client)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/hasura\",\n        description: \"GraphQL integration for refine\",\n        install: `npm install @refinedev/hasura`,\n        usage: dedent(\n            `\n            import dataProvider, { GraphQLClient } from \"@refinedev/hasura\";\n\n            const client = new GraphQLClient(\"HASURA_API_URL\", {\n                headers: {\n                    \"x-hasura-role\": \"public\",\n                },\n            });\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(client)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/inferencer\",\n        description: \"Auto generate views based on your APIs with refine\",\n        install: `npm install @refinedev/inferencer`,\n        usage: dedent(\n            `\n        import { AntdInferencer } from \"@refinedev/inferencer/antd\";\n\n        const App = () => {\n            return (\n                <Refine\n                    /* ... */\n                >\n                    <AntdInferencer action=\"list\" resource=\"posts\" />\n                </Refine>\n            );\n        };\n        `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/kbar\",\n        description: \"Command palette integration with kbar for refine\",\n        install: `npm install @refinedev/kbar`,\n        usage: dedent(\n            `\n            import { RefineKbar, RefineKbarProvider } from \"@refinedev/kbar\";\n\n            const App = () => {\n                return (\n                    <RefineKbarProvider>\n                        <Refine\n                            /* ... */\n                        >\n                            <RefineKbar />\n                        </Refine>\n                    </RefineKbarProvider>\n                );\n            };\n        `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/mantine\",\n        description: \"Mantine UI integration for refine\",\n        install: `npm install @refinedev/mantine @refinedev/react-table @mantine/core @mantine/hooks @mantine/form @mantine/notifications @emotion/react @tabler/icons`,\n        usage: dedent(\n            `\n            import { ThemedLayoutV2 } from \"@refinedev/mantine\";\n            import { MantineProvider } from \"@mantine/core\";\n\n            const App = () => {\n                return (\n                    <MantineProvider>\n                        <Refine\n                            /* ... */\n                        >\n                            <ThemedLayoutV2>\n                                {/* ... */}\n                            </ThemedLayoutV2>\n                        </Refine>\n                    </MantineProvider>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/medusa\",\n        description: \"Medusa store integration for refine\",\n        install: `npm install @refinedev/medusa`,\n        usage: dedent(\n            `\n            import dataProvider, { authProvider } from \"@refinedev/medusa\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_URL\")}\n                        authProvider={authProvider(\"API_URL\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/mui\",\n        description: \"Material UI integration for refine\",\n        install: `npm install @refinedev/mui @refinedev/react-hook-form @mui/material @mui/lab @mui/x-data-grid @emotion/react @emotion/styled react-hook-form`,\n        usage: dedent(\n            `\n            import { ThemedLayoutV2 } from \"@refinedev/mui\";\n\n            import CssBaseline from \"@mui/material/CssBaseline\";\n            import GlobalStyles from \"@mui/material/GlobalStyles\";\n            import { ThemeProvider } from \"@mui/material/styles\";\n\n            const App = () => {\n                return (\n                    <ThemeProvider>\n                        <CssBaseline />\n                        <GlobalStyles styles={{ html: { WebkitFontSmoothing: \"auto\" } }} />\n                        <Refine\n                            /* ... */\n                        >\n                            <ThemedLayoutV2>\n                                {/* ... */}\n                            </ThemedLayoutV2>\n                        </Refine>\n                    </ThemeProvider>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/nestjs-query\",\n        description: \"NestJS Query data provider integration for refine\",\n        install: `npm install @refinedev/nestjs-query graphql-ws`,\n        usage: dedent(\n            `\n            import dataProvider, {\n                GraphQLClient,\n                liveProvider,\n            } from \"@refinedev/nestjs-query\";\n\n            import { createClient } from \"graphql-ws\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(new GraphQLClient( \"API_URL\" ))}\n                        liveProvider={liveProvider(createClient({ url: \"WS_URL\" }))}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/nestjsx-crud\",\n        description: \"NestJSX CRUD data provider integration for refine\",\n        install: `npm install @refinedev/nestjsx-crud`,\n        usage: dedent(\n            `\n            import dataProvider from \"@refinedev/nestjsx-crud\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_URL\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/nhost\",\n        description:\n            \"NHost data provider and live provider integrations for refine\",\n        install: `npm install @refinedev/nhost @nhost/nhost-js @nhost/react-auth`,\n        usage: dedent(\n            `\n            import { NhostClient } from \"@nhost/nhost-js\";\n            import dataProvider, { graphqlWS } from \"@refinedev/nhost\";\n\n            const nhost = new NhostClient({ backendUrl: \"NHOST_API_URL\" });\n\n            const gqlWsClient = graphqlWS.createClient({\n                url: WS_URL,\n                connectionParams: () => ({\n                    headers: {\n                        Authorization: \\`Bearer \\${nhost.auth.getJWTToken()}\\`,\n                    },\n                })\n            });\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(nhost)}\n                        liveProvider={liveProvider(gqlWsClient)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/react-hook-form\",\n        description: \"React Hook Form integration for refine\",\n        install: `npm install @refinedev/react-hook-form react-hook-form`,\n        usage: dedent(\n            `\n            import { useForm } from \"@refinedev/react-hook-form\";\n\n            const EditPost = () => {\n                const {\n                    register,\n                    handleSubmit,\n                    formState,\n                    refineCore,\n                } = useForm({\n                    refineCoreProps: {\n                        resource: \"posts\",\n                        id: \"1\",\n                    },\n                });\n\n                return /* ... */\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/react-table\",\n        description: \"Tanstack React Table integration for refine\",\n        install: `npm install @refinedev/react-table @tanstack/react-table`,\n        usage: dedent(\n            `\n            import { useTable } from \"@refinedev/react-table\";\n\n            import { ColumnDef, flexRender } from \"@tanstack/react-table\";\n\n            const EditPost = () => {\n                const columns = React.useMemo<ColumnDef<IPost>[]>(\n                    () => [\n                        {\n                            id: \"id\",\n                            header: \"ID\",\n                            accessorKey: \"id\",\n                        },\n                        {\n                            id: \"title\",\n                            header: \"Title\",\n                            accessorKey: \"title\",\n                            meta: {\n                                filterOperator: \"contains\",\n                            },\n                        },\n                ], []);\n\n                const tableInstance = useTable({\n                    columns,\n                    refineCoreProps: {\n                        resource: \"posts\",\n                    }\n                });\n\n                return /* ... */\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/simple-rest\",\n        description: \"Data provider integration for REST APIs with refine\",\n        install: `npm install @refinedev/simple-rest`,\n        usage: dedent(\n            `\n            import dataProvider from \"@refinedev/simple-rest\";\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(\"API_URL\")}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/supabase\",\n        description:\n            \"Data provider and live provider integrations for Supabase with refine\",\n        install: `npm install @refinedev/supabase`,\n        usage: dedent(\n            `\n            import { dataProvider, liveProvider, createClient } from \"@refinedev/supabase\";\n\n            const supabaseClient = createClient(\"SUPABASE_URL\", \"SUPABASE_KEY\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={dataProvider(supabaseClient)}\n                        liveProvider={liveProvider(supabaseClient)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/strapi\",\n        description: \"Strapi integration of refine\",\n        install: `npm install @refinedev/strapi axios`,\n        usage: dedent(\n            `\n            import { DataProvider, AuthHelper } from \"@refinedev/strapi\";\n\n            const axiosInstance = axios.create();\n            const strapiAuthHelper = AuthHelper(\"API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={DataProvider(\"API_URL\", axiosInstance)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/strapi-v4\",\n        description: \"StrapiV4 integration of refine\",\n        install: `npm install @refinedev/strapi-v4 axios`,\n        usage: dedent(\n            `\n            import { DataProvider, AuthHelper } from \"@refinedev/strapi-v4\";\n\n            const axiosInstance = axios.create();\n            const strapiAuthHelper = AuthHelper(\"API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                        dataProvider={DataProvider(\"API_URL\", axiosInstance)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n    {\n        name: \"@refinedev/strapi-graphql\",\n        description: \"Strapi GraphQL integration of refine\",\n        install: `npm install @refinedev/strapi-graphql`,\n        usage: dedent(\n            `\n            import dataProvider, { GraphQLClient } from \"@refinedev/strapi-graphql\";\n\n            const client = new GraphQLClient(\"API_URL\");\n\n            const App = () => {\n                return (\n                    <Refine\n                    dataProvider={dataProvider(client)}\n                        /* ... */\n                    >\n                        {/* ... */}\n                    </Refine>\n                );\n            };\n            `.trim(),\n        ),\n    },\n];\n\nexport const getAvailablePackages = async (projectPath?: string) => {\n    const installedRefinePackages = await getPackagesFromPackageJSON(\n        projectPath,\n    );\n\n    return AVAILABLE_PACKAGES.filter(\n        (p) => !installedRefinePackages.includes(p.name),\n    );\n};\n","import preferredPM from \"preferred-pm\";\nimport execa from \"execa\";\n\nexport const updatePackage = async (\n    packages: string[],\n    projectPath: string = process.cwd(),\n) => {\n    try {\n        const { name: pm } = (await preferredPM(projectPath)) ?? {\n            name: \"npm\",\n        };\n\n        const { failed } = await execa(pm ?? \"npm\", [\n            \"install\",\n            ...packages.map((p) => `${p}@latest`),\n        ]);\n\n        return !failed;\n    } catch (error) {\n        return false;\n    }\n};\n","import execa from \"execa\";\n\nexport const getLatestPackageData = async (\n    packageName: string,\n): Promise<{ name: string; version?: string }> => {\n    try {\n        const { stdout } = await execa(\"npm\", [\n            \"view\",\n            packageName,\n            \"name\",\n            \"version\",\n            \"--json\",\n        ]);\n        const parsed = JSON.parse(stdout);\n\n        return parsed;\n    } catch (e) {\n        return { name: packageName };\n    }\n};\n","import { readJSON } from \"fs-extra\";\nimport path from \"path\";\n\nexport const getProjectIdFromPackageJson = async (\n    projectPath = process.cwd(),\n) => {\n    try {\n        const packageJson = await readJSON(\n            path.join(projectPath, \"package.json\"),\n            {\n                encoding: \"utf-8\",\n            },\n        );\n\n        const projectId = packageJson?.refine?.projectId as string;\n\n        if (projectId) {\n            return projectId;\n        }\n\n        return false;\n    } catch (e) {\n        return null;\n    }\n};\n","import execa from \"execa\";\n\nexport const setProjectIdToPackageJson = async (\n    projectId: string,\n    projectPath = process.cwd(),\n) => {\n    try {\n        execa.sync(\"npm\", [\"pkg\", \"set\", `refine.projectId=${projectId}`], {\n            cwd: projectPath,\n        });\n        return true;\n    } catch (e) {\n        return null;\n    }\n};\n","import execa from \"execa\";\nimport path from \"path\";\n\nexport const setProjectIdToRefineComponent = async (\n    projectId: string,\n    projectPath = process.cwd(),\n) => {\n    try {\n        const jscodeshiftExecutable = require.resolve(\".bin/jscodeshift\");\n\n        const execution = execa.sync(\n            jscodeshiftExecutable,\n            [\n                \"./\",\n                \"--extensions=ts,tsx,js,jsx\",\n                \"--parser=tsx\",\n                `--transform=${path.resolve(\n                    path.join(\n                        __dirname,\n                        \"..\",\n                        \"src\",\n                        \"project-id\",\n                        \"transform.ts\",\n                    ),\n                )}`,\n                `--ignore-pattern=**/.cache/**`,\n                `--ignore-pattern=**/node_modules/**`,\n                `--ignore-pattern=**/build/**`,\n                `--ignore-pattern=**/dist/**`,\n                `--ignore-pattern=**/.next/**`,\n                `--__projectId=${projectId}`,\n            ],\n            {\n                cwd: projectPath,\n                timeout: 1000 * 10,\n            },\n        );\n\n        if (execution.stderr) {\n            console.error(execution.stderr);\n        }\n    } catch (error) {\n        console.error(error);\n    }\n    return;\n};\n","import { setProjectIdToPackageJson } from \"./set-project-id-to-package-json\";\nimport { setProjectIdToRefineComponent } from \"./set-project-id-to-refine-component\";\n\nexport const updateProjectId = async (\n    projectId: string,\n    projectPath = process.cwd(),\n) => {\n    try {\n        await Promise.all([\n            setProjectIdToPackageJson(projectId, projectPath),\n            setProjectIdToRefineComponent(projectId, projectPath),\n        ]);\n\n        return true;\n    } catch (_) {\n        return false;\n    }\n};\n","import { readJSON, writeJSON } from \"fs-extra\";\nimport { FrontendApi } from \"@ory/client\";\nimport { createProxyMiddleware, Options } from \"http-proxy-middleware\";\nimport path from \"path\";\nimport { REFINE_API_URL, SERVER_PORT } from \"./constants\";\nimport { getProjectIdFromPackageJson } from \"./project-id/get-project-id-from-package-json\";\n\nimport type { Express, RequestHandler } from \"express\";\n\nlet currentProjectId: string | null | false = null;\nconst projectIdAppender: RequestHandler = async (req, res, next) => {\n    if (!currentProjectId) {\n        currentProjectId = await getProjectIdFromPackageJson();\n    }\n\n    if (currentProjectId) {\n        req.headers[\"x-project-id\"] = currentProjectId;\n    }\n\n    next();\n};\n\nconst restream: Options[\"onProxyReq\"] = function (proxyReq, req) {\n    if (req.body) {\n        const bodyData = JSON.stringify(req.body);\n        // incase if content-type is application/x-www-form-urlencoded -> we need to change to application/json\n        proxyReq.setHeader(\"Content-Type\", \"application/json\");\n        proxyReq.setHeader(\"Content-Length\", Buffer.byteLength(bodyData));\n        // stream the content\n        proxyReq.write(bodyData);\n    }\n};\n\nconst tokenize = async (token: string) => {\n    try {\n        const ORY_URL = `${REFINE_API_URL}/.auth`;\n\n        const ory = new FrontendApi({\n            isJsonMime: () => true,\n            basePath: ORY_URL,\n            baseOptions: {\n                withCredentials: true,\n            },\n        });\n\n        const { data } = await ory.toSession({\n            xSessionToken: token,\n            tokenizeAs: \"jwt_template_1\",\n        });\n\n        return data?.tokenized;\n    } catch (err) {\n        //\n    }\n\n    return undefined;\n};\n\nconst saveAuth = async (token?: string, jwt?: string) => {\n    try {\n        writeJSON(path.join(__dirname, \"..\", \".persist.json\"), {\n            token: token,\n            jwt: jwt,\n        });\n    } catch (error) {\n        //\n    }\n};\n\nconst loadAuth = async () => {\n    try {\n        const persist = await readJSON(\n            path.join(__dirname, \"..\", \".persist.json\"),\n        );\n        return persist as { token?: string; jwt?: string };\n    } catch (error) {\n        //\n    }\n\n    return {\n        token: undefined,\n        jwt: undefined,\n    };\n};\n\nconst handleLogoutToken: (\n    token?: string,\n) => NonNullable<Options[\"onProxyReq\"]> = (token) => {\n    return function (proxyReq, req) {\n        if (req.url.includes(\"self-service/logout/api\")) {\n            const bodyData = JSON.stringify({\n                session_token: token,\n            });\n            proxyReq.setHeader(\"Content-Length\", Buffer.byteLength(bodyData));\n            // stream the content\n            proxyReq.write(bodyData);\n        }\n    };\n};\n\nconst handleSignInCallbacks: (\n    onToken: (token?: string, jwt?: string) => void,\n) => NonNullable<Options[\"onProxyRes\"]> = (onToken) => {\n    return function (proxyRes, req, res) {\n        let body = \"\";\n        proxyRes.on(\"data\", (chunk) => {\n            body += chunk;\n        });\n        proxyRes.on(\"end\", () => {\n            let sessionToken: string | undefined = undefined;\n            try {\n                const parsed = JSON.parse(body);\n                sessionToken = parsed.session_token;\n            } catch (err) {\n                //\n            }\n            if (!sessionToken) {\n                if (body?.includes?.(\"an+account+with+the+same+identifier\")) {\n                    res.redirect(\n                        \"/after-login?error=An+account+with+the+same+identifier+exists+already\",\n                    );\n                    return;\n                }\n                res.redirect(\"/after-login?error=Invalid-session-token\");\n                return;\n            }\n\n            // After grabbing the session_token, convert it to JWT, then redirect to /after-login\n            tokenize(sessionToken).then((tokenized) => {\n                onToken(sessionToken, tokenized ?? \"\");\n                res.redirect(`/after-login`);\n            });\n        });\n    };\n};\n\nexport const serveProxy = async (app: Express) => {\n    let { token, jwt } = await loadAuth();\n\n    const authProxy = createProxyMiddleware({\n        target: REFINE_API_URL,\n        // secure: false,\n        changeOrigin: true,\n        pathRewrite: { \"^/api/.auth\": \"/.auth\" },\n        cookieDomainRewrite: {\n            \"refine.dev\": \"\",\n        },\n        logLevel: __DEVELOPMENT__ ? \"debug\" : \"silent\",\n        headers: {\n            \"auth-base-url-rewrite\": `http://localhost:${SERVER_PORT}/api/.auth`,\n        },\n        selfHandleResponse: true,\n        onProxyReq: (proxyReq, req, ...rest) => {\n            if (token) {\n                proxyReq.setHeader(\"X-Session-Token\", token ?? \"\");\n\n                handleLogoutToken(token)(proxyReq, req, ...rest);\n            }\n        },\n        onProxyRes: (proxyRes, req, res) => {\n            if (req.url.includes(\"self-service/methods/oidc/callback\")) {\n                return handleSignInCallbacks((_token, _jwt) => {\n                    token = _token;\n                    jwt = _jwt;\n                    saveAuth(token, jwt);\n                })(proxyRes, req, res);\n            } else {\n                res.writeHead(proxyRes.statusCode || 500, proxyRes.headers);\n                proxyRes.pipe(res, { end: true });\n            }\n        },\n    });\n\n    app.use(\"/api/.auth\", authProxy);\n\n    const refineApiProxy = createProxyMiddleware({\n        target: REFINE_API_URL,\n        secure: false,\n        changeOrigin: true,\n        logLevel: __DEVELOPMENT__ ? \"debug\" : \"silent\",\n        pathRewrite: { \"^/api/.refine\": \"/.refine\" },\n        onProxyReq: (proxyReq, ...rest) => {\n            if (jwt) {\n                proxyReq.setHeader(\"Authorization\", `Bearer ${jwt}`);\n                proxyReq.removeHeader(\"cookie\");\n            }\n\n            restream(proxyReq, ...rest);\n        },\n    });\n\n    app.use(\"/api/.refine\", projectIdAppender, refineApiProxy);\n};\n","import { Express } from \"express\";\nimport path from \"path\";\n\nexport const serveOpenInEditor = (app: Express, basePath: string) => {\n    app.get(\"/open-in-editor/*\", (req, res) => {\n        const { line, column } = req.query;\n\n        const filePath = req.path.replace(\"/open-in-editor\", \"\");\n\n        const vscodeUrl = `vscode://file/${path.join(basePath, filePath)}?${\n            line ? `line=${line}` : \"\"\n        }${column ? `&column=${column}` : \"\"}`;\n\n        res.redirect(vscodeUrl);\n    });\n};\n","#!/usr/bin/env node\nimport { Command } from \"commander\";\n\nimport figlet from \"figlet\";\n\nimport checkUpdates from \"@commands/check-updates\";\nimport createResource from \"@commands/create-resource\";\nimport proxy from \"@commands/proxy\";\nimport { build, dev, run, start } from \"@commands/runner\";\nimport swizzle from \"@commands/swizzle\";\nimport update from \"@commands/update\";\nimport whoami from \"@commands/whoami\";\nimport devtools from \"@commands/devtools\";\nimport add from \"@commands/add\";\nimport { telemetryHook } from \"@telemetryindex\";\nimport { printAnnouncements } from \"@utils/announcement\";\nimport \"@utils/env\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_CLI_VERSION = \"1.0.0\";\n\nconst bootstrap = () => {\n    const program = new Command();\n\n    program\n        .version(\n            `@refinedev/cli@${REFINE_CLI_VERSION}`,\n            \"-v, --version\",\n            \"Output the current version.\",\n        )\n        .description(\n            figlet.textSync(\"refine\", {\n                font: \"Isometric1\",\n                horizontalLayout: \"full\",\n                verticalLayout: \"full\",\n                whitespaceBreak: true,\n            }),\n        )\n        .usage(\"<command> [options]\")\n        .helpOption(\"-h, --help\", \"Output usage information.\");\n\n    // load commands\n    swizzle(program);\n    createResource(program);\n    update(program);\n    dev(program);\n    build(program);\n    start(program);\n    run(program);\n    checkUpdates(program);\n    whoami(program);\n    proxy(program);\n    devtools(program);\n    add(program);\n\n    program.hook(\"preAction\", printAnnouncements);\n\n    program.hook(\"postAction\", (thisCommand) => {\n        const command = thisCommand.args[0];\n\n        if ([\"run\"].includes(command)) return;\n\n        telemetryHook();\n    });\n\n    program.parse(process.argv);\n\n    if (!process.argv.slice(2).length) {\n        program.outputHelp();\n    }\n};\n\nbootstrap();\n","import React from \"react\";\nimport { RefinePackageInstalledVersionData } from \"@definitions/package\";\nimport Table from \"cli-table3\";\nimport chalk from \"chalk\";\nimport center from \"center-align\";\nimport { getDependencies, getPreferedPM, getScripts } from \"@utils/package\";\nimport { removeANSIColors } from \"@utils/text\";\n\nconst columns = {\n    name: \"name\",\n    current: \"current\",\n    wanted: \"wanted\",\n    latest: \"latest\",\n    changelog: \"changelog\",\n} as const;\n\nconst orderedColumns: (typeof columns)[keyof typeof columns][] = [\n    columns.name,\n    columns.current,\n    columns.wanted,\n    columns.latest,\n    columns.changelog,\n];\n\nexport interface UpdateWarningTableParams {\n    data: RefinePackageInstalledVersionData[];\n}\n\nexport const printUpdateWarningTable = async (\n    params: UpdateWarningTableParams,\n) => {\n    const data = params?.data;\n    const tableHead = Object.keys(data?.[0] || {});\n    if (!data || !tableHead.length) return;\n\n    const table = new Table({\n        head: orderedColumns,\n        style: {\n            head: [\"blue\"],\n        },\n    });\n\n    data.forEach((row) => {\n        table.push(\n            orderedColumns.map((column) => {\n                const columnValue = row[column];\n                if (!columnValue) return columnValue;\n\n                if (column === \"latest\" || column === \"wanted\") {\n                    const installedVersion = parseVersions(row.current);\n                    const latestVersion = parseVersions(columnValue);\n                    const colors = getColorsByVersionDiffrence(\n                        installedVersion,\n                        latestVersion,\n                    );\n                    const textMajor = chalk[colors.major](latestVersion.major);\n                    const textMinor = chalk[colors.minor](latestVersion.minor);\n                    const textPatch = chalk[colors.patch](latestVersion.patch);\n                    return `${textMajor}.${textMinor}.${textPatch}`;\n                }\n\n                if (column === \"changelog\") {\n                    return chalk.blueBright.underline(columnValue);\n                }\n\n                return columnValue;\n            }),\n        );\n    });\n\n    const tableOutput = table.toString();\n    const tableWidth = removeANSIColors(\n        tableOutput.split(\"\\n\")?.[0] || \"\",\n    ).length;\n    console.log();\n    console.log(center(\"Update Available\", tableWidth));\n    console.log(tableOutput);\n    console.log(\n        center(\n            `To update ${chalk.bold(\"`refine`\")} packages with wanted version`,\n            tableWidth,\n        ),\n    );\n    console.log(\n        center(\n            ` Run the following command: ${chalk.yellowBright(\n                await getInstallCommand(),\n            )}`,\n            tableWidth,\n        ),\n    );\n    console.log();\n};\n\nconst parseVersions = (text: string) => {\n    const versions = text.split(\".\");\n    return {\n        major: versions[0],\n        minor: versions[1],\n        patch: versions[2],\n    };\n};\n\nconst getColorsByVersionDiffrence = (\n    installedVersion: ReturnType<typeof parseVersions>,\n    nextVersion: ReturnType<typeof parseVersions>,\n) => {\n    const isMajorDiffrence =\n        installedVersion.major.trim() !== nextVersion.major.trim();\n\n    if (isMajorDiffrence)\n        return {\n            major: \"red\",\n            minor: \"red\",\n            patch: \"red\",\n        } as const;\n\n    const isMinorDiffrence =\n        installedVersion.minor.trim() !== nextVersion.minor.trim();\n\n    if (isMinorDiffrence)\n        return {\n            major: \"white\",\n            minor: \"yellow\",\n            patch: \"yellow\",\n        } as const;\n\n    const isPatchDiffrence =\n        installedVersion.patch.trim() !== nextVersion.patch.trim();\n    if (isPatchDiffrence)\n        return {\n            major: \"white\",\n            minor: \"white\",\n            patch: \"green\",\n        } as const;\n\n    return {\n        major: \"white\",\n        minor: \"white\",\n        patch: \"white\",\n    } as const;\n};\n\nexport const getInstallCommand = async () => {\n    const fallbackCommand = `npx @refinedev/cli update`;\n\n    const dependencies = getDependencies();\n    const scriptKeys = Object.keys(getScripts());\n\n    const hasCli = dependencies.includes(\"@refinedev/cli\");\n    const hasScript = scriptKeys.includes(\"refine\");\n\n    if (!hasCli && !hasScript) {\n        return fallbackCommand;\n    }\n\n    const pm = await getPreferedPM();\n\n    if (hasScript) {\n        return `${pm.name} run refine update`;\n    }\n\n    if (hasCli) {\n        return `npx refine update`;\n    }\n\n    return fallbackCommand;\n};\n","import ora from \"ora\";\n\nconst spinner = async <T>(fn: () => Promise<T>, message: string) => {\n    const spinner = ora({\n        color: \"cyan\",\n        text: message,\n    }).start();\n    const result = await fn();\n    spinner.stop();\n    return result;\n};\n\nexport default spinner;\n","import spinner from \"@utils/spinner\";\nimport execa from \"execa\";\nimport { existsSync, pathExists, readFileSync, readJSON } from \"fs-extra\";\nimport globby from \"globby\";\nimport path from \"path\";\nimport preferredPM from \"preferred-pm\";\n\n// TODO: Add package.json type\nexport const getPackageJson = (): any => {\n    if (!existsSync(\"package.json\")) {\n        throw new Error(\"./package.json not found\");\n    }\n\n    return JSON.parse(readFileSync(\"package.json\", \"utf8\"));\n};\n\nexport const getDependencies = (): string[] => {\n    const packageJson = getPackageJson();\n    return Object.keys(packageJson.dependencies || {});\n};\n\nexport const getDependenciesWithVersion = (): string[] => {\n    const packageJson = getPackageJson();\n    return packageJson.dependencies;\n};\n\nexport const getDevDependencies = (): string[] => {\n    const packageJson = getPackageJson();\n    return Object.keys(packageJson.devDependencies || {});\n};\n\nexport const getScripts = (): Record<string, string> => {\n    const packageJson = getPackageJson();\n    return packageJson.scripts;\n};\n\nexport const getInstalledRefinePackages = async () => {\n    try {\n        const execution = await execa(\"npm\", [\"ls\", \"--depth=0\", \"--json\"], {\n            reject: false,\n        });\n\n        const dependencies = JSON.parse(execution.stdout)?.dependencies || {};\n        const refineDependencies = Object.keys(dependencies).filter(\n            (dependency) =>\n                dependency.startsWith(\"@refinedev\") ||\n                dependency.startsWith(\"@pankod/refine-\"),\n        );\n\n        const normalize: {\n            name: string;\n            version: string;\n        }[] = [];\n\n        for (const dependency of refineDependencies) {\n            const version = dependencies[dependency].version;\n            normalize.push({\n                name: dependency,\n                version,\n            });\n        }\n\n        return normalize;\n    } catch (error) {\n        return Promise.resolve(null);\n    }\n};\n\nexport const getInstalledRefinePackagesFromNodeModules = async () => {\n    const REFINE_PACKAGES = [\"ably\", \"airtable\", \"antd\", \"appwrite\", \"chakra-ui\", \"codemod\", \"core\", \"devtools\", \"devtools-internal\", \"devtools-server\", \"devtools-shared\", \"devtools-ui\", \"graphql\", \"hasura\", \"inferencer\", \"kbar\", \"mantine\", \"medusa\", \"mui\", \"nestjs-query\", \"nestjsx-crud\", \"nextjs-router\", \"nhost\", \"react-hook-form\", \"react-location\", \"react-router-v6\", \"react-table\", \"remix\", \"shared\", \"simple-rest\", \"strapi\", \"strapi-graphql\", \"strapi-v4\", \"supabase\"];\n\n    try {\n        const packagesFromGlobbySearch = await globby(\n            \"node_modules/@refinedev/*\",\n            {\n                onlyDirectories: true,\n            },\n        );\n\n        const packageDirsFromModules = REFINE_PACKAGES.flatMap((pkg) => {\n            try {\n                const pkgPath = require.resolve(\n                    path.join(\"@refinedev\", pkg, \"package.json\"),\n                );\n\n                return [path.dirname(pkgPath)];\n            } catch (err) {\n                return [];\n            }\n        });\n\n        const refinePackages: Array<{\n            name: string;\n            path: string;\n            version: string;\n        }> = [];\n\n        await Promise.all(\n            [...packageDirsFromModules, ...packagesFromGlobbySearch].map(\n                async (packageDir) => {\n                    const hasPackageJson = await pathExists(\n                        `${packageDir}/package.json`,\n                    );\n                    if (hasPackageJson) {\n                        const packageJson = await readJSON(\n                            `${packageDir}/package.json`,\n                        );\n\n                        refinePackages.push({\n                            name: packageJson.name,\n                            version: packageJson.version,\n                            path: packageDir,\n                        });\n                    }\n                },\n            ),\n        );\n\n        return refinePackages;\n    } catch (err) {\n        return [];\n    }\n};\n\nexport const isPackageHaveRefineConfig = async (packagePath: string) => {\n    return await pathExists(`${packagePath}/refine.config.js`);\n};\n\nexport const pmCommands = {\n    npm: {\n        install: [\"install\", \"--save\"],\n        installDev: [\"install\", \"--save-dev\"],\n        outdatedJson: [\"outdated\", \"--json\"],\n    },\n    yarn: {\n        install: [\"add\"],\n        installDev: [\"add\", \"-D\"],\n        outdatedJson: [\"outdated\", \"--json\"],\n    },\n    pnpm: {\n        install: [\"add\"],\n        installDev: [\"add\", \"-D\"],\n        outdatedJson: [\"outdated\", \"--format\", \"json\"],\n    },\n};\n\nexport const getPreferedPM = async () => {\n    const pm = await spinner(\n        () => preferredPM(process.cwd()),\n        \"Getting package manager...\",\n    );\n\n    if (!pm) {\n        throw new Error(\"Package manager not found.\");\n    }\n\n    return pm;\n};\n\nexport const installPackages = async (packages: string[]) => {\n    const pm = await getPreferedPM();\n\n    try {\n        const installCommand = pmCommands[pm.name].install;\n\n        const execution = execa(pm.name, [...installCommand, ...packages], {\n            stdio: \"inherit\",\n        });\n\n        execution.on(\"message\", (message) => {\n            console.log(message);\n        });\n\n        execution.on(\"error\", (error) => {\n            console.log(error);\n        });\n\n        execution.on(\"exit\", (exitCode) => {\n            if (exitCode === 0) {\n                console.log(\"All `refine` packages updated  🎉\");\n                return;\n            }\n\n            console.log(`Application exited with code ${exitCode}`);\n        });\n    } catch (error: any) {\n        throw new Error(error);\n    }\n};\n\nexport const installPackagesSync = async (packages: string[]) => {\n    const pm = await getPreferedPM();\n\n    try {\n        const installCommand = pmCommands[pm.name].install;\n\n        const execution = execa.sync(\n            pm.name,\n            [...installCommand, ...packages],\n            {\n                stdio: \"inherit\",\n            },\n        );\n\n        if (execution.failed || execution.exitCode !== 0) {\n            throw new Error(execution.stderr);\n        }\n\n        return execution;\n    } catch (error: any) {\n        throw new Error(error);\n    }\n};\n\nexport interface PackageNameAndVersion {\n    name: string;\n    version: string | null;\n}\n\nexport const parsePackageNameAndVersion = (\n    str: string,\n): PackageNameAndVersion => {\n    const versionStartIndex = str.lastIndexOf(\"@\");\n\n    if (versionStartIndex <= 0) {\n        return {\n            name: str,\n            version: null,\n        };\n    }\n\n    return {\n        name: str.slice(0, versionStartIndex),\n        version: str.slice(versionStartIndex + 1),\n    };\n};\n\nexport const getRefineProjectId = () => {\n    const packageJson = getPackageJson();\n\n    return packageJson?.refine?.projectId;\n};\n\nexport const isDevtoolsInstalled = async () => {\n    const installedPackages = await getInstalledRefinePackagesFromNodeModules();\n\n    return installedPackages.some((pkg) => pkg.name === \"@refinedev/devtools\");\n};\n","export const uppercaseFirstChar = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const removeANSIColors = (str: string): string => {\n    return str.replace(\n        /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,\n        \"\",\n    );\n};\n","import { Command } from \"commander\";\nimport { printUpdateWarningTable } from \"@components/update-warning-table\";\nimport { pmCommands } from \"@utils/package\";\nimport execa from \"execa\";\nimport spinner from \"@utils/spinner\";\nimport {\n    NpmOutdatedResponse,\n    RefinePackageInstalledVersionData,\n} from \"@definitions/package\";\nimport semverDiff from \"semver-diff\";\n\nconst load = (program: Command) => {\n    return program\n        .command(\"check-updates\")\n        .description(\"Check all installed `refine` packages are up to date\")\n        .action(action);\n};\n\nconst action = async () => {\n    const packages = await spinner(isRefineUptoDate, \"Checking for updates...\");\n    if (!packages.length) {\n        console.log(\"All `refine` packages are up to date 🎉\\n\");\n        return;\n    }\n\n    await printUpdateWarningTable({ data: packages });\n};\n\n/**\n *\n * @returns `refine` packages that have updates.\n * @returns `[]` if no refine package found.\n * @returns `[]` if all `refine` packages are up to date.\n */\nexport const isRefineUptoDate = async () => {\n    const refinePackages = await getOutdatedRefinePackages();\n\n    return refinePackages;\n};\n\nexport const getOutdatedRefinePackages = async () => {\n    const packages = await getOutdatedPackageList();\n    if (!packages) return [];\n\n    const list: RefinePackageInstalledVersionData[] = [];\n    let changelog: string | undefined = undefined;\n\n    Object.keys(packages).forEach((packageName) => {\n        const dependency = packages[packageName];\n\n        if (packageName.includes(\"@refinedev\")) {\n            changelog = packageName.replace(\n                /@refinedev\\//,\n                \"https://c.refine.dev/\",\n            );\n\n            list.push({\n                name: packageName,\n                current: dependency.current,\n                wanted: dependency.wanted,\n                latest: dependency.latest,\n                changelog,\n            });\n        }\n    });\n\n    // When user has installed `next` version, it will be ahead of the `latest` version. But `npm outdated` command still returns as an outdated package.\n    // So we need to filter out the if `current` version is ahead of `latest` version.\n    // ex: in the npm registry `next` version is 1.1.1 -> [current:1.1.1, wanted:1.1.1, latest:1.1.0]\n    const filteredList = list.filter((item) => {\n        const diff = semverDiff(item.current, item.latest);\n        return !!diff;\n    });\n\n    return filteredList;\n};\n\nexport const getOutdatedPackageList = async () => {\n    const pm = \"npm\";\n\n    const { stdout, timedOut } = await execa(pm, pmCommands[pm].outdatedJson, {\n        reject: false,\n        timeout: 25 * 1000,\n    });\n\n    if (timedOut) {\n        throw new Error(\"Timed out while checking for updates.\");\n    }\n\n    if (!stdout) return null;\n\n    return JSON.parse(stdout) as NpmOutdatedResponse | null;\n};\n\nexport default load;\n","export enum ProjectTypes {\n    REACT_SCRIPT = \"react-scripts\",\n    REMIX = \"remix\",\n    NEXTJS = \"nextjs\",\n    VITE = \"vite\",\n    CRACO = \"craco\",\n    PARCEL = \"parcel\",\n    UNKNOWN = \"unknown\",\n}\n","export enum UIFrameworks {\n    ANTD = \"antd\",\n    MUI = \"mui\",\n    MANTINE = \"mantine\",\n    CHAKRA = \"chakra-ui\",\n}\n","export enum PackageManagerTypes {\n    NPM = \"npm\",\n    YARN = \"yarn\",\n    PNPM = \"pnpm\",\n}\n\nexport type NpmOutdatedResponse = Record<\n    string,\n    {\n        current: string;\n        wanted: string;\n        latest: string;\n        dependet?: string;\n    }\n>;\n\nexport type RefinePackageInstalledVersionData = {\n    name: string;\n    current: string;\n    wanted: string;\n    latest: string;\n    changelog?: string;\n};\n","import { ProjectTypes, UIFrameworks } from \"@definitions\";\nimport { getDependencies, getDevDependencies } from \"@utils/package\";\n\nexport const getProjectType = (platform?: ProjectTypes): ProjectTypes => {\n    if (platform) {\n        return platform;\n    }\n    // read dependencies from package.json\n    const dependencies = getDependencies();\n    const devDependencies = getDevDependencies();\n\n    // check for craco\n    // craco and react-scripts installs together. We need to check for craco first\n    if (\n        dependencies.includes(\"@craco/craco\") ||\n        devDependencies.includes(\"@craco/craco\")\n    ) {\n        return ProjectTypes.CRACO;\n    }\n\n    // check for react-scripts\n    if (\n        dependencies.includes(\"react-scripts\") ||\n        devDependencies.includes(\"react-scripts\")\n    ) {\n        return ProjectTypes.REACT_SCRIPT;\n    }\n\n    // check for next\n    if (dependencies.includes(\"next\") || devDependencies.includes(\"next\")) {\n        return ProjectTypes.NEXTJS;\n    }\n\n    // check for remix\n    if (\n        dependencies.includes(\"@remix-run/react\") ||\n        devDependencies.includes(\"@remix-run/react\")\n    ) {\n        return ProjectTypes.REMIX;\n    }\n\n    // check for vite\n    if (dependencies.includes(\"vite\") || devDependencies.includes(\"vite\")) {\n        return ProjectTypes.VITE;\n    }\n\n    if (dependencies.includes(\"parcel\") || devDependencies.includes(\"parcel\")) {\n        return ProjectTypes.PARCEL;\n    }\n\n    return ProjectTypes.UNKNOWN;\n};\n\nexport const getUIFramework = (): UIFrameworks | undefined => {\n    // read dependencies from package.json\n    const dependencies = getDependencies();\n\n    // check for antd\n    if (dependencies.includes(\"@refinedev/antd\")) {\n        return UIFrameworks.ANTD;\n    }\n\n    // check for mui\n    if (dependencies.includes(\"@refinedev/mui\")) {\n        return UIFrameworks.MUI;\n    }\n\n    // check for chakra\n    if (dependencies.includes(\"@refinedev/chakra-ui\")) {\n        return UIFrameworks.CHAKRA;\n    }\n\n    // check for mantine\n    if (dependencies.includes(\"@refinedev/mantine\")) {\n        return UIFrameworks.MANTINE;\n    }\n\n    return;\n};\n","import { ProjectTypes } from \"@definitions/projectTypes\";\n\nexport const getResourcePath = (\n    projectType: ProjectTypes,\n): { path: string; alias: string } => {\n    switch (projectType) {\n        case ProjectTypes.NEXTJS:\n            return {\n                path: \"src/components\",\n                alias: \"../src/components\",\n            };\n        case ProjectTypes.REMIX:\n            return {\n                path: \"app/components\",\n                alias: \"~/components\",\n            };\n    }\n\n    // vite and react\n    return {\n        path: \"src/pages\",\n        alias: \"pages\",\n    };\n};\n\nexport const getProviderPath = (\n    projectType: ProjectTypes,\n): { path: string; alias: string } => {\n    switch (projectType) {\n        case ProjectTypes.NEXTJS:\n            return {\n                path: \"src/providers\",\n                alias: \"../src/providers\",\n            };\n        case ProjectTypes.REMIX:\n            return {\n                path: \"app/providers\",\n                alias: \"~/providers\",\n            };\n    }\n\n    // vite and react\n    return {\n        path: \"src/providers\",\n        alias: \"providers\",\n    };\n};\n\nexport const getFilesPathByProject = (projectType?: ProjectTypes) => {\n    switch (projectType) {\n        case ProjectTypes.REMIX:\n            return \"./app\";\n        case ProjectTypes.NEXTJS:\n        case ProjectTypes.REACT_SCRIPT:\n        case ProjectTypes.VITE:\n        case ProjectTypes.CRACO:\n        case ProjectTypes.PARCEL:\n        case ProjectTypes.UNKNOWN:\n        default:\n            return \"./src\";\n    }\n};\n","import {\n    copySync,\n    unlinkSync,\n    moveSync,\n    pathExistsSync,\n    mkdirSync,\n} from \"fs-extra\";\nimport temp from \"temp\";\nimport { plural } from \"pluralize\";\nimport execa from \"execa\";\nimport inquirer from \"inquirer\";\nimport { join } from \"path\";\nimport { compileDir } from \"@utils/compile\";\nimport { uppercaseFirstChar } from \"@utils/text\";\nimport { getProjectType, getUIFramework } from \"@utils/project\";\nimport { getResourcePath } from \"@utils/resource\";\n\nconst defaultActions = [\"list\", \"create\", \"edit\", \"show\"];\n\nexport const createResources = async (\n    params: { actions?: string; path?: string },\n    resources: string[],\n) => {\n    const destinationPath =\n        params?.path || getResourcePath(getProjectType()).path;\n    let actions = params.actions || defaultActions.join(\",\");\n\n    if (!resources.length) {\n        // TODO: Show inquirer\n        const { name, selectedActions } = await inquirer.prompt<{\n            name: string;\n            selectedActions: string[];\n        }>([\n            {\n                type: \"input\",\n                name: \"name\",\n                message: \"Resource Name\",\n                validate: (value) => {\n                    if (!value) {\n                        return \"Resource Name is required\";\n                    }\n\n                    return true;\n                },\n            },\n            {\n                type: \"checkbox\",\n                name: \"selectedActions\",\n                message: \"Select Actions\",\n                choices: defaultActions,\n                default: params?.actions?.split(\",\"),\n            },\n        ]);\n\n        resources = [name];\n        actions = selectedActions.join(\",\");\n    }\n\n    resources.forEach((resourceName) => {\n        const customActions = actions ? actions.split(\",\") : undefined;\n        const resourceFolderName = plural(resourceName).toLowerCase();\n\n        // check exist resource\n        const resourcePath = join(\n            process.cwd(),\n            destinationPath,\n            resourceFolderName,\n        );\n\n        if (pathExistsSync(resourcePath)) {\n            console.error(\n                `❌ Resource (${join(\n                    destinationPath,\n                    resourceFolderName,\n                )}) already exist!`,\n            );\n            return;\n        }\n\n        // uppercase first letter\n        const resource = uppercaseFirstChar(resourceName);\n\n        // get the project type\n        const uiFramework = getUIFramework();\n\n        const sourceDir = `${__dirname}/../templates/resource`;\n\n        // create temp dir\n        const tempDir = generateTempDir();\n\n        // copy template files\n        copySync(sourceDir, tempDir);\n\n        const compileParams = {\n            resourceName,\n            resource,\n            actions: customActions || defaultActions,\n            uiFramework,\n        };\n\n        // compile dir\n        compileDir(tempDir, compileParams);\n\n        // delete ignored actions\n        if (customActions) {\n            defaultActions.forEach((action) => {\n                if (!customActions.includes(action)) {\n                    unlinkSync(`${tempDir}/${action}.tsx`);\n                }\n            });\n        }\n\n        // create desctination dir\n        mkdirSync(destinationPath, { recursive: true });\n\n        // copy to destination\n        const destinationResourcePath = `${destinationPath}/${resourceFolderName}`;\n\n        let moveSyncOptions = {};\n\n        // empty dir override\n        if (pathExistsSync(destinationResourcePath)) {\n            moveSyncOptions = { overwrite: true };\n        }\n        moveSync(tempDir, destinationResourcePath, moveSyncOptions);\n\n        // clear temp dir\n        temp.cleanupSync();\n\n        const jscodeshiftExecutable = require.resolve(\".bin/jscodeshift\");\n        const { stderr, stdout } = execa.sync(jscodeshiftExecutable, [\n            \"./\",\n            \"--extensions=ts,tsx,js,jsx\",\n            \"--parser=tsx\",\n            `--transform=${__dirname}/../src/transformers/resource.ts`,\n            `--ignore-pattern=**/.cache/**`,\n            `--ignore-pattern=**/node_modules/**`,\n            `--ignore-pattern=**/build/**`,\n            `--ignore-pattern=**/.next/**`,\n            // pass custom params to transformer file\n            `--__actions=${compileParams.actions}`,\n            `--__pathAlias=${getResourcePath(getProjectType()).alias}`,\n            `--__resourceFolderName=${resourceFolderName}`,\n            `--__resource=${resource}`,\n            `--__resourceName=${resourceName}`,\n        ]);\n\n        // console.log(stdout);\n\n        if (stderr) {\n            console.log(stderr);\n        }\n\n        console.log(\n            `🎉 Resource (${destinationResourcePath}) generated successfully!`,\n        );\n    });\n\n    return;\n};\n\nconst generateTempDir = (): string => {\n    temp.track();\n    return temp.mkdirSync(\"resource\");\n};\n","import Handlebars from \"handlebars\";\nimport {\n    readFileSync,\n    readdirSync,\n    createFileSync,\n    writeFileSync,\n    unlinkSync,\n} from \"fs-extra\";\n\nexport const compile = (filePath: string, params: any): string => {\n    const content = readFileSync(filePath);\n\n    Handlebars.registerHelper(\"ifIn\", function (elem, list, options) {\n        if (elem.includes(list)) {\n            return options.fn(Handlebars);\n        }\n        return options.inverse(Handlebars);\n    });\n\n    Handlebars.registerHelper(\"formatInferencerComponent\", function (string) {\n        if (!string) {\n            return;\n        }\n\n        switch (string) {\n            case \"chakra-ui\":\n                return \"ChakraUI\";\n\n            default:\n                return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    });\n\n    Handlebars.registerHelper(\"capitalize\", function (string) {\n        if (!string) {\n            return;\n        }\n\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    });\n\n    const template = Handlebars.compile(content.toString());\n    return template(params);\n};\n\nexport const compileDir = (dirPath: string, params: any) => {\n    const files = readdirSync(dirPath);\n\n    files.forEach((file: string) => {\n        const templateFilePath = `${dirPath}/${file}`;\n        // create file\n        const compiledFilePath = `${dirPath}/${file.replace(\".hbs\", \"\")}`;\n        createFileSync(compiledFilePath);\n\n        // write compiled file\n        writeFileSync(compiledFilePath, compile(templateFilePath, params));\n\n        // delete template file (*.hbs)\n        unlinkSync(templateFilePath);\n    });\n};\n","import { Command } from \"commander\";\nimport { getProjectType } from \"@utils/project\";\nimport { getResourcePath } from \"@utils/resource\";\nimport { createResources } from \"@commands/add/create-resource\";\n\nconst load = (program: Command) => {\n    const projectType = getProjectType();\n    const { path } = getResourcePath(projectType);\n\n    return program\n        .command(\"create-resource\")\n        .allowExcessArguments(true)\n        .description(\n            `Create a new resource files (deprecated, please use \"add resource\" command)`,\n        )\n        .option(\n            \"-a, --actions [actions]\",\n            \"Only generate the specified actions. (ex: list,create,edit,show)\",\n            \"list,create,edit,show\",\n        )\n        .option(\n            \"-p, --path [path]\",\n            \"Path to generate the resource files\",\n            path,\n        )\n        .action(action);\n};\n\nconst action = async (\n    params: { actions: string; path: string },\n    options: Command,\n) => {\n    createResources(params, options.args);\n};\n\nexport default load;\n","import { NODE_ENV } from \"@definitions/node\";\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst envSearchMap: Record<Exclude<NODE_ENV, \"custom\">, RegExp> = {\n    development: /dev/i,\n    production: /prod/i,\n    test: /test|tst/i,\n    \"continuous-integration\": /ci/i,\n    \"user-acceptance-testing\": /uat/i,\n    \"system-integration-testing\": /sit/i,\n};\n\nexport const getNodeEnv = (): NODE_ENV => {\n    const nodeEnv = process.env.NODE_ENV;\n\n    if (!nodeEnv) {\n        return \"development\";\n    }\n\n    let env: NODE_ENV = \"custom\";\n\n    for (const [key, value] of Object.entries(envSearchMap)) {\n        if (value.test(nodeEnv)) {\n            env = key as NODE_ENV;\n            break;\n        }\n    }\n\n    return env;\n};\n\nexport const ENV = {\n    NODE_ENV: getNodeEnv(),\n    REFINE_NO_TELEMETRY: process.env.REFINE_NO_TELEMETRY || \"false\",\n    UPDATE_NOTIFIER_IS_DISABLED:\n        process.env.UPDATE_NOTIFIER_IS_DISABLED || \"false\",\n    UPDATE_NOTIFIER_CACHE_TTL:\n        process.env.UPDATE_NOTIFIER_CACHE_TTL || 1000 * 60 * 60 * 24, // 24 hours,\n    REFINE_PROXY_DOMAIN:\n        process.env.REFINE_PROXY_DOMAIN || \"https://refine.dev\",\n    REFINE_PROXY_TARGET:\n        process.env.REFINE_PROXY_TARGET || \"http://localhost:3000\",\n    REFINE_PROXY_PORT: process.env.REFINE_PROXY_PORT || \"7313\",\n    REFINE_PROXY_REWRITE_URL:\n        process.env.REFINE_REWRITE_URL || \"http://localhost:7313\",\n};\n","import { ENV } from \"@utils/env\";\nimport { Command } from \"commander\";\nimport express from \"express\";\nimport { createProxyMiddleware } from \"http-proxy-middleware\";\nimport { OnProxyResCallback } from \"http-proxy-middleware/dist/types\";\n\nconst load = (program: Command) => {\n    return program\n        .command(\"proxy\")\n        .description(\"Manage proxy settings\")\n        .action(action)\n        .option(\n            \"-p, --port [port]\",\n            \"Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.\",\n            ENV.REFINE_PROXY_PORT,\n        )\n        .option(\n            \"-t, --target [target]\",\n            \"Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.\",\n            ENV.REFINE_PROXY_TARGET,\n        )\n        .option(\n            \"-d, --domain [domain]\",\n            \"Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.\",\n            ENV.REFINE_PROXY_DOMAIN,\n        )\n        .option(\n            \"-r, --rewrite-url [rewrite URL]\",\n            \"Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.\",\n            ENV.REFINE_PROXY_REWRITE_URL,\n        );\n};\n\nconst action = async ({\n    port,\n    target,\n    domain,\n    rewriteUrl,\n}: {\n    port: string;\n    target: string;\n    domain: string;\n    rewriteUrl: string;\n}) => {\n    const app = express();\n\n    const targetUrl = new URL(target);\n\n    const onProxyRes: OnProxyResCallback | undefined =\n        targetUrl.protocol === \"http:\"\n            ? (proxyRes) => {\n                  if (proxyRes.headers[\"set-cookie\"]) {\n                      proxyRes.headers[\"set-cookie\"]?.forEach((cookie, i) => {\n                          if (\n                              proxyRes &&\n                              proxyRes.headers &&\n                              proxyRes.headers[\"set-cookie\"]\n                          ) {\n                              proxyRes.headers[\"set-cookie\"][i] =\n                                  cookie.replace(\"Secure;\", \"\");\n                          }\n                      });\n                  }\n              }\n            : undefined;\n\n    app.use(\n        \"/.refine\",\n        createProxyMiddleware({\n            target: `${domain}/.refine`,\n            changeOrigin: true,\n            pathRewrite: { \"^/.refine\": \"\" },\n            logProvider: () => ({\n                log: console.log,\n                info: (msg) => {\n                    if (`${msg}`.includes(\"Proxy rewrite rule created\")) return;\n\n                    if (`${msg}`.includes(\"Proxy created\")) {\n                        console.log(\n                            `Proxying localhost:${port}/.refine to ${domain}/.refine`,\n                        );\n                    } else if (msg) {\n                        console.log(msg);\n                    }\n                },\n                warn: console.warn,\n                debug: console.debug,\n                error: console.error,\n            }),\n        }),\n    );\n\n    app.use(\n        \"/.auth\",\n        createProxyMiddleware({\n            target: `${domain}/.auth`,\n            changeOrigin: true,\n            cookieDomainRewrite: {\n                \"refine.dev\": \"\",\n            },\n            headers: {\n                \"auth-base-url-rewrite\": `${rewriteUrl}/.auth`,\n            },\n            pathRewrite: { \"^/.auth\": \"\" },\n            logProvider: () => ({\n                log: console.log,\n                info: (msg) => {\n                    if (`${msg}`.includes(\"Proxy rewrite rule created\")) return;\n\n                    if (`${msg}`.includes(\"Proxy created\")) {\n                        console.log(\n                            `Proxying localhost:${port}/.auth to ${domain}/.auth`,\n                        );\n                    } else if (msg) {\n                        console.log(msg);\n                    }\n                },\n                warn: console.warn,\n                debug: console.debug,\n                error: console.error,\n            }),\n            onProxyRes,\n        }),\n    );\n\n    app.use(\n        \"*\",\n        createProxyMiddleware({\n            target: `${target}`,\n            changeOrigin: true,\n            ws: true,\n            logProvider: () => ({\n                log: console.log,\n                info: (msg) => {\n                    if (`${msg}`.includes(\"Proxy created\")) {\n                        console.log(`Proxying localhost:${port} to ${target}`);\n                    } else if (msg) {\n                        console.log(msg);\n                    }\n                },\n                warn: console.warn,\n                debug: console.debug,\n                error: console.error,\n            }),\n        }),\n    );\n\n    app.listen(Number(port));\n};\n\nexport default load;\n","import { ProjectTypes } from \"@definitions/projectTypes\";\nimport { getProjectType } from \"@utils/project\";\nimport { Command, Option } from \"commander\";\nimport { updateNotifier } from \"src/update-notifier\";\nimport { projectScripts } from \"../projectScripts\";\nimport { runScript } from \"../runScript\";\nimport { getPlatformOptionDescription, getRunnerDescription } from \"../utils\";\n\nconst start = (program: Command) => {\n    return program\n        .command(\"start\")\n        .description(getRunnerDescription(\"start\"))\n        .allowUnknownOption(true)\n        .addOption(\n            new Option(\n                \"-p, --platform <platform>\",\n                getPlatformOptionDescription(),\n            ).choices(\n                Object.values(ProjectTypes).filter(\n                    (type) => type !== ProjectTypes.UNKNOWN,\n                ),\n            ),\n        )\n        .argument(\"[args...]\")\n        .action(action);\n};\n\nconst action = async (\n    args: string[],\n    { platform }: { platform: ProjectTypes },\n) => {\n    const projectType = getProjectType(platform);\n\n    const binPath = projectScripts[projectType].getBin(\"start\");\n    const command = projectScripts[projectType].getStart(args);\n\n    await updateNotifier();\n\n    runScript(binPath, command);\n};\n\nexport default start;\n","import Conf from \"conf\";\nimport chalk from \"chalk\";\nimport { isRefineUptoDate } from \"@commands/check-updates\";\nimport { printUpdateWarningTable } from \"@components/update-warning-table\";\nimport { RefinePackageInstalledVersionData } from \"@definitions/package\";\nimport { getInstalledRefinePackages } from \"@utils/package\";\nimport { ENV } from \"@utils/env\";\nimport { stringToBase64 } from \"@utils/encode\";\n\nconst STORE_NAME = \"refine-update-notifier\";\n\nexport interface Store {\n    key: string;\n    lastUpdated: number;\n    packages: RefinePackageInstalledVersionData[];\n}\n\nexport const store = new Conf<Store>({\n    projectName: STORE_NAME,\n    defaults: {\n        key: \"\",\n        lastUpdated: 0,\n        packages: [],\n    },\n});\n\n// update notifier should not throw any unhandled error to prevent breaking user workflow.\nexport const updateNotifier = async () => {\n    if (isUpdateNotifierDisabled()) return;\n\n    const shouldUpdate = await shouldUpdatePackagesCache();\n    if (shouldUpdate === null) return;\n    if (shouldUpdate) {\n        updatePackagesCache();\n        return;\n    }\n\n    showWarning();\n    updatePackagesCache();\n};\n\n/**\n * renders outdated packages table if there is any\n */\nconst showWarning = async () => {\n    const packages = store.get(\"packages\");\n    if (!packages?.length) return;\n\n    await printUpdateWarningTable({ data: packages });\n    console.log(\"\\n\");\n};\n\n/**\n * @returns `null` It's mean something went wrong while checking key or cache. so we should not update cache.\n * @returns `boolean` if cache should be updated or not\n *   if cache is expired or key is invalid, update cache in background and not show warning\n */\nexport const shouldUpdatePackagesCache = async () => {\n    const isKeyValid = await validateKey();\n    const isExpired = isPackagesCacheExpired();\n\n    if (isKeyValid === null) return null;\n\n    if (isExpired || !isKeyValid) return true;\n\n    return false;\n};\n\n/**\n * @returns `null` something went wrong\n * @returns `packages` if packages updated\n */\nexport const updatePackagesCache = async () => {\n    try {\n        const packages = await isRefineUptoDate();\n\n        store.set(\"packages\", packages);\n        store.set(\"lastUpdated\", Date.now());\n        store.set(\"key\", await generateKeyFromPackages());\n\n        return packages;\n    } catch (error) {\n        // invalidate store\n        store.set(\"packages\", []);\n        store.set(\"lastUpdated\", Date.now());\n        store.set(\"key\", \"\");\n        return null;\n    }\n};\n\nexport const isPackagesCacheExpired = () => {\n    const lastUpdated = store.get(\"lastUpdated\");\n\n    if (!lastUpdated) return true;\n\n    const now = Date.now();\n\n    const diff = now - lastUpdated;\n    const cacheTTL = Number(ENV.UPDATE_NOTIFIER_CACHE_TTL);\n\n    return diff >= cacheTTL;\n};\n\n/**\n * @returns `true` if key is valid\n * @returns `false` if key is invalid\n * @returns `null` if there is an error\n */\nexport const validateKey = async () => {\n    const key = store.get(\"key\");\n    const newKey = await generateKeyFromPackages();\n\n    if (newKey === null) return null;\n\n    return key === newKey;\n};\n\n/**\n * @returns `null` if there is an error\n * @returns `string` if key is generated\n */\nexport const generateKeyFromPackages = async () => {\n    const packages = await getInstalledRefinePackages();\n    if (!packages) {\n        console.error(\n            chalk.red(\n                `Something went wrong when trying to get installed \\`refine\\` packages.`,\n            ),\n        );\n\n        return null;\n    }\n\n    const currentVersionsWithName = packages.map(\n        (p) => `${p.name}@${p.version}`,\n    );\n    const hash = stringToBase64(currentVersionsWithName.toString());\n\n    return hash;\n};\n\nexport const isUpdateNotifierDisabled = () => {\n    return ENV.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase() === \"true\";\n};\n","export const stringToBase64 = (str: string) => {\n    if (typeof btoa !== \"undefined\") {\n        return btoa(str);\n    }\n\n    return Buffer.from(str).toString(\"base64\");\n};\n\nexport const base64ToString = (base64: string) => {\n    if (typeof atob !== \"undefined\") {\n        return atob(base64);\n    }\n    return Buffer.from(base64, \"base64\").toString();\n};\n","import { ProjectTypes } from \"@definitions/projectTypes\";\n\n/**\n * Map `refine` cli commands to project script\n */\nexport const projectScripts = {\n    [ProjectTypes.REACT_SCRIPT]: {\n        getDev: (args: string[]) => [\"start\", ...args],\n        getStart: (args: string[]) => [\"start\", ...args],\n        getBuild: (args: string[]) => [\"build\", ...args],\n        getBin: () => require.resolve(\".bin/react-scripts\"),\n    },\n    [ProjectTypes.VITE]: {\n        getDev: (args: string[]) => [\"dev\", ...args],\n        getStart: (args: string[]) => [\"preview\", ...args],\n        getBuild: (args: string[]) => [\"build\", ...args],\n        getBin: () => require.resolve(\".bin/vite\"),\n    },\n    [ProjectTypes.NEXTJS]: {\n        getDev: (args: string[]) => [\"dev\", ...args],\n        getStart: (args: string[]) => [\"start\", ...args],\n        getBuild: (args: string[]) => [\"build\", ...args],\n        getBin: () => require.resolve(\".bin/next\"),\n    },\n    [ProjectTypes.REMIX]: {\n        getDev: (args: string[]) => [\"dev\", ...args],\n        getStart: (args: string[]) => {\n            // remix-serve accepts a path to the entry file as an argument\n            // if we have arguments, we will pass them to remix-serve and do nothing.\n            // ex: `refine start ./build/index.js`\n            const hasArgs = args?.length;\n            if (hasArgs) {\n                return args;\n            }\n\n            // otherwise print a warning and use `./build/index.js` as default\n            console.log();\n            console.warn(\n                `🚨 Remix requires a path to the entry file. Please provide it as an argument to \\`refine start\\` command in package.json scripts`,\n            );\n            console.warn(\"Refine will use `./build/index.js` as default\");\n            console.warn(\"Example: `refine start ./build/index.js`\");\n            console.log();\n\n            return [\"./build/index.js\"];\n        },\n        getBuild: (args: string[]) => [\"build\", ...args],\n        getBin: (type?: \"dev\" | \"start\" | \"build\") => {\n            const binName = type === \"start\" ? \"remix-serve\" : \"remix\";\n            return require.resolve(\n                `${process.cwd()}/node_modules/.bin/${binName}`,\n            );\n        },\n    },\n    [ProjectTypes.CRACO]: {\n        getDev: (args: string[]) => [\"start\", ...args],\n        getStart: (args: string[]) => [\"start\", ...args],\n        getBuild: (args: string[]) => [\"build\", ...args],\n        getBin: () => require.resolve(\".bin/craco\"),\n    },\n    [ProjectTypes.PARCEL]: {\n        getDev: (args: string[]) => [\"start\", ...args],\n        getStart: (args: string[]) => [\"start\", ...args],\n        getBuild: (args: string[]) => [\"build\", ...args],\n        getBin: () => require.resolve(\".bin/parcel\"),\n    },\n    [ProjectTypes.UNKNOWN]: {\n        getDev: (args: string[]) => [...args],\n        getStart: (args: string[]) => [...args],\n        getBuild: (args: string[]) => [...args],\n        getBin: () => {\n            return \"unknown\";\n        },\n    },\n};\n","import { ProjectTypes } from \"@definitions/projectTypes\";\nimport execa from \"execa\";\n\nexport const runScript = async (binPath: string, args: string[]) => {\n    if (binPath === \"unknown\") {\n        const supportedProjectTypes = Object.values(ProjectTypes)\n            .filter((v) => v !== \"unknown\")\n            .join(\", \");\n\n        console.error(\n            `We couldn't find executable for your project. Supported executables are ${supportedProjectTypes}.\\nPlease use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`,\n        );\n\n        return;\n    }\n\n    const execution = execa(binPath, args, {\n        stdio: \"pipe\",\n        windowsHide: false,\n        env: {\n            FORCE_COLOR: \"true\",\n            ...process.env,\n        },\n    });\n\n    execution.stdout?.pipe(process.stdout);\n    execution.stderr?.pipe(process.stderr);\n\n    return await execution;\n};\n","import { ProjectTypes } from \"@definitions/projectTypes\";\nimport { getProjectType } from \"@utils/project\";\nimport { projectScripts } from \"../projectScripts\";\n\nexport const getRunnerDescription = (runner: \"dev\" | \"start\" | \"build\") => {\n    let projectType = getProjectType();\n\n    let command: string[] = [];\n    switch (runner) {\n        case \"dev\":\n            command = projectScripts[projectType].getDev([\"\"]);\n            break;\n        case \"start\":\n            command = projectScripts[projectType].getStart([\"\"]);\n            break;\n        case \"build\":\n            command = projectScripts[projectType].getBuild([\"\"]);\n            break;\n    }\n\n    if (projectType === ProjectTypes.REMIX && runner === \"start\") {\n        projectType = \"remix-serve\" as ProjectTypes;\n    }\n\n    return `It runs: \\`${projectType} ${command.join(\n        \" \",\n    )}\\`. Also accepts all the arguments \\`${projectType}\\` accepts.`;\n};\n\nexport const getPlatformOptionDescription = () => {\n    return `Platform to run command on. \\nex: ${Object.values(\n        ProjectTypes,\n    ).join(\", \")}`;\n};\n","import { ProjectTypes } from \"@definitions/projectTypes\";\nimport { getProjectType } from \"@utils/project\";\nimport { Command, Option } from \"commander\";\nimport { updateNotifier } from \"src/update-notifier\";\nimport { devtoolsRunner } from \"src/commands/devtools\";\nimport { projectScripts } from \"../projectScripts\";\nimport { runScript } from \"../runScript\";\nimport { getPlatformOptionDescription, getRunnerDescription } from \"../utils\";\nimport { isDevtoolsInstalled } from \"@utils/package\";\n\nconst dev = (program: Command) => {\n    return program\n        .command(\"dev\")\n        .description(getRunnerDescription(\"dev\"))\n        .allowUnknownOption(true)\n        .addOption(\n            new Option(\n                \"-p, --platform <platform>\",\n                getPlatformOptionDescription(),\n            ).choices(\n                Object.values(ProjectTypes).filter(\n                    (type) => type !== ProjectTypes.UNKNOWN,\n                ),\n            ),\n        )\n        .addOption(\n            new Option(\n                \"-d, --devtools <devtools>\",\n                \"Start refine's devtools server\",\n            ).default(\"true\", \"true if devtools is installed\"),\n        )\n        .argument(\"[args...]\")\n        .action(action);\n};\n\nconst action = async (\n    args: string[],\n    { platform, ...params }: { devtools: string; platform: ProjectTypes },\n) => {\n    const projectType = getProjectType(platform);\n\n    const binPath = projectScripts[projectType].getBin(\"dev\");\n    const command = projectScripts[projectType].getDev(args);\n\n    await updateNotifier();\n\n    const devtoolsDefault = await isDevtoolsInstalled();\n\n    const devtools = params.devtools === \"false\" ? false : devtoolsDefault;\n\n    if (devtools) {\n        devtoolsRunner();\n    }\n\n    runScript(binPath, command);\n};\n\nexport default dev;\n","import { server } from \"@refinedev/devtools-server\";\nimport { addDevtoolsComponent } from \"@transformers/add-devtools-component\";\nimport {\n    getInstalledRefinePackagesFromNodeModules,\n    getPackageJson,\n    getPreferedPM,\n    installPackagesSync,\n    isDevtoolsInstalled,\n} from \"@utils/package\";\nimport { hasDefaultScript } from \"@utils/refine\";\nimport spinner from \"@utils/spinner\";\nimport boxen from \"boxen\";\nimport cardinal from \"cardinal\";\nimport chalk from \"chalk\";\nimport { Argument, Command } from \"commander\";\nimport dedent from \"dedent\";\nimport semver from \"semver\";\n\ntype DevtoolsCommand = \"start\" | \"init\";\n\nconst commands: DevtoolsCommand[] = [\"start\", \"init\"];\nconst defaultCommand: DevtoolsCommand = \"start\";\n\nconst minRefineCoreVersionForDevtools = \"4.42.0\";\n\nconst load = (program: Command) => {\n    return program\n        .command(\"devtools\")\n        .description(\n            \"Start or install refine's devtools server; it starts on port 5001.\",\n        )\n        .addArgument(\n            new Argument(\"[command]\", \"devtools related commands\")\n                .choices(commands)\n                .default(defaultCommand),\n        )\n        .addHelpText(\n            \"after\",\n            `\nCommands:\n    start     Start refine's devtools server\n    init      Install refine's devtools client and adds it to your project\n`,\n        )\n        .action(action);\n};\n\nexport const action = async (command: DevtoolsCommand) => {\n    switch (command) {\n        case \"start\":\n            devtoolsRunner();\n            return;\n        case \"init\":\n            devtoolsInstaller();\n            return;\n    }\n};\n\nconst devtoolsInstaller = async () => {\n    const corePackage = await getRefineCorePackage();\n\n    const isInstalled = await spinner(\n        isDevtoolsInstalled,\n        \"Checking if devtools is installed...\",\n    );\n    if (isInstalled) {\n        console.log(\"🎉 refine devtools is already installed\");\n        return;\n    }\n\n    if (\n        corePackage &&\n        (await validateCorePackageIsNotDeprecated({ pkg: corePackage }))\n    ) {\n        return;\n    }\n\n    console.log(\"🌱 Installing refine devtools...\");\n    const packagesToInstall = [\"@refinedev/devtools@latest\"];\n    // we should update core package if it is lower than minRefineCoreVersionForDevtools\n    if (\n        !corePackage ||\n        semver.lt(corePackage.version, minRefineCoreVersionForDevtools)\n    ) {\n        packagesToInstall.push(\"@refinedev/core@latest\");\n        console.log(`🌱 refine core package is being updated for devtools...`);\n    }\n    await installPackagesSync(packagesToInstall);\n\n    // empty line\n    console.log(\"\");\n    console.log(\"\");\n\n    console.log(\"🌱 Adding devtools component to your project....\");\n    await addDevtoolsComponent();\n    console.log(\n        \"✅ refine devtools package and components added to your project\",\n    );\n    // if core package is updated, we should show the updated version\n    if (packagesToInstall.includes(\"@refinedev/core@latest\")) {\n        const updatedCorePackage = await getRefineCorePackage();\n        console.log(\n            `✅ refine core package updated from ${\n                corePackage?.version ?? \"unknown\"\n            } to ${updatedCorePackage?.version ?? \"unknown\"}`,\n        );\n        console.log(\n            `   Changelog: ${chalk.underline.blueBright(\n                `https://c.refine.dev/core#${\n                    corePackage?.version.replaceAll(\".\", \"\") ?? \"\"\n                }`,\n            )}`,\n        );\n    }\n\n    // empty line\n    console.log(\"\");\n\n    const { dev } = hasDefaultScript();\n    if (dev) {\n        console.log(\n            `🙌 You're good to go. \"npm run dev\" will automatically starts the devtools server.`,\n        );\n        console.log(\n            `👉 You can also start the devtools server manually by running \"refine devtools start\"`,\n        );\n        return;\n    }\n\n    if (!dev) {\n        const scriptDev = getPackageJson().scripts?.dev;\n\n        console.log(\n            `🚨 Your have modified the \"dev\" script in your package.json. Because of that, \"npm run dev\" will not start the devtools server automatically.`,\n        );\n        console.log(`👉 You can append \"refine devtools\" to \"dev\" script`);\n        console.log(\n            `👉 You can start the devtools server manually by running \"refine devtools\"`,\n        );\n\n        // empty line\n        console.log(\"\");\n        console.log(\n            boxen(\n                cardinal.highlight(\n                    dedent(`\n                {\n                    \"scripts\": {\n                        \"dev\": \"${scriptDev} & refine devtools\",\n                        \"refine\": \"refine\"\n                    }\n                }  \n        `),\n                ),\n                {\n                    padding: 1,\n                    title: \"package.json\",\n                    dimBorder: true,\n                    borderColor: \"blueBright\",\n                    borderStyle: \"round\",\n                },\n            ),\n        );\n    }\n};\n\nexport const devtoolsRunner = async () => {\n    const corePackage = await getRefineCorePackage();\n\n    if (corePackage) {\n        if (await validateCorePackageIsNotDeprecated({ pkg: corePackage })) {\n            return;\n        }\n\n        if (semver.lt(corePackage.version, minRefineCoreVersionForDevtools)) {\n            console.log(\n                `🚨 You're using an old version of refine(${corePackage.version}). refine version should be @4.42.0 or higher to use devtools.`,\n            );\n            const pm = await getPreferedPM();\n            console.log(\n                `👉 You can update @refinedev/core package by running \"${pm.name} run refine update\"`,\n            );\n            return;\n        }\n    }\n\n    server();\n};\n\nconst getRefineCorePackage = async () => {\n    const installedRefinePackages =\n        await getInstalledRefinePackagesFromNodeModules();\n    const corePackage = installedRefinePackages?.find(\n        (pkg) =>\n            pkg.name === \"@refinedev/core\" ||\n            pkg.name === \"@pankod/refine-core\",\n    );\n\n    if (!corePackage) {\n        return undefined;\n    }\n\n    return corePackage;\n};\n\nexport const validateCorePackageIsNotDeprecated = async ({\n    pkg,\n}: {\n    pkg: { name: string; version: string };\n}) => {\n    if (pkg.name === \"@pankod/refine-core\" || semver.lt(pkg.version, \"4.0.0\")) {\n        console.log(\n            `🚨 You're using an old version of refine(${pkg.version}). refine version should be @4.42.0 or higher to use devtools.`,\n        );\n        console.log(\"You can follow migration guide to update refine.\");\n        console.log(\n            chalk.blue(\"https://refine.dev/docs/migration-guide/3x-to-4x/\"),\n        );\n        return true;\n    }\n\n    return false;\n};\n\nexport default load;\n","import {\n    API,\n    FileInfo,\n    JSCodeshift,\n    JSXElement,\n    ASTPath,\n    Collection,\n} from \"jscodeshift\";\nimport execa from \"execa\";\nimport { prettierFormat } from \"../utils/swizzle/prettierFormat\";\n\nexport const parser = \"tsx\";\n\n// runs .bin/jscodeshift with the default export transformer on the current directory\nexport const addDevtoolsComponent = async () => {\n    const jscodeshiftExecutable = require.resolve(\".bin/jscodeshift\");\n    const { stderr } = execa.sync(jscodeshiftExecutable, [\n        \"./\",\n        \"--extensions=ts,tsx,js,jsx\",\n        \"--parser=tsx\",\n        `--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,\n        `--ignore-pattern=**/.cache/**`,\n        `--ignore-pattern=**/node_modules/**`,\n        `--ignore-pattern=**/build/**`,\n        `--ignore-pattern=**/.next/**`,\n    ]);\n\n    if (stderr) {\n        console.log(stderr);\n    }\n};\n\nexport default async function transformer(file: FileInfo, api: API) {\n    const j = api.jscodeshift;\n    const source = j(file.source);\n\n    const refineElement = source.find(j.JSXElement, {\n        openingElement: {\n            name: {\n                name: \"Refine\",\n            },\n        },\n    });\n\n    const hasRefineElement = refineElement.length !== 0;\n\n    if (!hasRefineElement) {\n        return;\n    }\n\n    if (hasDevtoolsImport(j, source) && hasDevtoolsProvider(j, source)) {\n        return;\n    }\n\n    addDevtoolsImport(j, source);\n    refineElement.forEach((path) => {\n        wrapWithDevtoolsProvider(j, path);\n    });\n\n    return await prettierFormat(source.toSource());\n}\n\nexport const hasDevtoolsImport = (j: JSCodeshift, source: Collection) => {\n    return source.find(j.ImportDeclaration, {\n        source: {\n            value: \"@refinedev/devtools\",\n        },\n    }).length;\n};\n\nexport const hasDevtoolsProvider = (j: JSCodeshift, source: Collection) => {\n    return source.find(j.JSXElement, {\n        openingElement: {\n            name: {\n                name: \"DevtoolsProvider\",\n            },\n        },\n    }).length;\n};\n\nexport const addDevtoolsImport = (j: JSCodeshift, source: Collection) => {\n    const devtoolsImport = j.importDeclaration(\n        [\n            j.importSpecifier(j.identifier(\"DevtoolsProvider\")),\n            j.importSpecifier(j.identifier(\"DevtoolsPanel\")),\n        ],\n        j.literal(\"@refinedev/devtools\"),\n    );\n\n    source.get().node.program.body.unshift(devtoolsImport);\n};\n\nconst wrapWithDevtoolsProvider = (\n    j: JSCodeshift,\n    refineEelement: ASTPath<JSXElement>,\n) => {\n    const panel = j.jsxElement(\n        j.jsxOpeningElement(j.jsxIdentifier(\"DevtoolsPanel\")),\n    );\n    panel.openingElement.selfClosing = true;\n\n    const provider = j.jsxElement(\n        j.jsxOpeningElement(j.jsxIdentifier(\"DevtoolsProvider\")),\n        j.jsxClosingElement(j.jsxIdentifier(\"DevtoolsProvider\")),\n        // Pass in the refineEelement component as children\n        [refineEelement.value, panel],\n    );\n\n    j(refineEelement).replaceWith(provider);\n    return { panel, provider };\n};\n","import { format, resolveConfig } from \"prettier\";\n\nexport const prettierFormat = async (code: string) => {\n    try {\n        const prettierConfig = await resolveConfig(process.cwd());\n\n        return format(code, {\n            ...(prettierConfig ?? {}),\n            parser: \"typescript\",\n        });\n    } catch (err) {\n        return code;\n    }\n};\n","import { getPackageJson } from \"@utils/package\";\n\ntype ReturnType = {\n    dev: boolean;\n};\n\n/**\n * Checks if the project has a refine script in package.json\n */\nexport const hasDefaultScript = (): ReturnType => {\n    const packageJson = getPackageJson();\n\n    const scripts = packageJson.scripts || {};\n\n    const isDefault =\n        ((scripts?.dev || \"\") as string).match(/refine dev(\\s|$|;){1}/) !==\n        null;\n\n    return {\n        dev: isDefault,\n    };\n};\n","import { Command, Option } from \"commander\";\nimport { getProjectType } from \"@utils/project\";\nimport { projectScripts } from \"../projectScripts\";\nimport { runScript } from \"../runScript\";\nimport { updateNotifier } from \"src/update-notifier\";\nimport { getPlatformOptionDescription, getRunnerDescription } from \"../utils\";\nimport { ProjectTypes } from \"@definitions/projectTypes\";\n\nconst build = (program: Command) => {\n    return program\n        .command(\"build\")\n        .description(getRunnerDescription(\"build\"))\n        .allowUnknownOption(true)\n        .addOption(\n            new Option(\n                \"-p, --platform <platform>\",\n                getPlatformOptionDescription(),\n            ).choices(\n                Object.values(ProjectTypes).filter(\n                    (type) => type !== ProjectTypes.UNKNOWN,\n                ),\n            ),\n        )\n        .argument(\"[args...]\")\n        .action(action);\n};\n\nconst action = async (\n    args: string[],\n    { platform }: { platform: ProjectTypes },\n) => {\n    const projectType =  getProjectType(platform);\n\n    const binPath = projectScripts[projectType].getBin(\"build\");\n    const command = projectScripts[projectType].getBuild(args);\n\n\n    await updateNotifier();\n\n    try {\n        await runScript(binPath, command);\n    } catch (error) {\n        process.exit(1);\n    }\n};\n\nexport default build;\n","import { getPreferedPM, getScripts } from \"@utils/package\";\nimport chalk from \"chalk\";\nimport { Command } from \"commander\";\nimport { runScript } from \"../runScript\";\n\nconst run = (program: Command) => {\n    return program\n        .command(\"run\")\n        .description(\n            \"Runs a defined package script. If no `command` is provided, it will list the available scripts\",\n        )\n        .allowUnknownOption(true)\n        .argument(\"[command] [args...]\")\n        .action(action);\n};\n\nconst action = async (args: string[]) => {\n    const [script, ...restArgs] = args;\n\n    const scriptsInPackage = getScripts();\n\n    // Show available scripts when no script is provided\n    if (!script) {\n        console.log(`Available via ${chalk.blue(\"`refine run`\")}:\\n`);\n        for (const [key, value] of Object.entries(scriptsInPackage)) {\n            console.log(`  ${key}`);\n            console.log(`    ${chalk.dim(value)}`);\n            console.log();\n        }\n\n        return;\n    }\n\n    // Check if script exists in package.json\n    const isDefinedScript = Object.keys(scriptsInPackage).includes(script);\n    // If script is not defined, run from node_modules\n    if (!isDefinedScript) {\n        const binPath = `${process.cwd()}/node_modules/.bin/${script}`;\n        runScript(binPath, restArgs);\n        return;\n    }\n\n    const pm = await getPreferedPM();\n    runScript(pm.name, [\"run\", script, ...restArgs]);\n};\n\nexport default run;\n","import React from \"react\";\nimport path from \"path\";\nimport chalk from \"chalk\";\nimport inquirer from \"inquirer\";\nimport { Command, OptionValues } from \"commander\";\nimport inquirerAutoCompletePrompt from \"inquirer-autocomplete-prompt\";\nimport { ensureFile, pathExists, readFile, writeFile } from \"fs-extra\";\n\nimport { getRefineConfig } from \"@utils/swizzle\";\nimport { prettierFormat } from \"@utils/swizzle/prettierFormat\";\nimport {\n    getInstalledRefinePackagesFromNodeModules,\n    isPackageHaveRefineConfig,\n} from \"@utils/package\";\n\nimport { printSwizzleMessage } from \"@components/swizzle-message\";\n\nimport { SwizzleFile } from \"@definitions\";\nimport { parseSwizzleBlocks } from \"@utils/swizzle/parseSwizzleBlocks\";\nimport { reorderImports } from \"@utils/swizzle/import\";\nimport { SWIZZLE_CODES } from \"@utils/swizzle/codes\";\nimport boxen from \"boxen\";\nimport { getPathPrefix } from \"@utils/swizzle/getPathPrefix\";\nimport { installRequiredPackages } from \"./install-required-packages\";\n\nconst swizzle = (program: Command) => {\n    return program\n        .command(\"swizzle\")\n        .description(\n            `Export a component or a function from ${chalk.bold(\n                \"refine\",\n            )} packages to customize it in your project`,\n        )\n        .action(action);\n};\n\nconst getAutocompleteSource =\n    (\n        rawList: Array<{\n            label: string;\n            group?: string;\n            value?: Record<string, unknown>;\n        }>,\n    ) =>\n    (_answers: {}, input = \"\") => {\n        const filtered = rawList.filter(\n            (el) =>\n                el.label.toLowerCase().includes(input.toLowerCase()) ||\n                el.group?.toLowerCase().includes(input.toLowerCase()),\n        );\n\n        return filtered.flatMap((component, index, arr) => {\n            const hasTitle =\n                component?.group && arr[index - 1]?.group !== component.group;\n            const withTitle =\n                hasTitle && component.group\n                    ? [new inquirer.Separator(`${chalk.bold(component.group)}`)]\n                    : [];\n\n            return [\n                ...withTitle,\n                {\n                    name: ` ${component.label}`,\n                    value: component?.value ? component.value : component,\n                },\n            ];\n        });\n    };\n\nconst action = async (_options: OptionValues) => {\n    inquirer.registerPrompt(\"autocomplete\", inquirerAutoCompletePrompt);\n\n    const installedPackages = await getInstalledRefinePackagesFromNodeModules();\n\n    const packagesWithConfig: Array<{ name: string; path: string }> = [];\n\n    await Promise.all(\n        installedPackages.map(async (pkg) => {\n            const hasConfig = await isPackageHaveRefineConfig(pkg.path);\n            const isNotDuplicate =\n                packagesWithConfig.findIndex((el) => el.name === pkg.name) ===\n                -1;\n            if (hasConfig && isNotDuplicate) {\n                packagesWithConfig.push(pkg);\n            }\n        }),\n    );\n\n    if (packagesWithConfig.length === 0) {\n        console.log(\"No refine packages found with swizzle configuration.\");\n        return;\n    }\n\n    console.log(\n        `${boxen(\n            `Found ${chalk.blueBright(\n                packagesWithConfig.length,\n            )} installed ${chalk.blueBright.bold(\n                \"refine\",\n            )} packages with swizzle configuration.`,\n            {\n                padding: 1,\n                textAlignment: \"center\",\n                dimBorder: true,\n                borderColor: \"blueBright\",\n                borderStyle: \"round\",\n            },\n        )}\\n`,\n    );\n\n    const packageConfigs = await Promise.all(\n        packagesWithConfig.map(async (pkg) => {\n            const config = (await getRefineConfig(pkg.path, true)) ??\n                (await getRefineConfig(pkg.path, false)) ?? {\n                    swizzle: { items: [] },\n                };\n            return {\n                ...pkg,\n                config,\n            };\n        }),\n    );\n\n    const { selectedPackage } = await inquirer.prompt<{\n        selectedPackage: (typeof packageConfigs)[number];\n    }>([\n        {\n            type: \"autocomplete\",\n            pageSize: 10,\n            name: \"selectedPackage\",\n            message: \"Which package do you want to swizzle?\",\n            emptyText: \"No packages found.\",\n            source: getAutocompleteSource(\n                packageConfigs\n                    .sort((a, b) =>\n                        (a.config?.group ?? \"\").localeCompare(\n                            b.config?.group ?? \"\",\n                        ),\n                    )\n                    .map((pkg) => ({\n                        label: pkg.config?.name ?? pkg.name,\n                        value: pkg,\n                        group: pkg.config?.group,\n                    })),\n            ),\n        },\n    ]);\n\n    const {\n        swizzle: { items, transform },\n    } = selectedPackage.config;\n\n    let selectedComponent: SwizzleFile | undefined = undefined;\n\n    if (items.length === 0) {\n        console.log(\n            `No swizzle items found for ${chalk.bold(\n                selectedPackage.config?.name ?? selectedPackage.name,\n            )}`,\n        );\n        return;\n    } else if (items.length === 1) {\n        selectedComponent = items[0];\n    } else if (items.length > 1) {\n        const response = await inquirer.prompt<{\n            selectedComponent: SwizzleFile;\n        }>([\n            {\n                type: \"list\",\n                pageSize: 10,\n                name: \"selectedComponent\",\n                message: \"Which component do you want to swizzle?\",\n                emptyText: \"No components found.\",\n                choices: getAutocompleteSource(\n                    items.sort((a, b) => a.group.localeCompare(b.group)),\n                )({}, \"\"),\n            },\n        ]);\n        selectedComponent = response.selectedComponent;\n    }\n\n    if (!selectedComponent) {\n        console.log(\n            `No swizzle items selected for ${chalk.bold(\n                selectedPackage.config?.name ?? selectedPackage.name,\n            )}`,\n        );\n        return;\n    }\n\n    // this will be prepended to `destPath` values\n    const projectPathPrefix = getPathPrefix();\n\n    const createdFiles = await Promise.all(\n        selectedComponent.files.map(async (file) => {\n            try {\n                const srcPath = file.src\n                    ? path.join(selectedPackage.path, file.src)\n                    : undefined;\n                const destPath = file.dest\n                    ? path.join(process.cwd(), projectPathPrefix, file.dest)\n                    : undefined;\n\n                if (!srcPath) {\n                    console.log(\"No src path found for file\", file);\n                    return [\"\", SWIZZLE_CODES.SOURCE_PATH_NOT_FOUND] as [\n                        targetPath: string,\n                        statusCode: string,\n                    ];\n                }\n\n                if (!destPath) {\n                    console.log(\"No destination path found for file\", file);\n                    return [\"\", SWIZZLE_CODES.TARGET_PATH_NOT_FOUND] as [\n                        targetPath: string,\n                        statusCode: string,\n                    ];\n                }\n\n                const hasSrc = await pathExists(srcPath);\n\n                if (!hasSrc) {\n                    return [destPath, SWIZZLE_CODES.SOURCE_PATH_NOT_A_FILE] as [\n                        targetPath: string,\n                        statusCode: string,\n                    ];\n                }\n\n                const srcContent = await readFile(srcPath, \"utf-8\");\n                const isDestExist = await pathExists(destPath);\n\n                if (isDestExist) {\n                    return [destPath, SWIZZLE_CODES.TARGET_ALREADY_EXISTS] as [\n                        targetPath: string,\n                        statusCode: string,\n                    ];\n                }\n\n                await ensureFile(destPath);\n\n                const parsedContent = parseSwizzleBlocks(srcContent);\n\n                const fileTransformedContent =\n                    file.transform?.(parsedContent) ?? parsedContent;\n\n                const transformedContent =\n                    transform?.(fileTransformedContent, srcPath, destPath) ??\n                    fileTransformedContent;\n\n                const reorderedContent = reorderImports(transformedContent);\n\n                const formatted = await prettierFormat(reorderedContent);\n\n                await writeFile(destPath, formatted);\n\n                return [destPath, SWIZZLE_CODES.SUCCESS] as [\n                    targetPath: string,\n                    statusCode: string,\n                ];\n            } catch (error) {\n                return [\"\", SWIZZLE_CODES.UNKNOWN_ERROR] as [\n                    targetPath: string,\n                    statusCode: string,\n                ];\n            }\n        }),\n    );\n\n    if (createdFiles.length > 0) {\n        printSwizzleMessage({\n            files: createdFiles,\n            label: selectedComponent.label,\n            message: selectedComponent.message,\n        });\n\n        if (selectedComponent?.requiredPackages?.length) {\n            await installRequiredPackages(selectedComponent.requiredPackages);\n        }\n    }\n};\n\nexport default swizzle;\n","import path from \"path\";\nimport { RefineConfig } from \"@definitions\";\nimport { provideCliHelpers } from \"./provideCliHelpers\";\n\nexport const getRefineConfig = async (\n    packagePath: string,\n    isAbsolute?: boolean,\n) => {\n    try {\n        provideCliHelpers(packagePath, isAbsolute);\n\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const config = require(path.join(\n            isAbsolute ? packagePath : path.join(process.cwd(), packagePath),\n            \"refine.config.js\",\n        )) as RefineConfig;\n\n        return config;\n    } catch (error) {\n        return undefined;\n    }\n};\n","import path from \"path\";\nimport * as RefineCLI from \"../../index\";\nimport { getFileContent } from \"./getFileContent\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Module = require(\"module\");\nconst originalRequire = Module.prototype.require;\n\nexport const provideCliHelpers = (\n    packagePath: string,\n    isAbsolute?: boolean,\n) => {\n    Module.prototype.require = function (...args: Parameters<NodeRequire>) {\n        if ((args[0] as unknown as string) === \"@refinedev/cli\") {\n            return {\n                ...RefineCLI,\n                getFileContent: (filePath: string) => {\n                    return getFileContent.call(\n                        {\n                            absolutePackageDir: isAbsolute\n                                ? packagePath\n                                : path.join(process.cwd(), packagePath),\n                        },\n                        filePath,\n                    );\n                },\n            };\n        }\n\n        //do your thing here\n        return originalRequire.apply(this, args);\n    };\n};\n","export * from \"./definitions\";\nexport { getImports, getNameChangeInImport } from \"./utils/swizzle/import\";\nexport { appendAfterImports } from \"./utils/swizzle/appendAfterImports\";\nexport { getFileContent } from \"./utils/swizzle/getFileContent\";\nexport type { ImportMatch, NameChangeMatch } from \"./utils/swizzle/import\";\n","const packageRegex =\n    /import(?:(?:(?:[ \\n\\t]+([^ *\\n\\t\\{\\},]+)[ \\n\\t]*(?:,|[ \\n\\t]+))?([ \\n\\t]*\\{(?:[ \\n\\t]*[^ \\n\\t\"'\\{\\}]+[ \\n\\t]*,?)+\\})?[ \\n\\t]*)|[ \\n\\t]*\\*[ \\n\\t]*as[ \\n\\t]+([^ \\n\\t\\{\\}]+)[ \\n\\t]+)from[ \\n\\t]*(?:['\"])([^'\"\\n]+)(?:['\"])(?:;?)/g;\n\nconst nameChangeRegex = /((?:\\w|\\s|_)*)( as )((?:\\w|\\s|_)*)( |,)?/g;\n\nexport type ImportMatch = {\n    statement: string;\n    importPath: string;\n    defaultImport?: string;\n    namedImports?: string;\n    namespaceImport?: string;\n};\n\nexport type NameChangeMatch = {\n    statement: string;\n    fromName: string;\n    toName: string;\n    afterCharacter?: string;\n};\n\nexport const getImports = (content: string): Array<ImportMatch> => {\n    const matches = content.matchAll(packageRegex);\n\n    const imports: Array<ImportMatch> = [];\n\n    for (const match of matches) {\n        const [\n            statement,\n            defaultImport,\n            namedImports,\n            namespaceImport,\n            importPath,\n        ] = match;\n\n        imports.push({\n            statement,\n            importPath,\n            ...(defaultImport && { defaultImport }),\n            ...(namedImports && { namedImports }),\n            ...(namespaceImport && { namespaceImport }),\n        });\n    }\n\n    return imports?.filter(Boolean);\n};\n\nexport const getNameChangeInImport = (\n    namedImportString: string,\n): Array<NameChangeMatch> => {\n    const matches = namedImportString.matchAll(nameChangeRegex);\n\n    const nameChanges: Array<NameChangeMatch> = [];\n\n    for (const match of matches) {\n        const [statement, fromName, _as, toName, afterCharacter] = match;\n\n        nameChanges.push({\n            statement,\n            fromName: fromName.trim(),\n            toName: toName.trim(),\n            afterCharacter,\n        });\n    }\n\n    return nameChanges;\n};\n\n/** @internal */\nexport const getContentBeforeImport = (\n    content: string,\n    importMatch: ImportMatch,\n): string => {\n    // get the content before the import statement and between the last import statement and the current one\n    const contentBeforeImport = content.substring(\n        0,\n        content.indexOf(importMatch.statement),\n    );\n    // get the last import statement\n    const lastImportStatement = getImports(contentBeforeImport).pop();\n\n    // if there is no last import statement, return the content before the current import statement\n    if (!lastImportStatement) {\n        return contentBeforeImport;\n    }\n\n    // get the content between the last import statement and the current one\n    const contentBetweenImports = contentBeforeImport.substring(\n        contentBeforeImport.indexOf(lastImportStatement?.statement) +\n            lastImportStatement?.statement?.length,\n    );\n\n    // return the content before the current import statement and between the last import statement and the current one\n    return contentBetweenImports;\n};\n\n/** @internal */\nexport const isImportHasBeforeContent = (\n    content: string,\n    importMatch: ImportMatch,\n): boolean => {\n    const contentBeforeImport = importMatch\n        ? getContentBeforeImport(content, importMatch)\n        : \"\";\n\n    return !!contentBeforeImport.trim();\n};\n\nconst IMPORT_ORDER = [\"react\", \"@refinedev/core\", \"@refinedev/\"];\n\nexport const reorderImports = (content: string): string => {\n    let newContent = content;\n    // imports can have comments before them, we need to preserve those comments and import statements.\n    // so we need to filter out the imports with comments before.\n    const allImports = getImports(content);\n    // remove `import type` imports\n    const allModuleImports = allImports.filter(\n        (importMatch) => !importMatch.statement.includes(\"import type \"),\n    );\n    const typeImports = allImports.filter((importMatch) =>\n        importMatch.statement.includes(\"import type\"),\n    );\n\n    const importsWithBeforeContent: ImportMatch[] = [];\n    const importsWithoutBeforeContent: ImportMatch[] = [];\n\n    allModuleImports.forEach((importMatch) => {\n        if (isImportHasBeforeContent(content, importMatch)) {\n            importsWithBeforeContent.push(importMatch);\n        } else {\n            importsWithoutBeforeContent.push(importMatch);\n        }\n    });\n\n    // insertion point is the first import statement, others will be replaced to empty string and added to the first import line\n    const insertionPoint = newContent.indexOf(\n        importsWithoutBeforeContent?.[0]?.statement,\n    );\n\n    // remove all the imports without comments before\n    importsWithoutBeforeContent.forEach((importMatch) => {\n        newContent = newContent.replace(importMatch.statement, \"\");\n    });\n\n    // remove all type imports\n    typeImports.forEach((importMatch) => {\n        newContent = newContent.replace(importMatch.statement, \"\");\n    });\n\n    // we need to merge the imports from the same package unless one of them is a namespace import]\n    const importsByPackage = importsWithoutBeforeContent.reduce(\n        (acc, importMatch) => {\n            const { importPath } = importMatch;\n\n            if (acc[importPath]) {\n                acc[importPath].push(importMatch);\n            } else {\n                acc[importPath] = [importMatch];\n            }\n\n            return acc;\n        },\n        {} as Record<string, ImportMatch[]>,\n    );\n\n    // merge the imports from the same package\n    const mergedImports = Object.entries(importsByPackage).map(\n        ([importPath, importMatches]) => {\n            // example: A\n            const defaultImport = importMatches.find(\n                (importMatch) => importMatch.defaultImport,\n            );\n\n            // example: * as A\n            const namespaceImport = importMatches.find(\n                (importMatch) => importMatch.namespaceImport,\n            );\n\n            // example: { A, B }\n            // example: { A as C, B }\n            // content inside the curly braces should be merged\n            const namedImports = importMatches\n                .filter((importMatch) => importMatch.namedImports)\n                .map((importMatch) => {\n                    // remove curly braces and trim then split by comma (can be multiline)\n                    const namedImports = (importMatch.namedImports ?? \"\")\n                        .replace(/{|}/g, \"\")\n                        .trim()\n                        .split(\",\")\n                        .map((namedImport) => namedImport.trim());\n\n                    return namedImports.filter(Boolean).join(\", \");\n                })\n                .join(\", \");\n\n            let importLine = \"\";\n\n            // default import and namespace import can not be used together\n            // but we can use default import and named imports together\n            // so we need to merge them\n            if (namespaceImport) {\n                importLine += namespaceImport.statement + \"\\n\";\n            }\n            if (defaultImport || namedImports) {\n                if (defaultImport && namedImports) {\n                    importLine += `import ${defaultImport.defaultImport}, { ${namedImports} } from \"${importMatches[0].importPath}\";\\n`;\n                } else if (defaultImport) {\n                    importLine += `import ${defaultImport.defaultImport} from \"${importMatches[0].importPath}\";\\n`;\n                } else {\n                    importLine += `import { ${namedImports} } from \"${importMatches[0].importPath}\";\\n`;\n                }\n            }\n\n            return [importPath, importLine] as [\n                importPath: string,\n                importLine: string,\n            ];\n        },\n    );\n\n    // sort the imports without comments before\n    // sort should be done by IMPORT_ORDER and alphabetically\n    // priority is exact match in IMPORT_ORDER, then includes match in IMPORT_ORDER, then alphabetically\n    const sortedImports = [...mergedImports].sort(\n        ([aImportPath], [bImportPath]) => {\n            const aImportOrderIndex = IMPORT_ORDER.findIndex((order) =>\n                aImportPath.includes(order),\n            );\n            const bImportOrderIndex = IMPORT_ORDER.findIndex((order) =>\n                bImportPath.includes(order),\n            );\n\n            if (aImportOrderIndex === bImportOrderIndex) {\n                return aImportPath.localeCompare(bImportPath);\n            }\n\n            if (aImportOrderIndex === -1) {\n                return 1;\n            }\n\n            if (bImportOrderIndex === -1) {\n                return -1;\n            }\n\n            return aImportOrderIndex - bImportOrderIndex;\n        },\n    );\n\n    // add the sorted imports to the insertion point keep the before and after content\n    // add the type imports after the sorted imports\n    const joinedModuleImports = sortedImports\n        .map(([, importLine]) => importLine)\n        .join(\"\");\n    const joinedTypeImports = typeImports\n        .map((importMatch) => importMatch.statement)\n        .join(\"\\n\");\n\n    newContent =\n        newContent.substring(0, insertionPoint) +\n        joinedModuleImports +\n        joinedTypeImports +\n        newContent.substring(insertionPoint);\n\n    return newContent;\n};\n","import { getImports } from \"./import\";\n\nexport const appendAfterImports = (content: string, append: string): string => {\n    const imports = getImports(content);\n    const lastImport = imports[imports.length - 1];\n\n    const lastImportIndex = lastImport\n        ? content.indexOf(lastImport.statement)\n        : content.length - 1;\n\n    return (\n        content.slice(0, lastImportIndex + lastImport?.statement.length) +\n        \"\\n\" +\n        append +\n        \"\\n\" +\n        content.slice(lastImportIndex + lastImport?.statement.length)\n    );\n};\n","import { readFileSync } from \"fs-extra\";\nimport { join } from \"path\";\n\nexport function getFileContent(\n    this: undefined | { absolutePackageDir?: string },\n    path: string,\n): string | undefined {\n    if (!this?.absolutePackageDir) {\n        return undefined;\n    }\n    try {\n        return readFileSync(join(this.absolutePackageDir, path)).toString();\n    } catch (err) {\n        return undefined;\n    }\n}\n","import React from \"react\";\nimport dedent from \"dedent\";\nimport { SWIZZLE_CODES } from \"@utils/swizzle/codes\";\nimport chalk from \"chalk\";\nimport { markedTerminalRenderer } from \"@utils/marked-terminal-renderer\";\n\ntype Params = {\n    label: string;\n    files: [targetPath: string, statusCode: string][];\n    message?: string;\n};\n\nexport const printSwizzleMessage = ({\n    label,\n    files,\n    message = \"**`Warning:`** You should use the component where you want to use it.\",\n}: Params) => {\n    const errors = files.filter(([, statusCode]) =>\n        Object.values(SWIZZLE_CODES)\n            .filter((code) => code !== SWIZZLE_CODES.SUCCESS)\n            .includes(statusCode),\n    );\n\n    let status = \"success\";\n\n    switch (errors.length) {\n        // no errors\n        case 0:\n            status = \"success\";\n            break;\n        // all errors\n        case files.length:\n            status = \"error\";\n            break;\n        // some errors\n        default:\n            status = \"warning\";\n            break;\n    }\n\n    const clearFilePath = (filePath: string) => {\n        const relative = filePath?.replace(process.cwd(), \"\");\n\n        if (relative?.startsWith(\"/\")) {\n            return relative.slice(1);\n        }\n        if (relative?.startsWith(\"./\")) {\n            return relative.slice(2);\n        }\n        return relative;\n    };\n\n    const printStatusMessage = () => {\n        switch (status) {\n            case \"success\":\n                console.log(\n                    chalk.blueBright(\n                        `Successfully swizzled ${chalk.bold(label)}`,\n                    ),\n                );\n                return;\n            case \"warning\":\n                console.log(\n                    chalk.yellowBright(\n                        `Swizzle completed with errors for ${chalk.bold(\n                            label,\n                        )}`,\n                    ),\n                );\n                return;\n            case \"error\":\n                console.log(\n                    chalk.redBright(`Swizzle failed for ${chalk.bold(label)}`),\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    const printFiles = () => {\n        const chalks = [];\n\n        chalks.push(chalk.dim(`File${files.length > 1 ? \"s\" : \"\"} created:`));\n        chalks.push(\n            files\n                .map(([targetPath, statusCode]) => {\n                    if (statusCode === SWIZZLE_CODES.SUCCESS) {\n                        return chalk.cyanBright.dim(\n                            ` - ${clearFilePath(targetPath)}`,\n                        );\n                    }\n                    if (statusCode === SWIZZLE_CODES.TARGET_ALREADY_EXISTS) {\n                        return chalk.cyanBright.dim(\n                            ` - ${chalk.yellowBright.bold(\n                                \"[FILE_ALREADY_EXISTS] \",\n                            )}${clearFilePath(targetPath)}`,\n                        );\n                    }\n                    if (statusCode === SWIZZLE_CODES.SOURCE_PATH_NOT_A_FILE) {\n                        return chalk.cyanBright.dim(\n                            ` - ${chalk.yellowBright.bold(\n                                \"[SOURCE NOT FOUND] \",\n                            )}${clearFilePath(targetPath)}`,\n                        );\n                    }\n\n                    return chalk.cyanBright.dim(\n                        ` - ${chalk.yellowBright.bold(\n                            `[${statusCode}]`,\n                        )}${clearFilePath(targetPath)}`,\n                    );\n                })\n                .join(\"\\n\"),\n        );\n\n        console.log(chalks.join(\"\\n\"));\n    };\n\n    const printSwizzleMessage = () => {\n        if (message && status !== \"error\") {\n            console.log(markedTerminalRenderer(dedent(\"\\n\" + message)));\n        }\n    };\n\n    console.log(\"\");\n    printStatusMessage();\n    printFiles();\n    console.log(\"\");\n    printSwizzleMessage();\n};\n","export const SWIZZLE_CODES = {\n    SUCCESS: \"SUCCESS\",\n    UNKNOWN_ERROR: \"UNKNOWN_ERROR\",\n    SOURCE_PATH_NOT_FOUND: \"SOURCE_PATH_NOT_FOUND\",\n    TARGET_PATH_NOT_FOUND: \"TARGET_PATH_NOT_FOUND\",\n    SOURCE_PATH_NOT_A_FILE: \"SOURCE_PATH_NOT_A_FILE\",\n    TARGET_ALREADY_EXISTS: \"TARGET_ALREADY_EXISTS\",\n};\n","import chalk from \"chalk\";\nimport cardinal from \"cardinal\";\nimport boxen from \"boxen\";\n\nconst getCodeData = (content: string): { title?: string; code: string } => {\n    const titleRegexp = /^(?:\\/\\/\\s?title:\\s?)(.*?)\\n/g;\n\n    const [commentLine, titleMatch] = titleRegexp.exec(content) ?? [];\n\n    if (titleMatch) {\n        const title = titleMatch.trim();\n        const code = content.replace(commentLine || \"\", \"\");\n\n        return { title, code };\n    }\n\n    return { code: content };\n};\n\nexport const renderCodeMarkdown = (content: string) => {\n    const { title, code: rawCode } = getCodeData(content);\n\n    let highlighted = \"\";\n\n    // run cardinal on codeContent\n    try {\n        const code = cardinal.highlight(rawCode, {\n            jsx: true,\n        });\n        highlighted = code;\n    } catch (err) {\n        highlighted = rawCode;\n    }\n\n    // wrap to boxen\n    const boxed = boxen(highlighted, {\n        padding: 1,\n        margin: 0,\n        borderStyle: \"round\",\n        borderColor: \"gray\",\n        titleAlignment: \"left\",\n        title: title ? chalk.bold(title) : undefined,\n    });\n\n    return boxed;\n};\n","import { renderCodeMarkdown } from \"@utils/swizzle/renderCodeMarkdown\";\nimport { marked } from \"marked\";\nimport TerminalRenderer from \"marked-terminal\";\n\nexport const markedTerminalRenderer = (markdown: string) => {\n    return marked(markdown, {\n        renderer: new TerminalRenderer({ code: renderCodeMarkdown }) as any,\n    });\n};\n","export const parseSwizzleBlocks = (content: string) => {\n    const regex =\n        /(\\/\\/|\\/\\*)(\\s?)swizzle-remove-start([\\s\\S]*?)(\\/\\/|\\/\\*)(\\s?)swizzle-remove-end(\\s*)(\\*\\/)?/g;\n\n    return content.replace(regex, \"\");\n};\n","import { ProjectTypes } from \"@definitions/projectTypes\";\nimport { getProjectType } from \"@utils/project\";\nimport { getFilesPathByProject } from \"@utils/resource\";\n\nexport const getPathPrefix = () => {\n    let projectType: ProjectTypes | undefined = undefined;\n\n    try {\n        projectType = getProjectType();\n    } catch (error) {\n        projectType = undefined;\n    }\n\n    const pathPrefix = getFilesPathByProject(projectType);\n\n    return pathPrefix;\n};\n","import inquirer from \"inquirer\";\nimport chalk from \"chalk\";\nimport { getPreferedPM, installPackages, pmCommands } from \"@utils/package\";\n\nexport const installRequiredPackages = async (requiredPackages: string[]) => {\n    const installRequiredPackages = await promptForPackageInstallation(\n        requiredPackages,\n    );\n\n    if (!installRequiredPackages) {\n        await displayManualInstallationCommand(requiredPackages);\n    } else {\n        await installPackages(requiredPackages);\n    }\n};\n\nexport const promptForPackageInstallation = async (\n    requiredPackages: string[],\n) => {\n    const message =\n        `This component requires following packages to be installed:\\n`\n            .concat(requiredPackages.map((pkg) => ` - ${pkg}`).join(\"\\n\"))\n            .concat(\"\\nDo you want to install them?\");\n\n    const { installRequiredPackages } = await inquirer.prompt<{\n        installRequiredPackages: boolean;\n    }>([\n        {\n            type: \"confirm\",\n            name: \"installRequiredPackages\",\n            default: true,\n            message,\n        },\n    ]);\n\n    return installRequiredPackages;\n};\n\nexport const displayManualInstallationCommand = async (\n    requiredPackages: string[],\n) => {\n    const pm = await getPreferedPM();\n    const pmCommand = pmCommands[pm.name].install.join(\" \");\n    const packages = requiredPackages.join(\" \");\n    const command = `${pm.name} ${pmCommand} ${packages}`;\n\n    console.log(`\\nYou can install them manually by running this command:`);\n    console.log(chalk.bold.blueBright(command));\n};\n","import { Command, Option } from \"commander\";\nimport { isRefineUptoDate } from \"@commands/check-updates\";\nimport spinner from \"@utils/spinner\";\nimport { getPreferedPM, installPackages, pmCommands } from \"@utils/package\";\nimport { promptInteractiveRefineUpdate } from \"@commands/update/interactive\";\nimport { RefinePackageInstalledVersionData } from \"@definitions/package\";\n\nenum Tag {\n    Wanted = \"wanted\",\n    Latest = \"latest\",\n    Next = \"next\",\n}\n\ninterface OptionValues {\n    tag: Tag;\n    dryRun: boolean;\n    all: boolean;\n}\n\nconst load = (program: Command) => {\n    return program\n        .command(\"update\")\n        .description(\n            \"Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.\",\n        )\n        .addOption(\n            new Option(\"-t, --tag [tag]\", \"Select version to update to.\")\n                .choices([\"next\", \"latest\"])\n                .default(\n                    \"wanted\",\n                    \"Version ranges in the `package.json` will be installed\",\n                ),\n        )\n        .option(\n            \"-a, --all\",\n            \"Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.\",\n            false,\n        )\n        .option(\n            \"-d, --dry-run\",\n            \"Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.\",\n            false,\n        )\n        .action(action);\n};\n\nconst action = async (options: OptionValues) => {\n    const { tag, dryRun, all } = options;\n\n    const packages = await spinner(isRefineUptoDate, \"Checking for updates...\");\n    if (!packages?.length) {\n        console.log(\"All `refine` packages are up to date 🎉\");\n        return;\n    }\n\n    const selectedPackages = all\n        ? runAll(tag, packages)\n        : await promptInteractiveRefineUpdate(packages);\n\n    if (!selectedPackages) return;\n\n    if (dryRun) {\n        printInstallCommand(selectedPackages);\n        return;\n    }\n\n    pmInstall(selectedPackages);\n};\n\nconst runAll = (tag: Tag, packages: RefinePackageInstalledVersionData[]) => {\n    if (tag === Tag.Wanted) {\n        const isAllPackagesAtWantedVersion = packages.every(\n            (pkg) => pkg.current === pkg.wanted,\n        );\n        if (isAllPackagesAtWantedVersion) {\n            console.log(\n                \"All `refine` packages are up to date with the wanted version 🎉\",\n            );\n            return null;\n        }\n    }\n\n    const packagesWithVersion = packages.map((pkg) => {\n        const version = tag === Tag.Wanted ? pkg.wanted : tag;\n        return `${pkg.name}@${version}`;\n    });\n\n    return packagesWithVersion;\n};\n\nconst printInstallCommand = async (packages: string[]) => {\n    const pm = await getPreferedPM();\n    const commandInstall = pmCommands[pm.name].install;\n    console.log(`${pm.name} ${commandInstall.join(\" \")} ${packages.join(\" \")}`);\n};\n\nconst pmInstall = (packages: string[]) => {\n    console.log(\"Updating `refine` packages...\");\n    console.log(packages);\n    installPackages(packages);\n};\n\nexport default load;\n","import inquirer from \"inquirer\";\nimport semverDiff from \"semver-diff\";\nimport chalk from \"chalk\";\nimport { findDuplicates } from \"@utils/array\";\nimport { parsePackageNameAndVersion } from \"@utils/package\";\nimport { RefinePackageInstalledVersionData } from \"@definitions/package\";\n\ntype UIGroup = {\n    patch: {\n        name: string;\n        from: string;\n        to: string;\n    }[];\n    minor: {\n        name: string;\n        from: string;\n        to: string;\n    }[];\n    major: {\n        name: string;\n        from: string;\n        to: string;\n    }[];\n};\n\nexport const promptInteractiveRefineUpdate = async (\n    packages: RefinePackageInstalledVersionData[],\n) => {\n    const uiGroup = createUIGroup(packages);\n    if (!uiGroup) {\n        console.log(\"All `refine` packages are up to date. 🎉\");\n        return;\n    }\n\n    const inquirerUI = createInquirerUI(uiGroup);\n\n    const answers = await inquirer.prompt<{\n        packages: string[];\n    }>([\n        {\n            type: \"checkbox\",\n            name: \"packages\",\n            message: \"Choose packages to update\",\n            pageSize: inquirerUI.pageSize,\n            choices: inquirerUI.choices,\n            validate: validatePrompt,\n        },\n    ]);\n\n    return answers.packages.length > 0 ? answers.packages : null;\n};\n\nexport const validatePrompt = (input: string[]) => {\n    const inputParsed = input.map((pckg) => {\n        return parsePackageNameAndVersion(pckg);\n    });\n\n    const names = inputParsed.map((pckg) => pckg.name);\n    const duplicates = findDuplicates(names);\n\n    if (duplicates.length > 0) {\n        return `You can't update the same package more than once. Please choice one.\\n Duplicates: ${duplicates.join(\n            \", \",\n        )}`;\n    }\n\n    return true;\n};\n\nexport const createUIGroup = (\n    packages: RefinePackageInstalledVersionData[],\n): UIGroup | null => {\n    if (packages.length === 0) {\n        return null;\n    }\n\n    const packagesCategorized: UIGroup = {\n        patch: [],\n        minor: [],\n        major: [],\n    };\n\n    packages.forEach((pckg) => {\n        const current = pckg.current;\n\n        const diffWanted = semverDiff(current, pckg.wanted) as keyof UIGroup;\n        const diffLatest = semverDiff(current, pckg.latest) as keyof UIGroup;\n\n        if (diffWanted === diffLatest) {\n            if (diffLatest) {\n                packagesCategorized[diffLatest].push({\n                    name: pckg.name,\n                    from: current,\n                    to: pckg.latest,\n                });\n                return;\n            }\n        }\n\n        if (diffWanted) {\n            packagesCategorized[diffWanted].push({\n                name: pckg.name,\n                from: current,\n                to: pckg.wanted,\n            });\n        }\n\n        if (diffLatest) {\n            packagesCategorized[diffLatest].push({\n                name: pckg.name,\n                from: current,\n                to: pckg.latest,\n            });\n        }\n    });\n\n    return packagesCategorized;\n};\n\nconst createInquirerUI = (uiGroup: UIGroup) => {\n    let maxNameLength = 0;\n    let maxFromLength = 0;\n\n    [uiGroup.patch, uiGroup.minor, uiGroup.major].forEach((group) => {\n        group.forEach((pckg) => {\n            if (pckg.name.length > maxNameLength) {\n                maxNameLength = pckg.name.length;\n            }\n\n            if (pckg.from.length > maxFromLength) {\n                maxFromLength = pckg.from.length;\n            }\n        });\n    });\n\n    maxNameLength += 2;\n\n    const choices: (\n        | inquirer.Separator\n        | {\n              name: string;\n              value: string;\n          }\n    )[] = [];\n\n    const packageColumnText = \"Package\".padEnd(maxNameLength);\n    const currentColumnText = \"From\".padEnd(maxFromLength);\n    const toColumnText = \"To\";\n    const header = `\\n   ${packageColumnText} ${currentColumnText}${toColumnText.padStart(\n        maxFromLength,\n    )}`;\n    choices.push(new inquirer.Separator(header));\n\n    if (uiGroup.patch.length > 0) {\n        choices.push(\n            new inquirer.Separator(chalk.reset.bold.blue(\"\\nPatch Updates\")),\n        );\n        uiGroup.patch.forEach((pckg) => {\n            choices.push({\n                name: `${pckg.name.padEnd(maxNameLength)} ${pckg.from.padStart(\n                    maxFromLength,\n                )} -> ${pckg.to}`,\n                value: `${pckg.name}@${pckg.to}`,\n            });\n        });\n    }\n\n    if (uiGroup.minor.length > 0) {\n        choices.push(\n            new inquirer.Separator(chalk.reset.bold.blue(\"\\nMinor Updates\")),\n        );\n        uiGroup.minor.forEach((pckg) => {\n            choices.push({\n                name: `${pckg.name.padEnd(maxNameLength)} ${pckg.from.padStart(\n                    maxFromLength,\n                )} -> ${pckg.to}`,\n                value: `${pckg.name}@${pckg.to}`,\n            });\n        });\n    }\n\n    if (uiGroup.major.length > 0) {\n        choices.push(\n            new inquirer.Separator(chalk.reset.bold.blue(\"\\nMajor Updates\")),\n        );\n        uiGroup.major.forEach((pckg) => {\n            choices.push({\n                name: `${pckg.name.padEnd(maxNameLength)} ${pckg.from.padStart(\n                    maxFromLength,\n                )} -> ${pckg.to}`,\n                value: `${pckg.name}@${pckg.to}`,\n            });\n        });\n    }\n\n    const pageSize = choices.length + 6;\n\n    return { choices, pageSize };\n};\n","export const findDuplicates = (arr: (string | number)[]) => {\n    const duplicates = arr.filter((item, index) => arr.indexOf(item) !== index);\n    const unique = new Set(duplicates);\n    return Array.from(unique);\n};\n","import { getInstalledRefinePackages } from \"@utils/package\";\nimport { Command } from \"commander\";\nimport envinfo from \"envinfo\";\nimport ora from \"ora\";\n\nconst whoami = (program: Command) => {\n    return program\n        .command(\"whoami\")\n        .description(\"View the details of the development environment\")\n        .action(action);\n};\n\nconst action = async () => {\n    const spinner = ora(\"Loading environment details...\").start();\n    const info = await envinfo.run(\n        {\n            System: [\"OS\", \"CPU\"],\n            Binaries: [\"Node\", \"Yarn\", \"npm\"],\n            Browsers: [\"Chrome\", \"Firefox\", \"Safari\"],\n        },\n        { showNotFound: true, markdown: true },\n    );\n\n    const packages = (await getInstalledRefinePackages()) || [];\n    const packagesMarkdown = packages\n        .map((pkg) => {\n            return ` - ${pkg.name}: ${pkg.version}`;\n        })\n        .join(\"\\n\");\n\n    spinner.stop();\n    console.log(info);\n    console.log(\"## Refine Packages:\");\n    console.log(packagesMarkdown);\n};\n\nexport default whoami;\n","import { Argument, Command } from \"commander\";\nimport { Provider, createProvider, providerArgs } from \"./create-provider\";\nimport { createResources } from \"./create-resource\";\nimport { getPreferedPM } from \"@utils/package\";\n\nconst load = (program: Command) => {\n    return program\n        .command(\"add\")\n        .allowExcessArguments(false)\n        .addArgument(\n            new Argument(\"[provider]\", \"Create a new provider\")\n                .choices([...providerArgs, \"resource\"])\n                .argOptional(),\n        )\n        .addArgument(\n            new Argument(\n                \"[resource...]\",\n                \"Create a new resource files\",\n            ).argOptional(),\n        )\n        .option(\"-p, --path [path]\", \"Path to generate files\")\n        .option(\n            \"-a, --actions [actions]\",\n            \"Only generate the specified resource actions. (ex: list,create,edit,show)\",\n            \"list,create,edit,show\",\n        )\n        .action(action);\n};\n\nconst action = async (\n    _provider: string,\n    _resource: string,\n    options: { actions: string; path?: string },\n    command: Command,\n) => {\n    const args = command?.args;\n    if (!args.length) {\n        await printNoArgs();\n        return;\n    }\n\n    const { providers, resources } = getGroupedArgs(args);\n\n    if (providers.length) {\n        createProvider(providers, options?.path);\n    }\n\n    if (args.includes(\"resource\")) {\n        createResources(\n            {\n                actions: options?.actions,\n                path: options?.path,\n            },\n            resources,\n        );\n    }\n};\n\n// we need to group args.\n// for example: add auth live resource user post data\n// should be grouped like this:\n// providers: [add, auth, live, data]. resource: [user, post]\nexport const getGroupedArgs = (args: string[]) => {\n    const resourceIndex = args.findIndex((arg) => arg === \"resource\");\n    if (resourceIndex === -1)\n        return {\n            providers: getValidProviders(args as Provider[]),\n            resources: [],\n        };\n\n    const providers = getValidProviders(\n        args.slice(0, resourceIndex) as Provider[],\n    );\n\n    const resources = args.slice(resourceIndex + 1);\n\n    return { providers, resources };\n};\n\nconst printNoArgs = async () => {\n    const { name } = await getPreferedPM();\n\n    console.log(\"❌ Please provide a feature name\");\n    console.log(\n        `For more information please use: \"${name} run refine add help\"`,\n    );\n};\n\nconst getValidProviders = (providers: Provider[]) => {\n    return providers.filter((provider) => {\n        if (providerArgs.includes(provider)) return true;\n\n        console.log(`❌ \"${provider}\" is not a valid provider`);\n        return false;\n    });\n};\n\nexport default load;\n","import { copySync, mkdirSync, pathExistsSync } from \"fs-extra\";\nimport { join } from \"path\";\nimport { getProjectType } from \"@utils/project\";\nimport { getProviderPath } from \"@utils/resource\";\n\nconst templatePath = `${__dirname}/../templates/provider`;\n\nexport type Provider =\n    | \"auth\"\n    | \"live\"\n    | \"data\"\n    | \"access-control\"\n    | \"notification\"\n    | \"i18n\"\n    | \"audit-log\";\n\nexport const providerArgs: Provider[] = [\n    \"auth\",\n    \"live\",\n    \"data\",\n    \"access-control\",\n    \"notification\",\n    \"i18n\",\n    \"audit-log\",\n];\n\nexport const createProvider = (providers: string[], pathFromArgs?: string) => {\n    providers.forEach((arg) => {\n        const { fileName, templatePath } = getProviderOptions(arg as Provider);\n        const folderPath = pathFromArgs ?? getDefaultPath();\n        const filePath = join(folderPath, fileName);\n        const fullPath = join(process.cwd(), folderPath, fileName);\n\n        if (pathExistsSync(fullPath)) {\n            console.error(`❌ Provider (${filePath}) already exist!`);\n            return;\n        }\n\n        // create destination dir\n        mkdirSync(folderPath, { recursive: true });\n\n        // copy template file to destination\n        copySync(templatePath, fullPath);\n\n        console.log(`🎉 Provider (${filePath}) created successfully!`);\n    });\n};\n\nexport const providerOptions: {\n    [key in Provider]: {\n        fileName: string;\n        templatePath: string;\n    };\n} = {\n    auth: {\n        fileName: \"auth-provider.tsx\",\n        templatePath: `${templatePath}/demo-auth-provider.tsx`,\n    },\n    live: {\n        fileName: \"live-provider.tsx\",\n        templatePath: `${templatePath}/demo-live-provider.tsx`,\n    },\n    data: {\n        fileName: \"data-provider.tsx\",\n        templatePath: `${templatePath}/demo-data-provider.tsx`,\n    },\n    \"access-control\": {\n        fileName: \"access-control-provider.tsx\",\n        templatePath: `${templatePath}/demo-access-control-provider.tsx`,\n    },\n    notification: {\n        fileName: \"notification-provider.tsx\",\n        templatePath: `${templatePath}/demo-notification-provider.tsx`,\n    },\n    i18n: {\n        fileName: \"i18n-provider.tsx\",\n        templatePath: `${templatePath}/demo-i18n-provider.tsx`,\n    },\n    \"audit-log\": {\n        fileName: \"audit-log-provider.tsx\",\n        templatePath: `${templatePath}/demo-audit-log-provider.tsx`,\n    },\n};\n\nexport const getProviderOptions = (provider: Provider) => {\n    if (!providerOptions?.[provider]) {\n        throw new Error(`Invalid provider: ${provider}`);\n    }\n\n    return providerOptions[provider];\n};\n\nexport const getDefaultPath = () => {\n    const projectType = getProjectType();\n    const { path } = getProviderPath(projectType);\n    return path;\n};\n","import envinfo from \"envinfo\";\nimport os from \"os\";\n\nexport const getOSType = () => {\n    const osPlatform = os.type();\n\n    const types: Record<string, \"macOS\" | \"Linux\" | \"Windows\"> = {\n        Darwin: \"macOS\",\n        Linux: \"Linux\",\n        Windows_NT: \"Windows\",\n    };\n\n    return types[osPlatform];\n};\n\nexport const getOS = async () => {\n    // returns as a ['OS', 'macOS Mojave 10.14.5']\n    const [_, OSInfo] =\n        (await envinfo.helpers.getOSInfo()) as unknown as string[];\n\n    return {\n        name: getOSType(),\n        version: OSInfo,\n    };\n};\n","import { NODE_ENV } from \"@definitions/node\";\nimport { ProjectTypes } from \"@definitions/projectTypes\";\nimport { ENV } from \"@utils/env\";\nimport { getOS } from \"@utils/os\";\nimport { getInstalledRefinePackages, getRefineProjectId } from \"@utils/package\";\nimport { getProjectType } from \"@utils/project\";\nimport fetch from \"node-fetch\";\n\ninterface TelemetryData {\n    nodeEnv?: NODE_ENV;\n    nodeVersion: string;\n    os: string;\n    osVersion: string;\n    command: string;\n    packages: {\n        name: string;\n        version: string;\n    }[];\n    projectFramework: ProjectTypes;\n}\n\nexport const getTelemetryData = async (): Promise<TelemetryData> => {\n    const os = await getOS();\n\n    const data = {\n        nodeEnv: ENV.NODE_ENV,\n        nodeVersion: process.version,\n        os: os.name,\n        osVersion: os.version,\n        command: process.argv[2],\n        packages: (await getInstalledRefinePackages()) || [],\n        projectFramework: getProjectType(),\n        projectId: getRefineProjectId(),\n    };\n\n    return data;\n};\n\nexport const telemetryHook = async () => {\n    if (ENV.REFINE_NO_TELEMETRY === \"true\") return;\n\n    try {\n        const data = await getTelemetryData();\n\n        await fetch(\"https://telemetry.refine.dev/cli\", {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: { \"Content-Type\": \"application/json\" },\n        });\n    } catch (error) {}\n};\n","import React from \"react\";\nimport matter from \"gray-matter\";\nimport boxen from \"boxen\";\n\nimport { Announcement } from \"@definitions/announcement\";\nimport { markedTerminalRenderer } from \"@utils/marked-terminal-renderer\";\n\nconst ANNOUNCEMENT_URL =\n    \"https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md\";\n\nconst ANNOUNCEMENT_DELIMITER = \"---announcement\";\n\nconst splitAnnouncements = (feed: string) => {\n    const sections = feed.split(ANNOUNCEMENT_DELIMITER);\n\n    return sections\n        .slice(1)\n        .map((section) => `${ANNOUNCEMENT_DELIMITER}${section}`);\n};\n\nconst parseAnnouncement = (raw: string): Announcement => {\n    const fixed = raw.replace(ANNOUNCEMENT_DELIMITER, \"---\");\n    const parsed = matter(fixed);\n    const content = (\n        parsed.content.length === 0\n            ? fixed.replace(/---/g, \"\")\n            : parsed.content.replace(/---/g, \"\")\n    ).trim();\n\n    return {\n        ...parsed.data,\n        content,\n    } as Announcement;\n};\n\nexport const getAnnouncements = async () => {\n    try {\n        const response = await fetch(ANNOUNCEMENT_URL)\n            .then((res) => res.text())\n            .catch(() => \"\");\n\n        const announcements = splitAnnouncements(response).map((section) =>\n            parseAnnouncement(section),\n        );\n\n        return announcements;\n    } catch (_) {\n        return [];\n    }\n};\n\nexport const printAnnouncements = async () => {\n    const announcements = await getAnnouncements();\n\n    const visibleAnnouncements = announcements.filter(\n        (a) => Boolean(a.hidden) === false,\n    );\n\n    if (visibleAnnouncements.length === 0) {\n        return;\n    }\n\n    const stringAnnouncements = visibleAnnouncements\n        .map((a) => {\n            const dash = visibleAnnouncements.length > 1 ? \"— \" : \"\";\n            const content = markedTerminalRenderer(a.content);\n            return `${dash}${content}`;\n        })\n        .join(\"\")\n        .trim();\n\n    console.log(\n        boxen(stringAnnouncements, {\n            padding: 1,\n            margin: 0,\n            borderStyle: \"round\",\n            borderColor: \"blueBright\",\n            titleAlignment: \"left\",\n        }),\n    );\n};\n"],"mappings":"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","names":["src_exports","__export","DevToolsContext","DevToolsContextProvider","DevtoolsEvent","hooksByScope","receive","scopes","send","module","__toCommonJS","acc","hook","scope","import_react","A","ws","event","payload","resolve","listener","callback","e","receivedEvent","r","React","__devtools","port","children","values","setValues","setWs","wsInstance","unsubscribe","data","v","contextValues","src_exports","__export","server","module","__toCommonJS","import_express","l","import_devtools_shared","import_path","serveClient","app","L","express","T","path","req","res","next","import_ws","REFINE_API_URL","FEED_MD_URL","import_chalk","serveWs","ws","j","WebSocket","error","u","client","P","import_lodash","reloadOnChange","setupServer","f","defaultData","createDb","import_uniq","import_node_fetch","import_gray_matter","import_marked","import_sanitize_html","splitSections","feed","section","contentToHtml","content","renderer","y","args","html","_","sanitizeHtml","parseSection","parsed","W","matter","fetchFeed","F","fetch","getFeed","rawContent","import_fs","import_globby","getInstalledPackageJSONPath","packageName","filesFromGlobbySearch","M","globby","fileFromModule","pkgJsonPath","__require","H","getInstalledPackageData","packagePath","G","fs","import_fs_extra","getPackagesFromPackageJSON","projectPath","packageJson","K","B","getChangelog","getDocumentation","getAllPackages","refinePackages","currentInfo","import_dedent","AVAILABLE_PACKAGES","d","dedent","getAvailablePackages","installedRefinePackages","p","import_preferred_pm","import_execa","updatePackage","packages","pm","Z","preferredPM","failed","ee","execa","getLatestPackageData","stdout","re","getProjectIdFromPackageJson","_a","ie","oe","setProjectIdToPackageJson","projectId","ae","setProjectIdToRefineComponent","jscodeshiftExecutable","execution","ce","w","updateProjectId","serveApi","db","pe","offset","limit","traceItems","activity","t","uniqueTraceItems","me","uniq","cachedInstalledPackages","force","cachedAvailablePackages","cachedLatestPackages","latest","cachedFeed","import_client","import_http_proxy_middleware","currentProjectId","projectIdAppender","restream","proxyReq","bodyData","tokenize","token","ORY_URL","ory","ue","data","saveAuth","jwt","k","S","loadAuth","handleLogoutToken","handleSignInCallbacks","onToken","proxyRes","body","chunk","sessionToken","tokenized","serveProxy","authProxy","b","rest","_token","_jwt","refineApiProxy","serveOpenInEditor","basePath","line","column","filePath","vscodeUrl","ge","Pe","c","index","record","name","reason","import_commander","import_figlet","import_cli_table3","import_chalk","import_center_align","import_ora","spinner","fn","message","ora","result","spinner_default","import_execa","import_fs_extra","import_globby","import_path","import_preferred_pm","getPackageJson","getDependencies","packageJson","getDevDependencies","packageJson","getPackageJson","getScripts","getInstalledRefinePackages","_a","execution","execa","dependencies","refineDependencies","dependency","normalize","version","getInstalledRefinePackagesFromNodeModules","REFINE_PACKAGES","packagesFromGlobbySearch","globby","packageDirsFromModules","pkg","pkgPath","__require","path","refinePackages","packageDir","isPackageHaveRefineConfig","packagePath","pmCommands","getPreferedPM","pm","spinner_default","preferredPM","installPackages","packages","installCommand","message","error","exitCode","installPackagesSync","parsePackageNameAndVersion","str","versionStartIndex","getRefineProjectId","isDevtoolsInstalled","uppercaseFirstChar","str","removeANSIColors","columns","orderedColumns","printUpdateWarningTable","params","_a","data","tableHead","table","Table","row","column","columnValue","installedVersion","parseVersions","latestVersion","colors","getColorsByVersionDiffrence","textMajor","chalk","textMinor","textPatch","tableOutput","tableWidth","removeANSIColors","center","getInstallCommand","text","versions","nextVersion","fallbackCommand","dependencies","getDependencies","scriptKeys","getScripts","hasCli","hasScript","pm","getPreferedPM","import_execa","import_semver_diff","load","program","action","packages","spinner_default","isRefineUptoDate","printUpdateWarningTable","getOutdatedRefinePackages","getOutdatedPackageList","list","changelog","packageName","dependency","item","semverDiff","pm","stdout","timedOut","execa","pmCommands","check_updates_default","ProjectTypes","UIFrameworks","PackageManagerTypes","getProjectType","platform","dependencies","getDependencies","devDependencies","getDevDependencies","getUIFramework","getResourcePath","projectType","getProviderPath","getFilesPathByProject","import_fs_extra","import_temp","import_pluralize","import_execa","import_inquirer","import_path","import_handlebars","import_fs_extra","compile","filePath","params","content","Handlebars","elem","list","options","string","compileDir","dirPath","file","templateFilePath","compiledFilePath","defaultActions","createResources","params","resources","_a","destinationPath","getResourcePath","getProjectType","actions","name","selectedActions","inquirer","value","resourceName","customActions","resourceFolderName","resourcePath","resource","uppercaseFirstChar","uiFramework","getUIFramework","sourceDir","tempDir","generateTempDir","compileParams","compileDir","action","destinationResourcePath","moveSyncOptions","temp","jscodeshiftExecutable","__require","stderr","stdout","execa","load","program","projectType","getProjectType","path","getResourcePath","action","params","options","createResources","create_resource_default","dotenv","envSearchMap","getNodeEnv","nodeEnv","env","key","value","ENV","import_express","import_http_proxy_middleware","load","program","action","ENV","port","target","domain","rewriteUrl","app","express","onProxyRes","proxyRes","_a","cookie","i","msg","proxy_default","import_commander","import_conf","import_chalk","stringToBase64","str","STORE_NAME","store","Conf","updateNotifier","isUpdateNotifierDisabled","shouldUpdate","shouldUpdatePackagesCache","updatePackagesCache","showWarning","packages","printUpdateWarningTable","isKeyValid","validateKey","isExpired","isPackagesCacheExpired","isRefineUptoDate","generateKeyFromPackages","lastUpdated","diff","cacheTTL","ENV","key","newKey","getInstalledRefinePackages","chalk","currentVersionsWithName","p","stringToBase64","projectScripts","args","__require","type","binName","import_execa","runScript","binPath","args","_a","_b","supportedProjectTypes","ProjectTypes","v","execution","execa","getRunnerDescription","runner","projectType","getProjectType","command","projectScripts","getPlatformOptionDescription","ProjectTypes","start","program","getRunnerDescription","getPlatformOptionDescription","ProjectTypes","type","action","args","platform","projectType","getProjectType","binPath","projectScripts","command","updateNotifier","runScript","start_default","import_commander","import_devtools_server","import_execa","import_prettier","prettierFormat","code","prettierConfig","addDevtoolsComponent","jscodeshiftExecutable","__require","stderr","execa","hasDefaultScript","scripts","getPackageJson","import_boxen","import_cardinal","import_chalk","import_commander","import_dedent","import_semver","commands","defaultCommand","minRefineCoreVersionForDevtools","load","program","action","command","devtoolsRunner","devtoolsInstaller","_a","corePackage","getRefineCorePackage","spinner_default","isDevtoolsInstalled","validateCorePackageIsNotDeprecated","packagesToInstall","semver","installPackagesSync","addDevtoolsComponent","updatedCorePackage","chalk","dev","hasDefaultScript","scriptDev","getPackageJson","boxen","cardinal","dedent","pm","getPreferedPM","installedRefinePackages","getInstalledRefinePackagesFromNodeModules","pkg","devtools_default","dev","program","getRunnerDescription","getPlatformOptionDescription","ProjectTypes","type","action","args","platform","params","projectType","getProjectType","binPath","projectScripts","command","updateNotifier","devtoolsDefault","isDevtoolsInstalled","devtoolsRunner","runScript","dev_default","import_commander","build","program","getRunnerDescription","getPlatformOptionDescription","ProjectTypes","type","action","args","platform","projectType","getProjectType","binPath","projectScripts","command","updateNotifier","runScript","build_default","import_chalk","run","program","action","args","script","restArgs","scriptsInPackage","getScripts","chalk","key","value","binPath","runScript","pm","getPreferedPM","run_default","import_path","import_chalk","import_inquirer","import_inquirer_autocomplete_prompt","import_fs_extra","import_path","import_path","src_exports","__export","PackageManagerTypes","ProjectTypes","UIFrameworks","appendAfterImports","getFileContent","getImports","getNameChangeInImport","packageRegex","nameChangeRegex","getImports","content","matches","imports","match","statement","defaultImport","namedImports","namespaceImport","importPath","getNameChangeInImport","namedImportString","nameChanges","fromName","_as","toName","afterCharacter","getContentBeforeImport","importMatch","_a","contentBeforeImport","lastImportStatement","isImportHasBeforeContent","IMPORT_ORDER","reorderImports","newContent","allImports","allModuleImports","typeImports","importsWithBeforeContent","importsWithoutBeforeContent","insertionPoint","importsByPackage","acc","joinedModuleImports","importMatches","namedImport","importLine","aImportPath","bImportPath","aImportOrderIndex","order","bImportOrderIndex","joinedTypeImports","appendAfterImports","content","append","imports","getImports","lastImport","lastImportIndex","import_fs_extra","import_path","getFileContent","path","Module","originalRequire","provideCliHelpers","packagePath","isAbsolute","args","src_exports","filePath","getFileContent","path","getRefineConfig","packagePath","isAbsolute","provideCliHelpers","__require","path","import_dedent","SWIZZLE_CODES","import_chalk","import_chalk","import_cardinal","import_boxen","getCodeData","content","titleRegexp","commentLine","titleMatch","title","code","renderCodeMarkdown","rawCode","highlighted","cardinal","boxen","chalk","import_marked","import_marked_terminal","markedTerminalRenderer","markdown","TerminalRenderer","renderCodeMarkdown","printSwizzleMessage","label","files","message","errors","statusCode","SWIZZLE_CODES","code","status","clearFilePath","filePath","relative","printStatusMessage","chalk","printFiles","chalks","targetPath","markedTerminalRenderer","dedent","parseSwizzleBlocks","content","regex","import_boxen","getPathPrefix","projectType","getProjectType","getFilesPathByProject","import_inquirer","import_chalk","installRequiredPackages","requiredPackages","promptForPackageInstallation","installPackages","displayManualInstallationCommand","message","pkg","inquirer","pm","getPreferedPM","pmCommand","pmCommands","packages","command","chalk","swizzle","program","chalk","action","getAutocompleteSource","rawList","_answers","input","el","_a","component","index","arr","inquirer","_options","_b","_c","inquirerAutoCompletePrompt","installedPackages","getInstalledRefinePackagesFromNodeModules","packagesWithConfig","pkg","hasConfig","isPackageHaveRefineConfig","isNotDuplicate","boxen","packageConfigs","config","getRefineConfig","selectedPackage","a","b","items","transform","selectedComponent","projectPathPrefix","getPathPrefix","createdFiles","file","srcPath","path","destPath","SWIZZLE_CODES","srcContent","parsedContent","parseSwizzleBlocks","fileTransformedContent","transformedContent","reorderedContent","reorderImports","formatted","prettierFormat","printSwizzleMessage","installRequiredPackages","swizzle_default","import_commander","import_inquirer","import_semver_diff","import_chalk","findDuplicates","arr","duplicates","item","index","unique","promptInteractiveRefineUpdate","packages","uiGroup","createUIGroup","inquirerUI","createInquirerUI","answers","inquirer","validatePrompt","input","names","pckg","parsePackageNameAndVersion","duplicates","findDuplicates","packagesCategorized","current","diffWanted","semverDiff","diffLatest","maxNameLength","maxFromLength","group","choices","packageColumnText","currentColumnText","header","chalk","pageSize","load","program","action","options","tag","dryRun","all","packages","spinner_default","isRefineUptoDate","selectedPackages","runAll","promptInteractiveRefineUpdate","printInstallCommand","pmInstall","pkg","version","pm","getPreferedPM","commandInstall","pmCommands","installPackages","update_default","import_envinfo","import_ora","whoami","program","action","spinner","ora","info","envinfo","packagesMarkdown","getInstalledRefinePackages","pkg","whoami_default","import_commander","import_fs_extra","import_path","templatePath","providerArgs","createProvider","providers","pathFromArgs","arg","fileName","getProviderOptions","folderPath","getDefaultPath","filePath","fullPath","providerOptions","provider","projectType","getProjectType","path","getProviderPath","load","program","providerArgs","action","_provider","_resource","options","command","args","printNoArgs","providers","resources","getGroupedArgs","createProvider","createResources","resourceIndex","arg","getValidProviders","name","getPreferedPM","provider","add_default","import_envinfo","import_os","getOSType","osPlatform","os","getOS","_","OSInfo","envinfo","import_node_fetch","getTelemetryData","os","getOS","ENV","getInstalledRefinePackages","getProjectType","getRefineProjectId","telemetryHook","data","fetch","import_gray_matter","import_boxen","ANNOUNCEMENT_URL","ANNOUNCEMENT_DELIMITER","splitAnnouncements","feed","section","parseAnnouncement","raw","fixed","parsed","matter","content","getAnnouncements","response","res","printAnnouncements","visibleAnnouncements","a","stringAnnouncements","dash","markedTerminalRenderer","boxen","REFINE_CLI_VERSION","bootstrap","program","figlet","swizzle_default","create_resource_default","update_default","dev_default","build_default","start_default","run_default","check_updates_default","whoami_default","proxy_default","devtools_default","add_default","printAnnouncements","thisCommand","command","telemetryHook"]}