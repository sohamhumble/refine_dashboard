#!/usr/bin/env node
var jt=Object.defineProperty;var v=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var $t=(e,t)=>{for(var r in t)jt(e,r,{get:t[r],enumerable:!0})};import{Command as nn}from"commander";import sn from"figlet";import Wt from"cli-table3";import $ from"chalk";import ce from"center-align";import Ut from"ora";var Ft=async(e,t)=>{let r=Ut({color:"cyan",text:t}).start(),n=await e();return r.stop(),n},O=Ft;import ae from"execa";import{existsSync as Bt,pathExists as ke,readFileSync as Mt,readJSON as Lt}from"fs-extra";import zt from"globby";import Ce from"path";import Vt from"preferred-pm";var _=()=>{if(!Bt("package.json"))throw new Error("./package.json not found");return JSON.parse(Mt("package.json","utf8"))},V=()=>{let e=_();return Object.keys(e.dependencies||{})};var Ne=()=>{let e=_();return Object.keys(e.devDependencies||{})},H=()=>_().scripts,j=async()=>{var e;try{let t=await ae("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},n=Object.keys(r).filter(s=>s.startsWith("@refinedev")||s.startsWith("@pankod/refine-")),o=[];for(let s of n){let a=r[s].version;o.push({name:s,version:a})}return o}catch{return Promise.resolve(null)}},W=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","nhost","react-hook-form","react-location","react-router-v6","react-table","remix","shared","simple-rest","strapi","strapi-graphql","strapi-v4","supabase"];try{let t=await zt("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(o=>{try{let s=v.resolve(Ce.join("@refinedev",o,"package.json"));return[Ce.dirname(s)]}catch{return[]}}),n=[];return await Promise.all([...r,...t].map(async o=>{if(await ke(`${o}/package.json`)){let a=await Lt(`${o}/package.json`);n.push({name:a.name,version:a.version,path:o})}})),n}catch{return[]}},be=async e=>await ke(`${e}/refine.config.js`),D={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]}},y=async()=>{let e=await O(()=>Vt(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},K=async e=>{let t=await y();try{let r=D[t.name].install,n=ae(t.name,[...r,...e],{stdio:"inherit"});n.on("message",o=>{console.log(o)}),n.on("error",o=>{console.log(o)}),n.on("exit",o=>{if(o===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${o}`)})}catch(r){throw new Error(r)}},Se=async e=>{let t=await y();try{let r=D[t.name].install,n=ae.sync(t.name,[...r,...e],{stdio:"inherit"});if(n.failed||n.exitCode!==0)throw new Error(n.stderr);return n}catch(r){throw new Error(r)}},Te=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},Oe=()=>{var t;let e=_();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},G=async()=>(await W()).some(t=>t.name==="@refinedev/devtools");var _e=e=>e.charAt(0).toUpperCase()+e.slice(1),De=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var Y={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},Ae=[Y.name,Y.current,Y.wanted,Y.latest,Y.changelog],Z=async e=>{var a;let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let n=new Wt({head:Ae,style:{head:["blue"]}});t.forEach(i=>{n.push(Ae.map(f=>{let c=i[f];if(!c)return c;if(f==="latest"||f==="wanted"){let d=je(i.current),h=je(c),P=Yt(d,h),m=$[P.major](h.major),l=$[P.minor](h.minor),p=$[P.patch](h.patch);return`${m}.${l}.${p}`}return f==="changelog"?$.blueBright.underline(c):c}))});let o=n.toString(),s=De(((a=o.split(`
`))==null?void 0:a[0])||"").length;console.log(),console.log(ce("Update Available",s)),console.log(o),console.log(ce(`To update ${$.bold("`refine`")} packages with wanted version`,s)),console.log(ce(` Run the following command: ${$.yellowBright(await qt())}`,s)),console.log()},je=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},Yt=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},qt=async()=>{let e="npx @refinedev/cli update",t=V(),r=Object.keys(H()),n=t.includes("@refinedev/cli"),o=r.includes("refine");if(!n&&!o)return e;let s=await y();return o?`${s.name} run refine update`:n?"npx refine update":e};import Jt from"execa";import Xt from"semver-diff";var Ht=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(Kt),Kt=async()=>{let e=await O(q,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await Z({data:e})},q=async()=>await Gt(),Gt=async()=>{let e=await Zt();if(!e)return[];let t=[],r;return Object.keys(e).forEach(o=>{let s=e[o];o.includes("@refinedev")&&(r=o.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:o,current:s.current,wanted:s.wanted,latest:s.latest,changelog:r}))}),t.filter(o=>!!Xt(o.current,o.latest))},Zt=async()=>{let e="npm",{stdout:t,timedOut:r}=await Jt(e,D[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},$e=Ht;var w=(i=>(i.REACT_SCRIPT="react-scripts",i.REMIX="remix",i.NEXTJS="nextjs",i.VITE="vite",i.CRACO="craco",i.PARCEL="parcel",i.UNKNOWN="unknown",i))(w||{});var le=(o=>(o.ANTD="antd",o.MUI="mui",o.MANTINE="mantine",o.CHAKRA="chakra-ui",o))(le||{});var Ue=(n=>(n.NPM="npm",n.YARN="yarn",n.PNPM="pnpm",n))(Ue||{});var g=e=>{if(e)return e;let t=V(),r=Ne();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Fe=()=>{let e=V();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var J=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},Be=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},Me=e=>{switch(e){case"remix":return"./app";case"nextjs":case"react-scripts":case"vite":case"craco":case"parcel":case"unknown":default:return"./src"}};import{copySync as sr,unlinkSync as ir,moveSync as ar,pathExistsSync as ze,mkdirSync as cr}from"fs-extra";import pe from"temp";import{plural as lr}from"pluralize";import pr from"execa";import mr from"inquirer";import{join as Ve}from"path";import U from"handlebars";import{readFileSync as Qt,readdirSync as er,createFileSync as tr,writeFileSync as rr,unlinkSync as or}from"fs-extra";var nr=(e,t)=>{let r=Qt(e);return U.registerHelper("ifIn",function(o,s,a){return o.includes(s)?a.fn(U):a.inverse(U)}),U.registerHelper("formatInferencerComponent",function(o){if(o)switch(o){case"chakra-ui":return"ChakraUI";default:return o.charAt(0).toUpperCase()+o.slice(1)}}),U.registerHelper("capitalize",function(o){if(o)return o.charAt(0).toUpperCase()+o.slice(1)}),U.compile(r.toString())(t)},Le=(e,t)=>{er(e).forEach(n=>{let o=`${e}/${n}`,s=`${e}/${n.replace(".hbs","")}`;tr(s),rr(s,nr(o,t)),or(o)})};var Q=["list","create","edit","show"],ee=async(e,t)=>{var o;let r=(e==null?void 0:e.path)||J(g()).path,n=e.actions||Q.join(",");if(!t.length){let{name:s,selectedActions:a}=await mr.prompt([{type:"input",name:"name",message:"Resource Name",validate:i=>i?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:Q,default:(o=e==null?void 0:e.actions)==null?void 0:o.split(",")}]);t=[s],n=a.join(",")}t.forEach(s=>{let a=n?n.split(","):void 0,i=lr(s).toLowerCase(),f=Ve(process.cwd(),r,i);if(ze(f)){console.error(`\u274C Resource (${Ve(r,i)}) already exist!`);return}let c=_e(s),d=Fe(),h=`${__dirname}/../templates/resource`,P=dr();sr(h,P);let m={resourceName:s,resource:c,actions:a||Q,uiFramework:d};Le(P,m),a&&Q.forEach(b=>{a.includes(b)||ir(`${P}/${b}.tsx`)}),cr(r,{recursive:!0});let l=`${r}/${i}`,p={};ze(l)&&(p={overwrite:!0}),ar(P,l,p),pe.cleanupSync();let u=v.resolve(".bin/jscodeshift"),{stderr:k,stdout:I}=pr.sync(u,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**",`--__actions=${m.actions}`,`--__pathAlias=${J(g()).alias}`,`--__resourceFolderName=${i}`,`--__resource=${c}`,`--__resourceName=${s}`]);k&&console.log(k),console.log(`\u{1F389} Resource (${l}) generated successfully!`)})},dr=()=>(pe.track(),pe.mkdirSync("resource"));var ur=e=>{let t=g(),{path:r}=J(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(fr)},fr=async(e,t)=>{ee(e,t.args)},We=ur;import*as Ye from"dotenv";Ye.config();var gr={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},hr=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,n]of Object.entries(gr))if(n.test(e)){t=r;break}return t},C={NODE_ENV:hr(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};import vr from"express";import{createProxyMiddleware as me}from"http-proxy-middleware";var wr=e=>e.command("proxy").description("Manage proxy settings").action(yr).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",C.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",C.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",C.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",C.REFINE_PROXY_REWRITE_URL),yr=async({port:e,target:t,domain:r,rewriteUrl:n})=>{let o=vr(),a=new URL(t).protocol==="http:"?i=>{var f;i.headers["set-cookie"]&&((f=i.headers["set-cookie"])==null||f.forEach((c,d)=>{i&&i.headers&&i.headers["set-cookie"]&&(i.headers["set-cookie"][d]=c.replace("Secure;",""))}))}:void 0;o.use("/.refine",me({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:i=>{`${i}`.includes("Proxy rewrite rule created")||(`${i}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):i&&console.log(i))},warn:console.warn,debug:console.debug,error:console.error})})),o.use("/.auth",me({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${n}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:i=>{`${i}`.includes("Proxy rewrite rule created")||(`${i}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):i&&console.log(i))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:a})),o.use("*",me({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:i=>{`${i}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):i&&console.log(i)},warn:console.warn,debug:console.debug,error:console.error})})),o.listen(Number(e))},qe=wr;import{Option as Sr}from"commander";import xr from"conf";import Pr from"chalk";var Je=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var Er="refine-update-notifier",S=new xr({projectName:Er,defaults:{key:"",lastUpdated:0,packages:[]}}),F=async()=>{if(Nr())return;let e=await Ir();if(e!==null){if(e){Xe();return}Rr(),Xe()}},Rr=async()=>{let e=S.get("packages");e!=null&&e.length&&(await Z({data:e}),console.log(`
`))},Ir=async()=>{let e=await kr(),t=Cr();return e===null?null:!!(t||!e)},Xe=async()=>{try{let e=await q();return S.set("packages",e),S.set("lastUpdated",Date.now()),S.set("key",await He()),e}catch{return S.set("packages",[]),S.set("lastUpdated",Date.now()),S.set("key",""),null}},Cr=()=>{let e=S.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,n=Number(C.UPDATE_NOTIFIER_CACHE_TTL);return r>=n},kr=async()=>{let e=S.get("key"),t=await He();return t===null?null:e===t},He=async()=>{let e=await j();if(!e)return console.error(Pr.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(n=>`${n.name}@${n.version}`);return Je(t.toString())},Nr=()=>C.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var E={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return v.resolve(`${process.cwd()}/node_modules/.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};import br from"execa";var T=async(e,t)=>{var n,o;if(e==="unknown"){let s=Object.values(w).filter(a=>a!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${s}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=br(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(n=r.stdout)==null||n.pipe(process.stdout),(o=r.stderr)==null||o.pipe(process.stderr),await r};var B=e=>{let t=g(),r=[];switch(e){case"dev":r=E[t].getDev([""]);break;case"start":r=E[t].getStart([""]);break;case"build":r=E[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},M=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var Tr=e=>e.command("start").description(B("start")).allowUnknownOption(!0).addOption(new Sr("-p, --platform <platform>",M()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Or),Or=async(e,{platform:t})=>{let r=g(t),n=E[r].getBin("start"),o=E[r].getStart(e);await F(),T(n,o)},de=Tr;import{Option as rt}from"commander";import{server as jr}from"@refinedev/devtools-server";import Ar from"execa";import{format as _r,resolveConfig as Dr}from"prettier";var ue=async e=>{try{let t=await Dr(process.cwd());return _r(e,{...t??{},parser:"typescript"})}catch{return e}};var Ke=async()=>{let e=v.resolve(".bin/jscodeshift"),{stderr:t}=Ar.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**"]);t&&console.log(t)};var Ge=()=>{let t=_().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};import $r from"boxen";import Ur from"cardinal";import Ze from"chalk";import{Argument as Fr}from"commander";import Br from"dedent";import ge from"semver";var Mr=["start","init"],Lr="start",Qe="4.42.0",zr=e=>e.command("devtools").description("Start or install refine's devtools server; it starts on port 5001.").addArgument(new Fr("[command]","devtools related commands").choices(Mr).default(Lr)).addHelpText("after",`
Commands:
    start     Start refine's devtools server
    init      Install refine's devtools client and adds it to your project
`).action(Vr),Vr=async e=>{switch(e){case"start":he();return;case"init":Wr();return}},Wr=async()=>{var o;let e=await fe();if(await O(G,"Checking if devtools is installed...")){console.log("\u{1F389} refine devtools is already installed");return}if(e&&await et({pkg:e}))return;console.log("\u{1F331} Installing refine devtools...");let r=["@refinedev/devtools@latest"];if((!e||ge.lt(e.version,Qe))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} refine core package is being updated for devtools...")),await Se(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await Ke(),console.log("\u2705 refine devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let s=await fe();console.log(`\u2705 refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(s==null?void 0:s.version)??"unknown"}`),console.log(`   Changelog: ${Ze.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:n}=Ge();if(n){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!n){let s=(o=_().scripts)==null?void 0:o.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log($r(Ur.highlight(Br(`
                {
                    "scripts": {
                        "dev": "${s} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},he=async()=>{let e=await fe();if(e){if(await et({pkg:e}))return;if(ge.lt(e.version,Qe)){console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`);let t=await y();console.log(`\u{1F449} You can update @refinedev/core package by running "${t.name} run refine update"`);return}}jr()},fe=async()=>{let e=await W(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},et=async({pkg:e})=>e.name==="@pankod/refine-core"||ge.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update refine."),console.log(Ze.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,tt=zr;var Yr=e=>e.command("dev").description(B("dev")).allowUnknownOption(!0).addOption(new rt("-p, --platform <platform>",M()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new rt("-d, --devtools <devtools>","Start refine's devtools server").default("true","true if devtools is installed")).argument("[args...]").action(qr),qr=async(e,{platform:t,...r})=>{let n=g(t),o=E[n].getBin("dev"),s=E[n].getDev(e);await F();let a=await G();(r.devtools==="false"?!1:a)&&he(),T(o,s)},ve=Yr;import{Option as Jr}from"commander";var Xr=e=>e.command("build").description(B("build")).allowUnknownOption(!0).addOption(new Jr("-p, --platform <platform>",M()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Hr),Hr=async(e,{platform:t})=>{let r=g(t),n=E[r].getBin("build"),o=E[r].getBuild(e);await F();try{await T(n,o)}catch{process.exit(1)}},we=Xr;import ot from"chalk";var Kr=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(Gr),Gr=async e=>{let[t,...r]=e,n=H();if(!t){console.log(`Available via ${ot.blue("`refine run`")}:
`);for(let[a,i]of Object.entries(n))console.log(`  ${a}`),console.log(`    ${ot.dim(i)}`),console.log();return}if(!Object.keys(n).includes(t)){let a=`${process.cwd()}/node_modules/.bin/${t}`;T(a,r);return}let s=await y();T(s.name,["run",t,...r])},ye=Kr;import ht from"path";import z from"chalk";import oe from"inquirer";import wo from"inquirer-autocomplete-prompt";import{ensureFile as yo,pathExists as vt,readFile as xo,writeFile as Po}from"fs-extra";import pt from"path";import no from"path";var xe={};$t(xe,{PackageManagerTypes:()=>Ue,ProjectTypes:()=>w,UIFrameworks:()=>le,appendAfterImports:()=>at,getFileContent:()=>te,getImports:()=>L,getNameChangeInImport:()=>st});var Zr=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Qr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,L=e=>{let t=e.matchAll(Zr),r=[];for(let n of t){let[o,s,a,i,f]=n;r.push({statement:o,importPath:f,...s&&{defaultImport:s},...a&&{namedImports:a},...i&&{namespaceImport:i}})}return r==null?void 0:r.filter(Boolean)},st=e=>{let t=e.matchAll(Qr),r=[];for(let n of t){let[o,s,a,i,f]=n;r.push({statement:o,fromName:s.trim(),toName:i.trim(),afterCharacter:f})}return r},eo=(e,t)=>{var s;let r=e.substring(0,e.indexOf(t.statement)),n=L(r).pop();return n?r.substring(r.indexOf(n==null?void 0:n.statement)+((s=n==null?void 0:n.statement)==null?void 0:s.length)):r},to=(e,t)=>!!(t?eo(e,t):"").trim(),nt=["react","@refinedev/core","@refinedev/"],it=e=>{var m;let t=e,r=L(e),n=r.filter(l=>!l.statement.includes("import type ")),o=r.filter(l=>l.statement.includes("import type")),s=[],a=[];n.forEach(l=>{to(e,l)?s.push(l):a.push(l)});let i=t.indexOf((m=a==null?void 0:a[0])==null?void 0:m.statement);a.forEach(l=>{t=t.replace(l.statement,"")}),o.forEach(l=>{t=t.replace(l.statement,"")});let f=a.reduce((l,p)=>{let{importPath:u}=p;return l[u]?l[u].push(p):l[u]=[p],l},{}),h=[...Object.entries(f).map(([l,p])=>{let u=p.find(N=>N.defaultImport),k=p.find(N=>N.namespaceImport),I=p.filter(N=>N.namedImports).map(N=>(N.namedImports??"").replace(/{|}/g,"").trim().split(",").map(ie=>ie.trim()).filter(Boolean).join(", ")).join(", "),b="";return k&&(b+=k.statement+`
`),(u||I)&&(u&&I?b+=`import ${u.defaultImport}, { ${I} } from "${p[0].importPath}";
`:u?b+=`import ${u.defaultImport} from "${p[0].importPath}";
`:b+=`import { ${I} } from "${p[0].importPath}";
`),[l,b]})].sort(([l],[p])=>{let u=nt.findIndex(I=>l.includes(I)),k=nt.findIndex(I=>p.includes(I));return u===k?l.localeCompare(p):u===-1?1:k===-1?-1:u-k}).map(([,l])=>l).join(""),P=o.map(l=>l.statement).join(`
`);return t=t.substring(0,i)+h+P+t.substring(i),t};var at=(e,t)=>{let r=L(e),n=r[r.length-1],o=n?e.indexOf(n.statement):e.length-1;return e.slice(0,o+(n==null?void 0:n.statement.length))+`
`+t+`
`+e.slice(o+(n==null?void 0:n.statement.length))};import{readFileSync as ro}from"fs-extra";import{join as oo}from"path";function te(e){if(this!=null&&this.absolutePackageDir)try{return ro(oo(this.absolutePackageDir,e)).toString()}catch{return}}var ct=v("module"),so=ct.prototype.require,lt=(e,t)=>{ct.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...xe,getFileContent:n=>te.call({absolutePackageDir:t?e:no.join(process.cwd(),e)},n)}:so.apply(this,r)}};var Pe=async(e,t)=>{try{return lt(e,t),v(pt.join(t?e:pt.join(process.cwd(),e),"refine.config.js"))}catch{return}};import uo from"dedent";var R={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import x from"chalk";import io from"chalk";import ao from"cardinal";import co from"boxen";var lo=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,n]=t.exec(e)??[];if(n){let o=n.trim(),s=e.replace(r||"","");return{title:o,code:s}}return{code:e}},mt=e=>{let{title:t,code:r}=lo(e),n="";try{n=ao.highlight(r,{jsx:!0})}catch{n=r}return co(n,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?io.bold(t):void 0})};import{marked as po}from"marked";import mo from"marked-terminal";var re=e=>po(e,{renderer:new mo({code:mt})});var dt=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let n=t.filter(([,c])=>Object.values(R).filter(d=>d!==R.SUCCESS).includes(c)),o="success";switch(n.length){case 0:o="success";break;case t.length:o="error";break;default:o="warning";break}let s=c=>{let d=c==null?void 0:c.replace(process.cwd(),"");return d!=null&&d.startsWith("/")?d.slice(1):d!=null&&d.startsWith("./")?d.slice(2):d},a=()=>{switch(o){case"success":console.log(x.blueBright(`Successfully swizzled ${x.bold(e)}`));return;case"warning":console.log(x.yellowBright(`Swizzle completed with errors for ${x.bold(e)}`));return;case"error":console.log(x.redBright(`Swizzle failed for ${x.bold(e)}`));return;default:return}},i=()=>{let c=[];c.push(x.dim(`File${t.length>1?"s":""} created:`)),c.push(t.map(([d,h])=>h===R.SUCCESS?x.cyanBright.dim(` - ${s(d)}`):h===R.TARGET_ALREADY_EXISTS?x.cyanBright.dim(` - ${x.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${s(d)}`):h===R.SOURCE_PATH_NOT_A_FILE?x.cyanBright.dim(` - ${x.yellowBright.bold("[SOURCE NOT FOUND] ")}${s(d)}`):x.cyanBright.dim(` - ${x.yellowBright.bold(`[${h}]`)}${s(d)}`)).join(`
`)),console.log(c.join(`
`))},f=()=>{r&&o!=="error"&&console.log(re(uo(`
`+r)))};console.log(""),a(),i(),console.log(""),f()};var ut=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import Eo from"boxen";var ft=()=>{let e;try{e=g()}catch{e=void 0}return Me(e)};import fo from"inquirer";import go from"chalk";var gt=async e=>{await ho(e)?await K(e):await vo(e)},ho=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(n=>` - ${n}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await fo.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},vo=async e=>{let t=await y(),r=D[t.name].install.join(" "),n=e.join(" "),o=`${t.name} ${r} ${n}`;console.log(`
You can install them manually by running this command:`),console.log(go.bold.blueBright(o))};var Ro=e=>e.command("swizzle").description(`Export a component or a function from ${z.bold("refine")} packages to customize it in your project`).action(Io),wt=e=>(t,r="")=>e.filter(o=>{var s;return o.label.toLowerCase().includes(r.toLowerCase())||((s=o.group)==null?void 0:s.toLowerCase().includes(r.toLowerCase()))}).flatMap((o,s,a)=>{var c;return[...(o==null?void 0:o.group)&&((c=a[s-1])==null?void 0:c.group)!==o.group&&o.group?[new oe.Separator(`${z.bold(o.group)}`)]:[],{name:` ${o.label}`,value:o!=null&&o.value?o.value:o}]}),Io=async e=>{var d,h,P;oe.registerPrompt("autocomplete",wo);let t=await W(),r=[];if(await Promise.all(t.map(async m=>{let l=await be(m.path),p=r.findIndex(u=>u.name===m.name)===-1;l&&p&&r.push(m)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${Eo(`Found ${z.blueBright(r.length)} installed ${z.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let n=await Promise.all(r.map(async m=>{let l=await Pe(m.path,!0)??await Pe(m.path,!1)??{swizzle:{items:[]}};return{...m,config:l}})),{selectedPackage:o}=await oe.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:wt(n.sort((m,l)=>{var p,u;return(((p=m.config)==null?void 0:p.group)??"").localeCompare(((u=l.config)==null?void 0:u.group)??"")}).map(m=>{var l,p;return{label:((l=m.config)==null?void 0:l.name)??m.name,value:m,group:(p=m.config)==null?void 0:p.group}}))}]),{swizzle:{items:s,transform:a}}=o.config,i;if(s.length===0){console.log(`No swizzle items found for ${z.bold(((d=o.config)==null?void 0:d.name)??o.name)}`);return}else s.length===1?i=s[0]:s.length>1&&(i=(await oe.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:wt(s.sort((l,p)=>l.group.localeCompare(p.group)))({},"")}])).selectedComponent);if(!i){console.log(`No swizzle items selected for ${z.bold(((h=o.config)==null?void 0:h.name)??o.name)}`);return}let f=ft(),c=await Promise.all(i.files.map(async m=>{var l;try{let p=m.src?ht.join(o.path,m.src):void 0,u=m.dest?ht.join(process.cwd(),f,m.dest):void 0;if(!p)return console.log("No src path found for file",m),["",R.SOURCE_PATH_NOT_FOUND];if(!u)return console.log("No destination path found for file",m),["",R.TARGET_PATH_NOT_FOUND];if(!await vt(p))return[u,R.SOURCE_PATH_NOT_A_FILE];let I=await xo(p,"utf-8");if(await vt(u))return[u,R.TARGET_ALREADY_EXISTS];await yo(u);let N=ut(I),se=((l=m.transform)==null?void 0:l.call(m,N))??N,ie=(a==null?void 0:a(se,p,u))??se,Dt=it(ie),At=await ue(Dt);return await Po(u,At),[u,R.SUCCESS]}catch{return["",R.UNKNOWN_ERROR]}}));c.length>0&&(dt({files:c,label:i.label,message:i.message}),(P=i==null?void 0:i.requiredPackages)!=null&&P.length&&await gt(i.requiredPackages))},yt=Ro;import{Option as bo}from"commander";import X from"inquirer";import Pt from"semver-diff";import Ee from"chalk";var xt=e=>{let t=e.filter((n,o)=>e.indexOf(n)!==o),r=new Set(t);return Array.from(r)};var Et=async e=>{let t=ko(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=No(t),n=await X.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:Co}]);return n.packages.length>0?n.packages:null},Co=e=>{let r=e.map(o=>Te(o)).map(o=>o.name),n=xt(r);return n.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${n.join(", ")}`:!0},ko=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let n=r.current,o=Pt(n,r.wanted),s=Pt(n,r.latest);if(o===s&&s){t[s].push({name:r.name,from:n,to:r.latest});return}o&&t[o].push({name:r.name,from:n,to:r.wanted}),s&&t[s].push({name:r.name,from:n,to:r.latest})}),t},No=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(c=>{c.forEach(d=>{d.name.length>t&&(t=d.name.length),d.from.length>r&&(r=d.from.length)})}),t+=2;let n=[],o="Package".padEnd(t),s="From".padEnd(r),i=`
   ${o} ${s}${"To".padStart(r)}`;n.push(new X.Separator(i)),e.patch.length>0&&(n.push(new X.Separator(Ee.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(c=>{n.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})})),e.minor.length>0&&(n.push(new X.Separator(Ee.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(c=>{n.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})})),e.major.length>0&&(n.push(new X.Separator(Ee.reset.bold.blue(`
Major Updates`))),e.major.forEach(c=>{n.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})}));let f=n.length+6;return{choices:n,pageSize:f}};var So=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new bo("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(To),To=async e=>{let{tag:t,dryRun:r,all:n}=e,o=await O(q,"Checking for updates...");if(!(o!=null&&o.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let s=n?Oo(t,o):await Et(o);if(s){if(r){_o(s);return}Do(s)}},Oo=(e,t)=>e==="wanted"&&t.every(o=>o.current===o.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(n=>{let o=e==="wanted"?n.wanted:e;return`${n.name}@${o}`}),_o=async e=>{let t=await y(),r=D[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},Do=e=>{console.log("Updating `refine` packages..."),console.log(e),K(e)},Rt=So;import Ao from"envinfo";import jo from"ora";var $o=e=>e.command("whoami").description("View the details of the development environment").action(Uo),Uo=async()=>{let e=jo("Loading environment details...").start(),t=await Ao.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),n=(await j()||[]).map(o=>` - ${o.name}: ${o.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(n)},It=$o;import{Argument as Nt}from"commander";import{copySync as Fo,mkdirSync as Bo,pathExistsSync as Mo}from"fs-extra";import{join as Ct}from"path";var A=`${__dirname}/../templates/provider`,Re=["auth","live","data","access-control","notification","i18n","audit-log"],kt=(e,t)=>{e.forEach(r=>{let{fileName:n,templatePath:o}=Lo(r),s=t??zo(),a=Ct(s,n),i=Ct(process.cwd(),s,n);if(Mo(i)){console.error(`\u274C Provider (${a}) already exist!`);return}Bo(s,{recursive:!0}),Fo(o,i),console.log(`\u{1F389} Provider (${a}) created successfully!`)})},ne={auth:{fileName:"auth-provider.tsx",templatePath:`${A}/demo-auth-provider.tsx`},live:{fileName:"live-provider.tsx",templatePath:`${A}/demo-live-provider.tsx`},data:{fileName:"data-provider.tsx",templatePath:`${A}/demo-data-provider.tsx`},"access-control":{fileName:"access-control-provider.tsx",templatePath:`${A}/demo-access-control-provider.tsx`},notification:{fileName:"notification-provider.tsx",templatePath:`${A}/demo-notification-provider.tsx`},i18n:{fileName:"i18n-provider.tsx",templatePath:`${A}/demo-i18n-provider.tsx`},"audit-log":{fileName:"audit-log-provider.tsx",templatePath:`${A}/demo-audit-log-provider.tsx`}},Lo=e=>{if(!(ne!=null&&ne[e]))throw new Error(`Invalid provider: ${e}`);return ne[e]},zo=()=>{let e=g(),{path:t}=Be(e);return t};var Vo=e=>e.command("add").allowExcessArguments(!1).addArgument(new Nt("[provider]","Create a new provider").choices([...Re,"resource"]).argOptional()).addArgument(new Nt("[resource...]","Create a new resource files").argOptional()).option("-p, --path [path]","Path to generate files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Wo),Wo=async(e,t,r,n)=>{let o=n==null?void 0:n.args;if(!o.length){await qo();return}let{providers:s,resources:a}=Yo(o);s.length&&kt(s,r==null?void 0:r.path),o.includes("resource")&&ee({actions:r==null?void 0:r.actions,path:r==null?void 0:r.path},a)},Yo=e=>{let t=e.findIndex(o=>o==="resource");if(t===-1)return{providers:bt(e),resources:[]};let r=bt(e.slice(0,t)),n=e.slice(t+1);return{providers:r,resources:n}},qo=async()=>{let{name:e}=await y();console.log("\u274C Please provide a feature name"),console.log(`For more information please use: "${e} run refine add help"`)},bt=e=>e.filter(t=>Re.includes(t)?!0:(console.log(`\u274C "${t}" is not a valid provider`),!1)),St=Vo;import Jo from"envinfo";import Xo from"os";var Ho=()=>{let e=Xo.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},Tt=async()=>{let[e,t]=await Jo.helpers.getOSInfo();return{name:Ho(),version:t}};import Ko from"node-fetch";var Go=async()=>{let e=await Tt();return{nodeEnv:C.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await j()||[],projectFramework:g(),projectId:Oe()}},Ot=async()=>{if(C.REFINE_NO_TELEMETRY!=="true")try{let e=await Go();await Ko("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};import Zo from"gray-matter";import Qo from"boxen";var en="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",Ie="---announcement",tn=e=>e.split(Ie).slice(1).map(r=>`${Ie}${r}`),rn=e=>{let t=e.replace(Ie,"---"),r=Zo(t),n=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:n}},on=async()=>{try{let e=await fetch(en).then(r=>r.text()).catch(()=>"");return tn(e).map(r=>rn(r))}catch{return[]}},_t=async()=>{let t=(await on()).filter(n=>!n.hidden);if(t.length===0)return;let r=t.map(n=>{let o=t.length>1?"\u2014 ":"",s=re(n.content);return`${o}${s}`}).join("").trim();console.log(Qo(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var an="1.0.0",cn=()=>{let e=new nn;e.version(`@refinedev/cli@${an}`,"-v, --version","Output the current version.").description(sn.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),yt(e),We(e),Rt(e),ve(e),we(e),de(e),ye(e),$e(e),It(e),qe(e),tt(e),St(e),e.hook("preAction",_t),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||Ot()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};cn();
//# sourceMappingURL=cli.js.map